

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Feb 21 16:57:26 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32  0000                     
    33                           ; Version 1.41
    34                           ; Generated 25/01/2017 GMT
    35                           ; 
    36                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F4620 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     
    68                           	psect	smallconst
    69  001000                     __psmallconst:
    70                           	opt stack 0
    71  001000  00                 	db	0
    72  001001                     _keys:
    73                           	opt stack 0
    74  001001  31                 	db	49
    75  001002  32                 	db	50
    76  001003  33                 	db	51
    77  001004  41                 	db	65
    78  001005  34                 	db	52
    79  001006  35                 	db	53
    80  001007  36                 	db	54
    81  001008  42                 	db	66
    82  001009  37                 	db	55
    83  00100A  38                 	db	56
    84  00100B  39                 	db	57
    85  00100C  43                 	db	67
    86  00100D  2A                 	db	42
    87  00100E  30                 	db	48
    88  00100F  23                 	db	35
    89  001010  44                 	db	68
    90  001011  00                 	db	0
    91  001012                     __end_of_keys:
    92                           	opt stack 0
    93  001012                     _hexpowers:
    94                           	opt stack 0
    95  001012  0001               	dw	1
    96  001014  0010               	dw	16
    97  001016  0100               	dw	256
    98  001018  1000               	dw	4096
    99  00101A                     __end_of_hexpowers:
   100                           	opt stack 0
   101  00101A                     _currtime:
   102                           	opt stack 0
   103  00101A  30                 	db	48
   104  00101B  11                 	db	17
   105  00101C  20                 	db	32
   106  00101D  03                 	db	3
   107  00101E  07                 	db	7
   108  00101F  02                 	db	2
   109  001020  17                 	db	23
   110  001021                     __end_of_currtime:
   111                           	opt stack 0
   112  0000                     _CCP1CONbits	set	4029
   113  0000                     _SSPBUF	set	4041
   114  0000                     _SSPADD	set	4040
   115  0000                     _SSPCON2	set	4037
   116  0000                     _SSPCON1	set	4038
   117  0000                     _SSPSTAT	set	4039
   118  0000                     _LATAbits	set	3977
   119  0000                     _ADCON1	set	4033
   120  0000                     _ADCON0	set	4034
   121  0000                     _LATEbits	set	3981
   122  0000                     _LATDbits	set	3980
   123  0000                     _LATE	set	3981
   124  0000                     _LATD	set	3980
   125  0000                     _LATC	set	3979
   126  0000                     _LATB	set	3978
   127  0000                     _LATA	set	3977
   128  0000                     _T2CON	set	4042
   129  0000                     _CCPR1L	set	4030
   130  0000                     _CCP1CON	set	4029
   131  0000                     _PR2	set	4043
   132  0000                     _TRISE	set	3990
   133  0000                     _TRISD	set	3989
   134  0000                     _TRISC	set	3988
   135  0000                     _TRISB	set	3987
   136  0000                     _TRISA	set	3986
   137  0000                     _OSCTUNEbits	set	3995
   138  0000                     _OSCCON	set	4051
   139  0000                     _PORTB	set	3969
   140  0000                     _PORTBbits	set	3969
   141  0000                     _ACKEN	set	32300
   142  0000                     _ACKDT	set	32301
   143  0000                     _RCEN	set	32299
   144  0000                     _PEN	set	32298
   145  0000                     _RSEN	set	32297
   146  0000                     _SEN	set	32296
   147  0000                     _TRISC4	set	31908
   148  0000                     _TRISC3	set	31907
   149  001021                     STR_13:
   150  001021  30                 	db	48	;'0'
   151  001022  31                 	db	49	;'1'
   152  001023  32                 	db	50	;'2'
   153  001024  33                 	db	51	;'3'
   154  001025  34                 	db	52	;'4'
   155  001026  35                 	db	53	;'5'
   156  001027  36                 	db	54	;'6'
   157  001028  37                 	db	55	;'7'
   158  001029  38                 	db	56	;'8'
   159  00102A  39                 	db	57	;'9'
   160  00102B  61                 	db	97	;'a'
   161  00102C  62                 	db	98	;'b'
   162  00102D  63                 	db	99	;'c'
   163  00102E  64                 	db	100	;'d'
   164  00102F  65                 	db	101	;'e'
   165  001030  66                 	db	102	;'f'
   166  001031  00                 	db	0
   167  001032                     STR_1:
   168  001032  25                 	db	37
   169  001033  30                 	db	48	;'0'
   170  001034  32                 	db	50	;'2'
   171  001035  78                 	db	120	;'x'
   172  001036  2F                 	db	47
   173  001037  25                 	db	37
   174  001038  30                 	db	48	;'0'
   175  001039  32                 	db	50	;'2'
   176  00103A  78                 	db	120	;'x'
   177  00103B  2F                 	db	47
   178  00103C  25                 	db	37
   179  00103D  30                 	db	48	;'0'
   180  00103E  32                 	db	50	;'2'
   181  00103F  78                 	db	120	;'x'
   182  001040  20                 	db	32
   183  001041  00                 	db	0
   184  001042                     STR_5:
   185  001042  53                 	db	83	;'S'
   186  001043  6F                 	db	111	;'o'
   187  001044  72                 	db	114	;'r'
   188  001045  74                 	db	116	;'t'
   189  001046  69                 	db	105	;'i'
   190  001047  6E                 	db	110	;'n'
   191  001048  67                 	db	103	;'g'
   192  001049  20                 	db	32
   193  00104A  63                 	db	99	;'c'
   194  00104B  61                 	db	97	;'a'
   195  00104C  6E                 	db	110	;'n'
   196  00104D  73                 	db	115	;'s'
   197  00104E  2E                 	db	46
   198  00104F  2E                 	db	46
   199  001050  2E                 	db	46
   200  001051  00                 	db	0
   201  001052                     STR_6:
   202  001052  41                 	db	65	;'A'
   203  001053  6E                 	db	110	;'n'
   204  001054  79                 	db	121	;'y'
   205  001055  20                 	db	32
   206  001056  6B                 	db	107	;'k'
   207  001057  65                 	db	101	;'e'
   208  001058  79                 	db	121	;'y'
   209  001059  20                 	db	32
   210  00105A  74                 	db	116	;'t'
   211  00105B  6F                 	db	111	;'o'
   212  00105C  20                 	db	32
   213  00105D  73                 	db	115	;'s'
   214  00105E  74                 	db	116	;'t'
   215  00105F  6F                 	db	111	;'o'
   216  001060  70                 	db	112	;'p'
   217  001061  00                 	db	0
   218  001062                     STR_7:
   219  001062  52                 	db	82	;'R'
   220  001063  75                 	db	117	;'u'
   221  001064  6E                 	db	110	;'n'
   222  001065  23                 	db	35
   223  001066  31                 	db	49	;'1'
   224  001067  20                 	db	32
   225  001068  20                 	db	32
   226  001069  20                 	db	32
   227  00106A  20                 	db	32
   228  00106B  41                 	db	65	;'A'
   229  00106C  3A                 	db	58	;':'
   230  00106D  4E                 	db	78	;'N'
   231  00106E  65                 	db	101	;'e'
   232  00106F  78                 	db	120	;'x'
   233  001070  74                 	db	116	;'t'
   234  001071  00                 	db	0
   235  001072                     STR_12:
   236  001072  23                 	db	35
   237  001073  20                 	db	32
   238  001074  73                 	db	115	;'s'
   239  001075  6F                 	db	111	;'o'
   240  001076  75                 	db	117	;'u'
   241  001077  70                 	db	112	;'p'
   242  001078  20                 	db	32
   243  001079  63                 	db	99	;'c'
   244  00107A  61                 	db	97	;'a'
   245  00107B  6E                 	db	110	;'n'
   246  00107C  73                 	db	115	;'s'
   247  00107D  3A                 	db	58	;':'
   248  00107E  20                 	db	32
   249  00107F  34                 	db	52	;'4'
   250  001080  00                 	db	0
   251  001081                     STR_10:
   252  001081  23                 	db	35
   253  001082  20                 	db	32
   254  001083  73                 	db	115	;'s'
   255  001084  6F                 	db	111	;'o'
   256  001085  64                 	db	100	;'d'
   257  001086  61                 	db	97	;'a'
   258  001087  20                 	db	32
   259  001088  63                 	db	99	;'c'
   260  001089  61                 	db	97	;'a'
   261  00108A  6E                 	db	110	;'n'
   262  00108B  73                 	db	115	;'s'
   263  00108C  3A                 	db	58	;':'
   264  00108D  20                 	db	32
   265  00108E  36                 	db	54	;'6'
   266  00108F  00                 	db	0
   267  001090                     STR_3:
   268  001090  25                 	db	37
   269  001091  30                 	db	48	;'0'
   270  001092  32                 	db	50	;'2'
   271  001093  78                 	db	120	;'x'
   272  001094  3A                 	db	58	;':'
   273  001095  25                 	db	37
   274  001096  30                 	db	48	;'0'
   275  001097  32                 	db	50	;'2'
   276  001098  78                 	db	120	;'x'
   277  001099  3A                 	db	58	;':'
   278  00109A  25                 	db	37
   279  00109B  30                 	db	48	;'0'
   280  00109C  32                 	db	50	;'2'
   281  00109D  78                 	db	120	;'x'
   282  00109E  00                 	db	0
   283  00109F                     STR_8:
   284  00109F  23                 	db	35
   285  0010A0  20                 	db	32
   286  0010A1  6F                 	db	111	;'o'
   287  0010A2  66                 	db	102	;'f'
   288  0010A3  20                 	db	32
   289  0010A4  63                 	db	99	;'c'
   290  0010A5  61                 	db	97	;'a'
   291  0010A6  6E                 	db	110	;'n'
   292  0010A7  73                 	db	115	;'s'
   293  0010A8  3A                 	db	58	;':'
   294  0010A9  20                 	db	32
   295  0010AA  31                 	db	49	;'1'
   296  0010AB  30                 	db	48	;'0'
   297  0010AC  00                 	db	0
   298  0010AD                     STR_4:
   299  0010AD  20                 	db	32
   300  0010AE  32                 	db	50	;'2'
   301  0010AF  3A                 	db	58	;':'
   302  0010B0  4C                 	db	76	;'L'
   303  0010B1  6F                 	db	111	;'o'
   304  0010B2  67                 	db	103	;'g'
   305  0010B3  73                 	db	115	;'s'
   306  0010B4  00                 	db	0
   307  0010B5                     STR_2:
   308  0010B5  33                 	db	51	;'3'
   309  0010B6  3A                 	db	58	;':'
   310  0010B7  53                 	db	83	;'S'
   311  0010B8  74                 	db	116	;'t'
   312  0010B9  61                 	db	97	;'a'
   313  0010BA  72                 	db	114	;'r'
   314  0010BB  74                 	db	116	;'t'
   315  0010BC  00                 	db	0
   316  0000                     
   317                           ; #config settings
   318  0010BD  00                 	db	0	; dummy byte at the end
   319  0000                     
   320                           	psect	cinit
   321  0017C4                     __pcinit:
   322                           	opt stack 0
   323  0017C4                     start_initialization:
   324                           	opt stack 0
   325  0017C4                     __initialization:
   326                           	opt stack 0
   327                           
   328                           ; Clear objects allocated to COMRAM (8 bytes)
   329  0017C4  EE00  F024         	lfsr	0,__pbssCOMRAM
   330  0017C8  0E08               	movlw	8
   331  0017CA                     clear_0:
   332  0017CA  6AEE               	clrf	postinc0,c
   333  0017CC  06E8               	decf	wreg,f,c
   334  0017CE  E1FD               	bnz	clear_0
   335  0017D0                     end_of_initialization:
   336                           	opt stack 0
   337  0017D0                     __end_of__initialization:
   338                           	opt stack 0
   339  0017D0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   340  0017D2  6EF8               	movwf	tblptru,c
   341  0017D4  0100               	movlb	0
   342  0017D6  EF5F  F008         	goto	_main	;jump to C main() function
   343                           tblptru	equ	0xFF8
   344                           postinc0	equ	0xFEE
   345                           wreg	equ	0xFE8
   346                           
   347                           	psect	bssCOMRAM
   348  000024                     __pbssCOMRAM:
   349                           	opt stack 0
   350  000024                     _time:
   351                           	opt stack 0
   352  000024                     	ds	7
   353  00002B                     _keypress:
   354                           	opt stack 0
   355  00002B                     	ds	1
   356                           tblptru	equ	0xFF8
   357                           postinc0	equ	0xFEE
   358                           wreg	equ	0xFE8
   359                           
   360                           	psect	cstackCOMRAM
   361  000001                     __pcstackCOMRAM:
   362                           	opt stack 0
   363  000001                     ??_isdigit:
   364  000001                     ??_I2C_Master_Wait:
   365  000001                     ?___wmul:
   366                           	opt stack 0
   367  000001                     ?___lwdiv:
   368                           	opt stack 0
   369  000001                     ?___lldiv:
   370                           	opt stack 0
   371  000001                     lcdNibble@temp:
   372                           	opt stack 0
   373  000001                     PWM1@duty:
   374                           	opt stack 0
   375  000001                     ___wmul@multiplier:
   376                           	opt stack 0
   377  000001                     ___lwdiv@dividend:
   378                           	opt stack 0
   379  000001                     ___lldiv@dividend:
   380                           	opt stack 0
   381                           
   382                           ; 4 bytes @ 0x0
   383  000001                     	ds	1
   384  000002                     lcdNibble@data:
   385                           	opt stack 0
   386  000002                     I2C_Master_Read@a:
   387                           	opt stack 0
   388  000002                     _isdigit$708:
   389                           	opt stack 0
   390  000002                     I2C_Master_Write@d:
   391                           	opt stack 0
   392                           
   393                           ; 2 bytes @ 0x1
   394  000002                     	ds	1
   395  000003                     ??_PWM1:
   396  000003                     lcdInst@data:
   397                           	opt stack 0
   398  000003                     putch@data:
   399                           	opt stack 0
   400  000003                     I2C_Master_Read@temp:
   401                           	opt stack 0
   402  000003                     isdigit@c:
   403                           	opt stack 0
   404  000003                     ___wmul@multiplicand:
   405                           	opt stack 0
   406  000003                     ___lwdiv@divisor:
   407                           	opt stack 0
   408                           
   409                           ; 2 bytes @ 0x2
   410  000003                     	ds	1
   411  000004                     ??_initLCD:
   412                           
   413                           ; 1 bytes @ 0x3
   414  000004                     	ds	1
   415  000005                     ___wmul@product:
   416                           	opt stack 0
   417  000005                     ___lwdiv@quotient:
   418                           	opt stack 0
   419  000005                     ___lldiv@divisor:
   420                           	opt stack 0
   421                           
   422                           ; 4 bytes @ 0x4
   423  000005                     	ds	2
   424  000007                     ___lwdiv@counter:
   425                           	opt stack 0
   426                           
   427                           ; 1 bytes @ 0x6
   428  000007                     	ds	1
   429  000008                     ?_printf:
   430                           	opt stack 0
   431  000008                     printf@f:
   432                           	opt stack 0
   433                           
   434                           ; 2 bytes @ 0x7
   435  000008                     	ds	1
   436  000009                     ___lldiv@quotient:
   437                           	opt stack 0
   438                           
   439                           ; 4 bytes @ 0x8
   440  000009                     	ds	4
   441  00000D                     ___lldiv@counter:
   442                           	opt stack 0
   443                           
   444                           ; 1 bytes @ 0xC
   445  00000D                     	ds	1
   446  00000E                     I2C_Master_Init@c:
   447                           	opt stack 0
   448                           
   449                           ; 4 bytes @ 0xD
   450  00000E                     	ds	2
   451  000010                     ??_printf:
   452                           
   453                           ; 1 bytes @ 0xF
   454  000010                     	ds	2
   455  000012                     ??_I2C_Master_Init:
   456                           
   457                           ; 1 bytes @ 0x11
   458  000012                     	ds	2
   459  000014                     printf@ap:
   460                           	opt stack 0
   461                           
   462                           ; 2 bytes @ 0x13
   463  000014                     	ds	2
   464  000016                     printf@idx:
   465                           	opt stack 0
   466                           
   467                           ; 1 bytes @ 0x15
   468  000016                     	ds	1
   469  000017                     printf@flag:
   470                           	opt stack 0
   471                           
   472                           ; 1 bytes @ 0x16
   473  000017                     	ds	1
   474  000018                     printf@val:
   475                           	opt stack 0
   476                           
   477                           ; 2 bytes @ 0x17
   478  000018                     	ds	2
   479  00001A                     printf@prec:
   480                           	opt stack 0
   481                           
   482                           ; 1 bytes @ 0x19
   483  00001A                     	ds	1
   484  00001B                     printf@width:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x1A
   488  00001B                     	ds	2
   489  00001D                     printf@c:
   490                           	opt stack 0
   491                           
   492                           ; 1 bytes @ 0x1C
   493  00001D                     	ds	1
   494  00001E                     ??_main:
   495                           
   496                           ; 1 bytes @ 0x1D
   497  00001E                     	ds	1
   498  00001F                     main@s:
   499                           	opt stack 0
   500                           
   501                           ; 2 bytes @ 0x1E
   502  00001F                     	ds	2
   503  000021                     main@standby:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0x20
   507  000021                     	ds	2
   508  000023                     main@j:
   509                           	opt stack 0
   510                           
   511                           ; 1 bytes @ 0x22
   512  000023                     	ds	1
   513                           tblptru	equ	0xFF8
   514                           postinc0	equ	0xFEE
   515                           wreg	equ	0xFE8
   516                           
   517 ;;
   518 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   519 ;;
   520 ;; *************** function _main *****************
   521 ;; Defined at:
   522 ;;		line 65 in file "main.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;		None
   525 ;; Auto vars:     Size  Location     Type
   526 ;;  j               1   34[COMRAM] unsigned char 
   527 ;;  standby         2   32[COMRAM] int 
   528 ;;  s               2   30[COMRAM] int 
   529 ;; Return value:  Size  Location     Type
   530 ;;                  2  104[None  ] int 
   531 ;; Registers used:
   532 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   533 ;; Tracked objects:
   534 ;;		On entry : 0/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   539 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   540 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   541 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   542 ;;Total ram usage:        6 bytes
   543 ;; Hardware stack levels required when called:    4
   544 ;; This function calls:
   545 ;;		_I2C_Master_Init
   546 ;;		_I2C_Master_Read
   547 ;;		_I2C_Master_Start
   548 ;;		_I2C_Master_Stop
   549 ;;		_I2C_Master_Write
   550 ;;		_PWM1
   551 ;;		_PWM1off
   552 ;;		_homescreen
   553 ;;		_initLCD
   554 ;;		_keycheck
   555 ;;		_keyinterrupt
   556 ;;		_lcdInst
   557 ;;		_printf
   558 ;; This function is called by:
   559 ;;		Startup code after reset
   560 ;; This function uses a non-reentrant model
   561 ;;
   562                           
   563                           	psect	text0
   564  0010BE                     __ptext0:
   565                           	opt stack 0
   566  0010BE                     _main:
   567                           	opt stack 27
   568                           
   569                           ;main.c: 66: OSCCON = 0xF2;
   570                           
   571                           ;incstack = 0
   572  0010BE  0EF2               	movlw	242
   573  0010C0  6ED3               	movwf	4051,c	;volatile
   574                           
   575                           ;main.c: 67: OSCTUNEbits.PLLEN = 1;
   576  0010C2  8C9B               	bsf	3995,6,c	;volatile
   577                           
   578                           ;main.c: 69: TRISA = 0x00;
   579  0010C4  0E00               	movlw	0
   580  0010C6  6E92               	movwf	3986,c	;volatile
   581                           
   582                           ;main.c: 70: TRISB = 0b11110010;
   583  0010C8  0EF2               	movlw	242
   584  0010CA  6E93               	movwf	3987,c	;volatile
   585                           
   586                           ;main.c: 71: TRISC = 0x00011100;
   587  0010CC  0E00               	movlw	0
   588  0010CE  6E94               	movwf	3988,c	;volatile
   589                           
   590                           ;main.c: 73: TRISD = 0x00;
   591  0010D0  0E00               	movlw	0
   592  0010D2  6E95               	movwf	3989,c	;volatile
   593                           
   594                           ;main.c: 74: TRISE = 0x00;
   595  0010D4  0E00               	movlw	0
   596  0010D6  6E96               	movwf	3990,c	;volatile
   597                           
   598                           ;main.c: 76: PR2 = 0xff;
   599  0010D8  68CB               	setf	4043,c	;volatile
   600                           
   601                           ;main.c: 77: CCP1CON = 0b00001100;
   602  0010DA  0E0C               	movlw	12
   603  0010DC  6EBD               	movwf	4029,c	;volatile
   604                           
   605                           ;main.c: 78: CCPR1L = 0x00;
   606  0010DE  0E00               	movlw	0
   607  0010E0  6EBE               	movwf	4030,c	;volatile
   608                           
   609                           ;main.c: 79: T2CON = 0b00000101;
   610  0010E2  0E05               	movlw	5
   611  0010E4  6ECA               	movwf	4042,c	;volatile
   612                           
   613                           ;main.c: 81: LATA = 0b01010101;
   614  0010E6  0E55               	movlw	85
   615  0010E8  6E89               	movwf	3977,c	;volatile
   616                           
   617                           ;main.c: 82: LATB = 0b01010101;
   618  0010EA  0E55               	movlw	85
   619  0010EC  6E8A               	movwf	3978,c	;volatile
   620                           
   621                           ;main.c: 83: LATC = 0b01010101;
   622  0010EE  0E55               	movlw	85
   623  0010F0  6E8B               	movwf	3979,c	;volatile
   624                           
   625                           ;main.c: 84: LATD = 0x00;
   626  0010F2  0E00               	movlw	0
   627  0010F4  6E8C               	movwf	3980,c	;volatile
   628                           
   629                           ;main.c: 85: LATE = 0x00;
   630  0010F6  0E00               	movlw	0
   631  0010F8  6E8D               	movwf	3981,c	;volatile
   632                           
   633                           ;main.c: 86: LATDbits.LATD0 = 1;
   634  0010FA  808C               	bsf	3980,0,c	;volatile
   635                           
   636                           ;main.c: 87: LATDbits.LATD1 = 0;
   637  0010FC  928C               	bcf	3980,1,c	;volatile
   638                           
   639                           ;main.c: 88: LATEbits.LATE0 = 1;
   640  0010FE  808D               	bsf	3981,0,c	;volatile
   641                           
   642                           ;main.c: 89: LATEbits.LATE1 = 0;
   643  001100  928D               	bcf	3981,1,c	;volatile
   644                           
   645                           ;main.c: 91: ADCON0 = 0x00;
   646  001102  0E00               	movlw	0
   647  001104  6EC2               	movwf	4034,c	;volatile
   648                           
   649                           ;main.c: 92: ADCON1 = 0xFF;
   650  001106  68C1               	setf	4033,c	;volatile
   651                           
   652                           ;main.c: 94: initLCD();
   653  001108  EC8A  F00B         	call	_initLCD	;wreg free
   654                           
   655                           ;main.c: 96: I2C_Master_Init(10000);
   656  00110C  0E10               	movlw	16
   657  00110E  6E0E               	movwf	I2C_Master_Init@c,c
   658  001110  0E27               	movlw	39
   659  001112  6E0F               	movwf	I2C_Master_Init@c+1,c
   660  001114  0E00               	movlw	0
   661  001116  6E10               	movwf	I2C_Master_Init@c+2,c
   662  001118  0E00               	movlw	0
   663  00111A  6E11               	movwf	I2C_Master_Init@c+3,c
   664  00111C  ECE4  F00A         	call	_I2C_Master_Init	;wreg free
   665                           
   666                           ;main.c: 99: int standby = 1;
   667  001120  0E00               	movlw	0
   668  001122  6E22               	movwf	main@standby+1,c
   669  001124  0E01               	movlw	1
   670  001126  6E21               	movwf	main@standby,c
   671                           
   672                           ;main.c: 100: int s = 0;
   673  001128  0E00               	movlw	0
   674  00112A  6E20               	movwf	main@s+1,c
   675  00112C  0E00               	movlw	0
   676  00112E  6E1F               	movwf	main@s,c
   677                           
   678                           ;main.c: 102: _delay((unsigned long)((10)*(32000000/4000.0)));
   679  001130  0E68               	movlw	104
   680  001132  6E1E               	movwf	??_main& (0+255),c
   681  001134  0EE4               	movlw	228
   682  001136                     u747:
   683  001136  2EE8               	decfsz	wreg,f,c
   684  001138  D7FE               	bra	u747
   685  00113A  2E1E               	decfsz	??_main& (0+255),f,c
   686  00113C  D7FC               	bra	u747
   687  00113E  D000               	nop2	
   688  001140                     l1466:
   689                           
   690                           ;main.c: 105: LATA = 00000000;
   691  001140  0E00               	movlw	0
   692  001142  6E89               	movwf	3977,c	;volatile
   693                           
   694                           ;main.c: 108: I2C_Master_Start();
   695  001144  EC24  F00C         	call	_I2C_Master_Start	;wreg free
   696                           
   697                           ;main.c: 109: I2C_Master_Write(0b11010000);
   698  001148  0E00               	movlw	0
   699  00114A  6E03               	movwf	I2C_Master_Write@d+1,c
   700  00114C  0ED0               	movlw	208
   701  00114E  6E02               	movwf	I2C_Master_Write@d,c
   702  001150  EC1B  F00C         	call	_I2C_Master_Write	;wreg free
   703                           
   704                           ;main.c: 110: I2C_Master_Write(0x00);
   705  001154  0E00               	movlw	0
   706  001156  6E03               	movwf	I2C_Master_Write@d+1,c
   707  001158  0E00               	movlw	0
   708  00115A  6E02               	movwf	I2C_Master_Write@d,c
   709  00115C  EC1B  F00C         	call	_I2C_Master_Write	;wreg free
   710                           
   711                           ;main.c: 111: I2C_Master_Stop();
   712  001160  EC20  F00C         	call	_I2C_Master_Stop	;wreg free
   713                           
   714                           ;main.c: 114: I2C_Master_Start();
   715  001164  EC24  F00C         	call	_I2C_Master_Start	;wreg free
   716                           
   717                           ;main.c: 115: I2C_Master_Write(0b11010001);
   718  001168  0E00               	movlw	0
   719  00116A  6E03               	movwf	I2C_Master_Write@d+1,c
   720  00116C  0ED1               	movlw	209
   721  00116E  6E02               	movwf	I2C_Master_Write@d,c
   722  001170  EC1B  F00C         	call	_I2C_Master_Write	;wreg free
   723                           
   724                           ;main.c: 116: for(unsigned char j=0;j<0x06;j++){
   725  001174  0E00               	movlw	0
   726  001176  6E23               	movwf	main@j,c
   727  001178                     l1482:
   728  001178  0E05               	movlw	5
   729  00117A  6423               	cpfsgt	main@j,c
   730  00117C  D001               	goto	l1486
   731  00117E  D00E               	goto	l1492
   732  001180                     l1486:
   733                           
   734                           ;main.c: 117: time[j] = I2C_Master_Read(1);
   735  001180  5023               	movf	main@j,w,c
   736  001182  0D01               	mullw	1
   737  001184  0E24               	movlw	low _time
   738  001186  24F3               	addwf	prodl,w,c
   739  001188  6ED9               	movwf	fsr2l,c
   740  00118A  0E00               	movlw	high _time
   741  00118C  20F4               	addwfc	prodh,w,c
   742  00118E  6EDA               	movwf	fsr2h,c
   743  001190  0E01               	movlw	1
   744  001192  ECC0  F00B         	call	_I2C_Master_Read
   745  001196  6EDF               	movwf	indf2,c
   746  001198  2A23               	incf	main@j,f,c
   747  00119A  D7EE               	goto	l1482
   748  00119C                     l1492:
   749                           
   750                           ;main.c: 118: }
   751                           ;main.c: 119: time[6] = I2C_Master_Read(0);
   752  00119C  0E00               	movlw	0
   753  00119E  ECC0  F00B         	call	_I2C_Master_Read
   754  0011A2  6E2A               	movwf	_time+6,c
   755                           
   756                           ;main.c: 120: I2C_Master_Stop();
   757  0011A4  EC20  F00C         	call	_I2C_Master_Stop	;wreg free
   758                           
   759                           ;main.c: 122: if (standby){
   760  0011A8  5021               	movf	main@standby,w,c
   761  0011AA  1022               	iorwf	main@standby+1,w,c
   762  0011AC  B4D8               	btfsc	status,2,c
   763  0011AE  D087               	goto	l108
   764                           
   765                           ;main.c: 123: keypress = (0);
   766  0011B0  0E00               	movlw	0
   767  0011B2  6E2B               	movwf	_keypress,c
   768                           
   769                           ;main.c: 124: homescreen();
   770  0011B4  ECB3  F00A         	call	_homescreen	;wreg free
   771                           
   772                           ;main.c: 125: keyinterrupt();
   773  0011B8  ECED  F00B         	call	_keyinterrupt	;wreg free
   774                           
   775                           ;main.c: 128: if(keypress == 2){
   776  0011BC  0E02               	movlw	2
   777  0011BE  182B               	xorwf	_keypress,w,c
   778  0011C0  A4D8               	btfss	status,2,c
   779  0011C2  D025               	goto	l1518
   780                           
   781                           ;main.c: 129: standby = 0;
   782  0011C4  0E00               	movlw	0
   783  0011C6  6E22               	movwf	main@standby+1,c
   784  0011C8  0E00               	movlw	0
   785  0011CA  6E21               	movwf	main@standby,c
   786                           
   787                           ;main.c: 130: lcdInst(0b00000001); _delay((unsigned long)((10)*(32000000/4000.0)));;
   788  0011CC  0E01               	movlw	1
   789  0011CE  EC10  F00C         	call	_lcdInst
   790  0011D2  0E68               	movlw	104
   791  0011D4  6E1E               	movwf	??_main& (0+255),c
   792  0011D6  0EE4               	movlw	228
   793  0011D8                     u757:
   794  0011D8  2EE8               	decfsz	wreg,f,c
   795  0011DA  D7FE               	bra	u757
   796  0011DC  2E1E               	decfsz	??_main& (0+255),f,c
   797  0011DE  D7FC               	bra	u757
   798  0011E0  D000               	nop2	
   799                           
   800                           ;main.c: 131: printf("Sorting cans...");
   801  0011E2  0E42               	movlw	low STR_5
   802  0011E4  6E08               	movwf	printf@f,c
   803  0011E6  0E10               	movlw	high STR_5
   804  0011E8  6E09               	movwf	printf@f+1,c
   805  0011EA  EC78  F009         	call	_printf	;wreg free
   806                           
   807                           ;main.c: 132: lcdInst(0b11000000);;
   808  0011EE  0EC0               	movlw	192
   809  0011F0  EC10  F00C         	call	_lcdInst
   810                           
   811                           ;main.c: 133: printf("Any key to stop");
   812  0011F4  0E52               	movlw	low STR_6
   813  0011F6  6E08               	movwf	printf@f,c
   814  0011F8  0E10               	movlw	high STR_6
   815  0011FA  6E09               	movwf	printf@f+1,c
   816  0011FC  EC78  F009         	call	_printf	;wreg free
   817                           
   818                           ;main.c: 134: PWM1(100);
   819  001200  0E00               	movlw	0
   820  001202  6E02               	movwf	PWM1@duty+1,c
   821  001204  0E64               	movlw	100
   822  001206  6E01               	movwf	PWM1@duty,c
   823  001208  EC65  F00B         	call	_PWM1	;wreg free
   824                           
   825                           ;main.c: 135: }
   826  00120C  D799               	goto	l1466
   827  00120E                     l1518:
   828                           
   829                           ;main.c: 136: else if(keypress == 1){
   830  00120E  042B               	decf	_keypress,w,c
   831  001210  A4D8               	btfss	status,2,c
   832  001212  D796               	goto	l1466
   833                           
   834                           ;main.c: 137: lcdInst(0b00000001); _delay((unsigned long)((10)*(32000000/4000.0)));;
   835  001214  0E01               	movlw	1
   836  001216  EC10  F00C         	call	_lcdInst
   837  00121A  0E68               	movlw	104
   838  00121C  6E1E               	movwf	??_main& (0+255),c
   839  00121E  0EE4               	movlw	228
   840  001220                     u767:
   841  001220  2EE8               	decfsz	wreg,f,c
   842  001222  D7FE               	bra	u767
   843  001224  2E1E               	decfsz	??_main& (0+255),f,c
   844  001226  D7FC               	bra	u767
   845  001228  D000               	nop2	
   846                           
   847                           ;main.c: 138: printf("Run#1    A:Next");
   848  00122A  0E62               	movlw	low STR_7
   849  00122C  6E08               	movwf	printf@f,c
   850  00122E  0E10               	movlw	high STR_7
   851  001230  6E09               	movwf	printf@f+1,c
   852  001232  EC78  F009         	call	_printf	;wreg free
   853                           
   854                           ;main.c: 139: lcdInst(0b11000000);;
   855  001236  0EC0               	movlw	192
   856  001238  EC10  F00C         	call	_lcdInst
   857                           
   858                           ;main.c: 140: printf("# of cans: 10");
   859  00123C  0E9F               	movlw	low STR_8
   860  00123E  6E08               	movwf	printf@f,c
   861  001240  0E10               	movlw	high STR_8
   862  001242  6E09               	movwf	printf@f+1,c
   863  001244  EC78  F009         	call	_printf	;wreg free
   864                           
   865                           ;main.c: 141: keycheck();
   866  001248  ECF7  F00B         	call	_keycheck	;wreg free
   867                           
   868                           ;main.c: 142: lcdInst(0b00000001); _delay((unsigned long)((10)*(32000000/4000.0)));;
   869  00124C  0E01               	movlw	1
   870  00124E  EC10  F00C         	call	_lcdInst
   871  001252  0E68               	movlw	104
   872  001254  6E1E               	movwf	??_main& (0+255),c
   873  001256  0EE4               	movlw	228
   874  001258                     u777:
   875  001258  2EE8               	decfsz	wreg,f,c
   876  00125A  D7FE               	bra	u777
   877  00125C  2E1E               	decfsz	??_main& (0+255),f,c
   878  00125E  D7FC               	bra	u777
   879  001260  D000               	nop2	
   880                           
   881                           ;main.c: 143: printf("Run#1    A:Next");
   882  001262  0E62               	movlw	low STR_7
   883  001264  6E08               	movwf	printf@f,c
   884  001266  0E10               	movlw	high STR_7
   885  001268  6E09               	movwf	printf@f+1,c
   886  00126A  EC78  F009         	call	_printf	;wreg free
   887                           
   888                           ;main.c: 144: lcdInst(0b11000000);;
   889  00126E  0EC0               	movlw	192
   890  001270  EC10  F00C         	call	_lcdInst
   891                           
   892                           ;main.c: 145: printf("# soda cans: 6");
   893  001274  0E81               	movlw	low STR_10
   894  001276  6E08               	movwf	printf@f,c
   895  001278  0E10               	movlw	high STR_10
   896  00127A  6E09               	movwf	printf@f+1,c
   897  00127C  EC78  F009         	call	_printf	;wreg free
   898                           
   899                           ;main.c: 146: keycheck();
   900  001280  ECF7  F00B         	call	_keycheck	;wreg free
   901                           
   902                           ;main.c: 147: lcdInst(0b00000001); _delay((unsigned long)((10)*(32000000/4000.0)));;
   903  001284  0E01               	movlw	1
   904  001286  EC10  F00C         	call	_lcdInst
   905  00128A  0E68               	movlw	104
   906  00128C  6E1E               	movwf	??_main& (0+255),c
   907  00128E  0EE4               	movlw	228
   908  001290                     u787:
   909  001290  2EE8               	decfsz	wreg,f,c
   910  001292  D7FE               	bra	u787
   911  001294  2E1E               	decfsz	??_main& (0+255),f,c
   912  001296  D7FC               	bra	u787
   913  001298  D000               	nop2	
   914                           
   915                           ;main.c: 148: printf("Run#1    A:Next");
   916  00129A  0E62               	movlw	low STR_7
   917  00129C  6E08               	movwf	printf@f,c
   918  00129E  0E10               	movlw	high STR_7
   919  0012A0  6E09               	movwf	printf@f+1,c
   920  0012A2  EC78  F009         	call	_printf	;wreg free
   921                           
   922                           ;main.c: 149: lcdInst(0b11000000);;
   923  0012A6  0EC0               	movlw	192
   924  0012A8  EC10  F00C         	call	_lcdInst
   925                           
   926                           ;main.c: 150: printf("# soup cans: 4");
   927  0012AC  0E72               	movlw	low STR_12
   928  0012AE  6E08               	movwf	printf@f,c
   929  0012B0  0E10               	movlw	high STR_12
   930  0012B2  6E09               	movwf	printf@f+1,c
   931  0012B4  EC78  F009         	call	_printf	;wreg free
   932                           
   933                           ;main.c: 151: keycheck();
   934  0012B8  ECF7  F00B         	call	_keycheck	;wreg free
   935                           
   936                           ;main.c: 152: }
   937                           ;main.c: 154: }
   938  0012BC  D741               	goto	l1466
   939  0012BE                     l108:
   940                           
   941                           ;main.c: 155: else{
   942                           ;main.c: 156: LATAbits.LATA0 = 1;
   943  0012BE  8089               	bsf	3977,0,c	;volatile
   944                           
   945                           ;main.c: 157: keypress = (0);
   946  0012C0  0E00               	movlw	0
   947  0012C2  6E2B               	movwf	_keypress,c
   948                           
   949                           ;main.c: 158: keyinterrupt();
   950  0012C4  ECED  F00B         	call	_keyinterrupt	;wreg free
   951                           
   952                           ;main.c: 159: if (keypress != (0)) {
   953  0012C8  502B               	movf	_keypress,w,c
   954  0012CA  B4D8               	btfsc	status,2,c
   955  0012CC  D006               	goto	l1562
   956                           
   957                           ;main.c: 160: standby = 1;
   958  0012CE  0E00               	movlw	0
   959  0012D0  6E22               	movwf	main@standby+1,c
   960  0012D2  0E01               	movlw	1
   961  0012D4  6E21               	movwf	main@standby,c
   962                           
   963                           ;main.c: 161: PWM1off();
   964  0012D6  EC16  F00C         	call	_PWM1off	;wreg free
   965  0012DA                     l1562:
   966                           
   967                           ;main.c: 162: }
   968                           ;main.c: 167: LATAbits.LATA0 = 0;
   969  0012DA  9089               	bcf	3977,0,c	;volatile
   970                           
   971                           ;main.c: 169: keyinterrupt();
   972  0012DC  ECED  F00B         	call	_keyinterrupt	;wreg free
   973                           
   974                           ;main.c: 170: if (keypress != (0)) {standby = 1;}
   975  0012E0  502B               	movf	_keypress,w,c
   976  0012E2  B4D8               	btfsc	status,2,c
   977  0012E4  D72D               	goto	l1466
   978  0012E6  0E00               	movlw	0
   979  0012E8  6E22               	movwf	main@standby+1,c
   980  0012EA  0E01               	movlw	1
   981  0012EC  6E21               	movwf	main@standby,c
   982  0012EE  D728               	goto	l1466
   983  0012F0                     __end_of_main:
   984                           	opt stack 0
   985                           tblptru	equ	0xFF8
   986                           prodh	equ	0xFF4
   987                           prodl	equ	0xFF3
   988                           postinc0	equ	0xFEE
   989                           wreg	equ	0xFE8
   990                           indf2	equ	0xFDF
   991                           fsr2h	equ	0xFDA
   992                           fsr2l	equ	0xFD9
   993                           status	equ	0xFD8
   994                           
   995 ;; *************** function _keyinterrupt *****************
   996 ;; Defined at:
   997 ;;		line 45 in file "main.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;		None
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;		None
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  1    wreg      void 
  1004 ;; Registers used:
  1005 ;;		wreg, status,2, status,0
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1015 ;;Total ram usage:        0 bytes
  1016 ;; Hardware stack levels used:    1
  1017 ;; This function calls:
  1018 ;;		Nothing
  1019 ;; This function is called by:
  1020 ;;		_main
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024                           	psect	text1
  1025  0017DA                     __ptext1:
  1026                           	opt stack 0
  1027  0017DA                     _keyinterrupt:
  1028                           	opt stack 30
  1029                           
  1030                           ;main.c: 46: if(PORTBbits.RB1 == 1){
  1031                           
  1032                           ;incstack = 0
  1033  0017DA  A281               	btfss	3969,1,c	;volatile
  1034  0017DC  D006               	goto	l93
  1035                           
  1036                           ;main.c: 47: keypress = (PORTB & 0xF0)>>4;
  1037  0017DE  3881               	swapf	3969,w,c	;volatile
  1038  0017E0  0B0F               	andlw	15
  1039  0017E2  0B0F               	andlw	15
  1040  0017E4  6E2B               	movwf	_keypress,c
  1041  0017E6                     l94:
  1042  0017E6  B281               	btfsc	3969,1,c	;volatile
  1043  0017E8  D7FE               	goto	l94
  1044  0017EA                     l93:
  1045                           
  1046                           ;main.c: 50: }
  1047                           ;main.c: 51: }
  1048                           ;main.c: 52: __nop();
  1049  0017EA  F000               	nop	
  1050  0017EC  0012               	return		;funcret
  1051  0017EE                     __end_of_keyinterrupt:
  1052                           	opt stack 0
  1053                           tblptru	equ	0xFF8
  1054                           prodh	equ	0xFF4
  1055                           prodl	equ	0xFF3
  1056                           postinc0	equ	0xFEE
  1057                           wreg	equ	0xFE8
  1058                           indf2	equ	0xFDF
  1059                           fsr2h	equ	0xFDA
  1060                           fsr2l	equ	0xFD9
  1061                           status	equ	0xFD8
  1062                           
  1063 ;; *************** function _keycheck *****************
  1064 ;; Defined at:
  1065 ;;		line 32 in file "main.c"
  1066 ;; Parameters:    Size  Location     Type
  1067 ;;		None
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;		None
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  1    wreg      void 
  1072 ;; Registers used:
  1073 ;;		wreg, status,2, status,0
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1083 ;;Total ram usage:        0 bytes
  1084 ;; Hardware stack levels used:    1
  1085 ;; This function calls:
  1086 ;;		Nothing
  1087 ;; This function is called by:
  1088 ;;		_main
  1089 ;; This function uses a non-reentrant model
  1090 ;;
  1091                           
  1092                           	psect	text2
  1093  0017EE                     __ptext2:
  1094                           	opt stack 0
  1095  0017EE                     _keycheck:
  1096                           	opt stack 30
  1097  0017EE                     l84:
  1098  0017EE  A281               	btfss	3969,1,c	;volatile
  1099  0017F0  D7FE               	goto	l84
  1100                           
  1101                           ;main.c: 36: }
  1102                           ;main.c: 37: keypress = (PORTB & 0xF0)>>4;
  1103  0017F2  3881               	swapf	3969,w,c	;volatile
  1104  0017F4  0B0F               	andlw	15
  1105  0017F6  0B0F               	andlw	15
  1106  0017F8  6E2B               	movwf	_keypress,c
  1107  0017FA                     l87:
  1108  0017FA  B281               	btfsc	3969,1,c	;volatile
  1109  0017FC  D7FE               	goto	l87
  1110                           
  1111                           ;main.c: 40: }
  1112                           ;main.c: 41: __nop();
  1113  0017FE  F000               	nop	
  1114                           
  1115                           ;main.c: 42: return;
  1116  001800  0012               	return		;funcret
  1117  001802                     __end_of_keycheck:
  1118                           	opt stack 0
  1119                           tblptru	equ	0xFF8
  1120                           prodh	equ	0xFF4
  1121                           prodl	equ	0xFF3
  1122                           postinc0	equ	0xFEE
  1123                           wreg	equ	0xFE8
  1124                           indf2	equ	0xFDF
  1125                           fsr2h	equ	0xFDA
  1126                           fsr2l	equ	0xFD9
  1127                           status	equ	0xFD8
  1128                           
  1129 ;; *************** function _initLCD *****************
  1130 ;; Defined at:
  1131 ;;		line 11 in file "lcd.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;		None
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;		None
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  1    wreg      void 
  1138 ;; Registers used:
  1139 ;;		wreg, status,2, status,0, cstack
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1147 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1148 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1149 ;;Total ram usage:        1 bytes
  1150 ;; Hardware stack levels used:    1
  1151 ;; Hardware stack levels required when called:    2
  1152 ;; This function calls:
  1153 ;;		_lcdInst
  1154 ;; This function is called by:
  1155 ;;		_main
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           	psect	text3
  1160  001714                     __ptext3:
  1161                           	opt stack 0
  1162  001714                     _initLCD:
  1163                           	opt stack 28
  1164                           
  1165                           ;lcd.c: 12: _delay((unsigned long)((15)*(32000000/4000.0)));
  1166                           
  1167                           ;incstack = 0
  1168  001714  0E9C               	movlw	156
  1169  001716  6E04               	movwf	??_initLCD& (0+255),c
  1170  001718  0ED7               	movlw	215
  1171  00171A                     u797:
  1172  00171A  2EE8               	decfsz	wreg,f,c
  1173  00171C  D7FE               	bra	u797
  1174  00171E  2E04               	decfsz	??_initLCD& (0+255),f,c
  1175  001720  D7FC               	bra	u797
  1176  001722  F000               	nop	
  1177                           
  1178                           ;lcd.c: 13: lcdInst(0b00110011);
  1179  001724  0E33               	movlw	51
  1180  001726  EC10  F00C         	call	_lcdInst
  1181                           
  1182                           ;lcd.c: 14: lcdInst(0b00110010);
  1183  00172A  0E32               	movlw	50
  1184  00172C  EC10  F00C         	call	_lcdInst
  1185                           
  1186                           ;lcd.c: 15: lcdInst(0b00101000);
  1187  001730  0E28               	movlw	40
  1188  001732  EC10  F00C         	call	_lcdInst
  1189                           
  1190                           ;lcd.c: 16: lcdInst(0b00001111);
  1191  001736  0E0F               	movlw	15
  1192  001738  EC10  F00C         	call	_lcdInst
  1193                           
  1194                           ;lcd.c: 17: lcdInst(0b00000110);
  1195  00173C  0E06               	movlw	6
  1196  00173E  EC10  F00C         	call	_lcdInst
  1197                           
  1198                           ;lcd.c: 18: lcdInst(0b00000001);
  1199  001742  0E01               	movlw	1
  1200  001744  EC10  F00C         	call	_lcdInst
  1201                           
  1202                           ;lcd.c: 19: _delay((unsigned long)((15)*(32000000/4000.0)));
  1203  001748  0E9C               	movlw	156
  1204  00174A  6E04               	movwf	??_initLCD& (0+255),c
  1205  00174C  0ED7               	movlw	215
  1206  00174E                     u807:
  1207  00174E  2EE8               	decfsz	wreg,f,c
  1208  001750  D7FE               	bra	u807
  1209  001752  2E04               	decfsz	??_initLCD& (0+255),f,c
  1210  001754  D7FC               	bra	u807
  1211  001756  F000               	nop	
  1212  001758  0012               	return		;funcret
  1213  00175A                     __end_of_initLCD:
  1214                           	opt stack 0
  1215                           tblptru	equ	0xFF8
  1216                           prodh	equ	0xFF4
  1217                           prodl	equ	0xFF3
  1218                           postinc0	equ	0xFEE
  1219                           wreg	equ	0xFE8
  1220                           indf2	equ	0xFDF
  1221                           fsr2h	equ	0xFDA
  1222                           fsr2l	equ	0xFD9
  1223                           status	equ	0xFD8
  1224                           
  1225 ;; *************** function _homescreen *****************
  1226 ;; Defined at:
  1227 ;;		line 23 in file "main.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;		None
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;		None
  1232 ;; Return value:  Size  Location     Type
  1233 ;;                  1    wreg      void 
  1234 ;; Registers used:
  1235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1245 ;;Total ram usage:        0 bytes
  1246 ;; Hardware stack levels used:    1
  1247 ;; Hardware stack levels required when called:    3
  1248 ;; This function calls:
  1249 ;;		_lcdInst
  1250 ;;		_printf
  1251 ;; This function is called by:
  1252 ;;		_main
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           	psect	text4
  1257  001566                     __ptext4:
  1258                           	opt stack 0
  1259  001566                     _homescreen:
  1260                           	opt stack 27
  1261                           
  1262                           ;main.c: 24: lcdInst(0b10000000);;
  1263                           
  1264                           ;incstack = 0
  1265  001566  0E80               	movlw	128
  1266  001568  EC10  F00C         	call	_lcdInst
  1267                           
  1268                           ;main.c: 25: printf("%02x/%02x/%02x ", time[6],time[5],time[4]);
  1269  00156C  0E32               	movlw	low STR_1
  1270  00156E  6E08               	movwf	printf@f,c
  1271  001570  0E10               	movlw	high STR_1
  1272  001572  6E09               	movwf	printf@f+1,c
  1273  001574  C02A  F00A         	movff	_time+6,?_printf+2
  1274  001578  6A0B               	clrf	?_printf+3,c
  1275  00157A  C029  F00C         	movff	_time+5,?_printf+4
  1276  00157E  6A0D               	clrf	?_printf+5,c
  1277  001580  C028  F00E         	movff	_time+4,?_printf+6
  1278  001584  6A0F               	clrf	?_printf+7,c
  1279  001586  EC78  F009         	call	_printf	;wreg free
  1280                           
  1281                           ;main.c: 26: printf("3:Start");
  1282  00158A  0EB5               	movlw	low STR_2
  1283  00158C  6E08               	movwf	printf@f,c
  1284  00158E  0E10               	movlw	high STR_2
  1285  001590  6E09               	movwf	printf@f+1,c
  1286  001592  EC78  F009         	call	_printf	;wreg free
  1287                           
  1288                           ;main.c: 27: lcdInst(0b11000000);;
  1289  001596  0EC0               	movlw	192
  1290  001598  EC10  F00C         	call	_lcdInst
  1291                           
  1292                           ;main.c: 28: printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  1293  00159C  0E90               	movlw	low STR_3
  1294  00159E  6E08               	movwf	printf@f,c
  1295  0015A0  0E10               	movlw	high STR_3
  1296  0015A2  6E09               	movwf	printf@f+1,c
  1297  0015A4  C026  F00A         	movff	_time+2,?_printf+2
  1298  0015A8  6A0B               	clrf	?_printf+3,c
  1299  0015AA  C025  F00C         	movff	_time+1,?_printf+4
  1300  0015AE  6A0D               	clrf	?_printf+5,c
  1301  0015B0  C024  F00E         	movff	_time,?_printf+6
  1302  0015B4  6A0F               	clrf	?_printf+7,c
  1303  0015B6  EC78  F009         	call	_printf	;wreg free
  1304                           
  1305                           ;main.c: 29: printf(" 2:Logs");
  1306  0015BA  0EAD               	movlw	low STR_4
  1307  0015BC  6E08               	movwf	printf@f,c
  1308  0015BE  0E10               	movlw	high STR_4
  1309  0015C0  6E09               	movwf	printf@f+1,c
  1310  0015C2  EC78  F009         	call	_printf	;wreg free
  1311  0015C6  0012               	return		;funcret
  1312  0015C8                     __end_of_homescreen:
  1313                           	opt stack 0
  1314                           tblptru	equ	0xFF8
  1315                           prodh	equ	0xFF4
  1316                           prodl	equ	0xFF3
  1317                           postinc0	equ	0xFEE
  1318                           wreg	equ	0xFE8
  1319                           indf2	equ	0xFDF
  1320                           fsr2h	equ	0xFDA
  1321                           fsr2l	equ	0xFD9
  1322                           status	equ	0xFD8
  1323                           
  1324 ;; *************** function _printf *****************
  1325 ;; Defined at:
  1326 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  1327 ;; Parameters:    Size  Location     Type
  1328 ;;  f               2    7[COMRAM] PTR const unsigned char 
  1329 ;;		 -> STR_12(15), STR_11(16), STR_10(15), STR_9(16), 
  1330 ;;		 -> STR_8(14), STR_7(16), STR_6(16), STR_5(16), 
  1331 ;;		 -> STR_4(8), STR_3(15), STR_2(8), STR_1(16), 
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;  idx             1   21[COMRAM] unsigned char 
  1334 ;;  tmpval          4    0        struct .
  1335 ;;  cp              3    0        PTR const unsigned char 
  1336 ;;  width           2   26[COMRAM] int 
  1337 ;;  val             2   23[COMRAM] unsigned int 
  1338 ;;  ap              2   19[COMRAM] PTR void [1]
  1339 ;;		 -> ?_printf(2), 
  1340 ;;  len             2    0        unsigned int 
  1341 ;;  c               1   28[COMRAM] char 
  1342 ;;  prec            1   25[COMRAM] char 
  1343 ;;  flag            1   22[COMRAM] unsigned char 
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  2    7[COMRAM] int 
  1346 ;; Registers used:
  1347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1353 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1354 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1355 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1356 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1357 ;;Total ram usage:       22 bytes
  1358 ;; Hardware stack levels used:    1
  1359 ;; Hardware stack levels required when called:    2
  1360 ;; This function calls:
  1361 ;;		___lwdiv
  1362 ;;		___wmul
  1363 ;;		_isdigit
  1364 ;;		_putch
  1365 ;; This function is called by:
  1366 ;;		_homescreen
  1367 ;;		_main
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           	psect	text5
  1372  0012F0                     __ptext5:
  1373                           	opt stack 0
  1374  0012F0                     _printf:
  1375                           	opt stack 28
  1376                           
  1377                           ;doprnt.c: 466: va_list ap;
  1378                           ;doprnt.c: 499: signed char c;
  1379                           ;doprnt.c: 501: int width;
  1380                           ;doprnt.c: 506: signed char prec;
  1381                           ;doprnt.c: 508: unsigned char flag;
  1382                           ;doprnt.c: 523: union {
  1383                           ;doprnt.c: 524: unsigned long vd;
  1384                           ;doprnt.c: 525: double integ;
  1385                           ;doprnt.c: 526: } tmpval;
  1386                           ;doprnt.c: 528: unsigned int val;
  1387                           ;doprnt.c: 529: unsigned len;
  1388                           ;doprnt.c: 530: const char * cp;
  1389                           ;doprnt.c: 533: *ap = __va_start();
  1390                           
  1391                           ;incstack = 0
  1392  0012F0  0E0A               	movlw	low (?_printf+2)
  1393  0012F2  6E14               	movwf	printf@ap,c
  1394  0012F4  0E00               	movlw	high (?_printf+2)
  1395  0012F6  6E15               	movwf	printf@ap+1,c
  1396                           
  1397                           ;doprnt.c: 536: while(c = *f++) {
  1398  0012F8  D0E8               	goto	l1380
  1399  0012FA                     l1308:
  1400                           
  1401                           ;doprnt.c: 538: if(c != '%')
  1402  0012FA  0E25               	movlw	37
  1403  0012FC  181D               	xorwf	printf@c,w,c
  1404  0012FE  B4D8               	btfsc	status,2,c
  1405  001300  D004               	goto	l1312
  1406                           
  1407                           ;doprnt.c: 540: {
  1408                           ;doprnt.c: 541: (putch(c) );
  1409  001302  501D               	movf	printf@c,w,c
  1410  001304  EC0A  F00C         	call	_putch
  1411                           
  1412                           ;doprnt.c: 542: continue;
  1413  001308  D0E0               	goto	l1380
  1414  00130A                     l1312:
  1415                           
  1416                           ;doprnt.c: 543: }
  1417                           ;doprnt.c: 546: width = 0;
  1418  00130A  0E00               	movlw	0
  1419  00130C  6E1C               	movwf	printf@width+1,c
  1420  00130E  0E00               	movlw	0
  1421  001310  6E1B               	movwf	printf@width,c
  1422                           
  1423                           ;doprnt.c: 548: flag = 0;
  1424  001312  0E00               	movlw	0
  1425  001314  6E17               	movwf	printf@flag,c
  1426                           
  1427                           ;doprnt.c: 551: switch(*f) {
  1428                           
  1429                           ;doprnt.c: 550: for(;;) {
  1430  001316  D003               	goto	l1318
  1431  001318                     l1314:
  1432                           
  1433                           ;doprnt.c: 580: flag |= 0x04;
  1434  001318  8417               	bsf	printf@flag,2,c
  1435                           
  1436                           ;doprnt.c: 581: f++;
  1437  00131A  4A08               	infsnz	printf@f,f,c
  1438  00131C  2A09               	incf	printf@f+1,f,c
  1439  00131E                     l1318:
  1440  00131E  C008  FFF6         	movff	printf@f,tblptrl
  1441  001322  C009  FFF7         	movff	printf@f+1,tblptrh
  1442  001326                     	if	0	;tblptru may be non-zero
  1443  001326                     	endif
  1444  001326                     	if	0	;tblptru may be non-zero
  1445  001326                     	endif
  1446  001326  0008               	tblrd		*
  1447  001328  50F5               	movf	tablat,w,c
  1448                           
  1449                           ; Switch size 1, requested type "space"
  1450                           ; Number of cases is 1, Range of values is 48 to 48
  1451                           ; switch strategies available:
  1452                           ; Name         Instructions Cycles
  1453                           ; simple_byte            4     3 (average)
  1454                           ;	Chosen strategy is simple_byte
  1455  00132A  0A30               	xorlw	48	; case 48
  1456  00132C  B4D8               	btfsc	status,2,c
  1457  00132E  D7F4               	goto	l1314
  1458                           
  1459                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1460                           
  1461                           ;doprnt.c: 586: }
  1462                           
  1463                           ;doprnt.c: 585: break;
  1464  001330  C008  FFF6         	movff	printf@f,tblptrl
  1465  001334  C009  FFF7         	movff	printf@f+1,tblptrh
  1466  001338                     	if	0	;tblptru may be non-zero
  1467  001338                     	endif
  1468  001338                     	if	0	;tblptru may be non-zero
  1469  001338                     	endif
  1470  001338  0008               	tblrd		*
  1471  00133A  50F5               	movf	tablat,w,c
  1472  00133C  ECD3  F00B         	call	_isdigit
  1473  001340  A0D8               	btfss	status,0,c
  1474  001342  D032               	goto	l1334
  1475                           
  1476                           ;doprnt.c: 598: width = 0;
  1477  001344  0E00               	movlw	0
  1478  001346  6E1C               	movwf	printf@width+1,c
  1479  001348  0E00               	movlw	0
  1480  00134A  6E1B               	movwf	printf@width,c
  1481  00134C                     l1324:
  1482                           
  1483                           ;doprnt.c: 600: width *= 10;
  1484  00134C  C01B  F001         	movff	printf@width,___wmul@multiplier
  1485  001350  C01C  F002         	movff	printf@width+1,___wmul@multiplier+1
  1486  001354  0E00               	movlw	0
  1487  001356  6E04               	movwf	___wmul@multiplicand+1,c
  1488  001358  0E0A               	movlw	10
  1489  00135A  6E03               	movwf	___wmul@multiplicand,c
  1490  00135C  ECAD  F00B         	call	___wmul	;wreg free
  1491  001360  C001  F01B         	movff	?___wmul,printf@width
  1492  001364  C002  F01C         	movff	?___wmul+1,printf@width+1
  1493                           
  1494                           ;doprnt.c: 601: width += *f++ - '0';
  1495  001368  0ED0               	movlw	208
  1496  00136A  6E10               	movwf	??_printf& (0+255),c
  1497  00136C  0EFF               	movlw	255
  1498  00136E  6E11               	movwf	(??_printf+1)& (0+255),c
  1499  001370  C008  FFF6         	movff	printf@f,tblptrl
  1500  001374  C009  FFF7         	movff	printf@f+1,tblptrh
  1501  001378                     	if	0	;tblptru may be non-zero
  1502  001378                     	endif
  1503  001378                     	if	0	;tblptru may be non-zero
  1504  001378                     	endif
  1505  001378  0008               	tblrd		*
  1506  00137A  50F5               	movf	tablat,w,c
  1507  00137C  6E12               	movwf	(??_printf+2)& (0+255),c
  1508  00137E  6A13               	clrf	(??_printf+3)& (0+255),c
  1509  001380  5010               	movf	??_printf,w,c
  1510  001382  2612               	addwf	??_printf+2,f,c
  1511  001384  5011               	movf	??_printf+1,w,c
  1512  001386  2213               	addwfc	??_printf+3,f,c
  1513  001388  5012               	movf	??_printf+2,w,c
  1514  00138A  261B               	addwf	printf@width,f,c
  1515  00138C  5013               	movf	??_printf+3,w,c
  1516  00138E  221C               	addwfc	printf@width+1,f,c
  1517  001390  4A08               	infsnz	printf@f,f,c
  1518  001392  2A09               	incf	printf@f+1,f,c
  1519                           
  1520                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1521  001394  C008  FFF6         	movff	printf@f,tblptrl
  1522  001398  C009  FFF7         	movff	printf@f+1,tblptrh
  1523  00139C                     	if	0	;tblptru may be non-zero
  1524  00139C                     	endif
  1525  00139C                     	if	0	;tblptru may be non-zero
  1526  00139C                     	endif
  1527  00139C  0008               	tblrd		*
  1528  00139E  50F5               	movf	tablat,w,c
  1529  0013A0  ECD3  F00B         	call	_isdigit
  1530  0013A4  B0D8               	btfsc	status,0,c
  1531  0013A6  D7D2               	goto	l1324
  1532  0013A8                     l1334:
  1533  0013A8  C008  FFF6         	movff	printf@f,tblptrl
  1534  0013AC  C009  FFF7         	movff	printf@f+1,tblptrh
  1535  0013B0  4A08               	infsnz	printf@f,f,c
  1536  0013B2  2A09               	incf	printf@f+1,f,c
  1537  0013B4                     	if	0	;tblptru may be non-zero
  1538  0013B4                     	endif
  1539  0013B4                     	if	0	;tblptru may be non-zero
  1540  0013B4                     	endif
  1541  0013B4  0008               	tblrd		*
  1542  0013B6  CFF5 F01D          	movff	tablat,printf@c
  1543  0013BA  501D               	movf	printf@c,w,c
  1544                           
  1545                           ; Switch size 1, requested type "space"
  1546                           ; Number of cases is 2, Range of values is 0 to 120
  1547                           ; switch strategies available:
  1548                           ; Name         Instructions Cycles
  1549                           ; simple_byte            7     4 (average)
  1550                           ;	Chosen strategy is simple_byte
  1551  0013BC  0A00               	xorlw	0	; case 0
  1552  0013BE  B4D8               	btfsc	status,2,c
  1553  0013C0  0012               	return	
  1554  0013C2  0A78               	xorlw	120	; case 120
  1555  0013C4  A4D8               	btfss	status,2,c
  1556  0013C6  D081               	goto	l1380
  1557                           
  1558                           ;doprnt.c: 1273: {
  1559                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1560  0013C8  C014  FFD9         	movff	printf@ap,fsr2l
  1561  0013CC  C015  FFDA         	movff	printf@ap+1,fsr2h
  1562  0013D0  CFDE F018          	movff	postinc2,printf@val
  1563  0013D4  CFDD F019          	movff	postdec2,printf@val+1
  1564  0013D8  0E02               	movlw	2
  1565  0013DA  2614               	addwf	printf@ap,f,c
  1566  0013DC  0E00               	movlw	0
  1567  0013DE  2215               	addwfc	printf@ap+1,f,c
  1568                           
  1569                           ;doprnt.c: 1287: }
  1570                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  1571  0013E0  0E01               	movlw	1
  1572  0013E2  6E1D               	movwf	printf@c,c
  1573  0013E4                     l1342:
  1574  0013E4  0E04               	movlw	4
  1575  0013E6  181D               	xorwf	printf@c,w,c
  1576  0013E8  B4D8               	btfsc	status,2,c
  1577  0013EA  D012               	goto	l1354
  1578                           
  1579                           ;doprnt.c: 1317: if(val < hexpowers[c])
  1580  0013EC  501D               	movf	printf@c,w,c
  1581  0013EE  0D02               	mullw	2
  1582  0013F0  0E12               	movlw	low _hexpowers
  1583  0013F2  24F3               	addwf	prodl,w,c
  1584  0013F4  6EF6               	movwf	tblptrl,c
  1585  0013F6  0E10               	movlw	high _hexpowers
  1586  0013F8  20F4               	addwfc	prodh,w,c
  1587  0013FA  6EF7               	movwf	tblptrh,c
  1588  0013FC                     	if	0	;There are less than 3 active tblptr bytes
  1589  0013FC                     	endif
  1590  0013FC  0009               	tblrd		*+
  1591  0013FE  50F5               	movf	tablat,w,c
  1592  001400  5C18               	subwf	printf@val,w,c
  1593  001402  0009               	tblrd		*+
  1594  001404  50F5               	movf	tablat,w,c
  1595  001406  5819               	subwfb	printf@val+1,w,c
  1596  001408  A0D8               	btfss	status,0,c
  1597  00140A  D002               	goto	l1354
  1598                           
  1599                           ;doprnt.c: 1318: break;
  1600  00140C  2A1D               	incf	printf@c,f,c
  1601  00140E  D7EA               	goto	l1342
  1602  001410                     l1354:
  1603                           
  1604                           ;doprnt.c: 1381: if(width > c)
  1605  001410  0E80               	movlw	128
  1606  001412  BE1D               	btfsc	printf@c,7,c
  1607  001414  0E7F               	movlw	127
  1608  001416  6E10               	movwf	??_printf& (0+255),c
  1609  001418  501B               	movf	printf@width,w,c
  1610  00141A  5C1D               	subwf	printf@c,w,c
  1611  00141C  501C               	movf	printf@width+1,w,c
  1612  00141E  0A80               	xorlw	128
  1613  001420  5810               	subwfb	??_printf& (0+255),w,c
  1614  001422  B0D8               	btfsc	status,0,c
  1615  001424  D007               	goto	l1358
  1616                           
  1617                           ;doprnt.c: 1382: width -= c;
  1618  001426  501D               	movf	printf@c,w,c
  1619  001428  5E1B               	subwf	printf@width,f,c
  1620  00142A  0E00               	movlw	0
  1621  00142C  BE1D               	btfsc	printf@c,7,c
  1622  00142E  0EFF               	movlw	255
  1623  001430  5A1C               	subwfb	printf@width+1,f,c
  1624  001432  D004               	goto	l1360
  1625  001434                     l1358:
  1626                           
  1627                           ;doprnt.c: 1383: else
  1628                           ;doprnt.c: 1384: width = 0;
  1629  001434  0E00               	movlw	0
  1630  001436  6E1C               	movwf	printf@width+1,c
  1631  001438  0E00               	movlw	0
  1632  00143A  6E1B               	movwf	printf@width,c
  1633  00143C                     l1360:
  1634                           
  1635                           ;doprnt.c: 1387: if(flag & 0x04) {
  1636  00143C  A417               	btfss	printf@flag,2,c
  1637  00143E  D00B               	goto	l1368
  1638  001440                     
  1639                           ;doprnt.c: 1415: if(width)
  1640  001440  501B               	movf	printf@width,w,c
  1641  001442  101C               	iorwf	printf@width+1,w,c
  1642  001444  B4D8               	btfsc	status,2,c
  1643  001446  D015               	goto	l247
  1644                           
  1645                           ;doprnt.c: 1417: (putch('0') );
  1646                           
  1647                           ;doprnt.c: 1416: do
  1648  001448  0E30               	movlw	48
  1649  00144A  EC0A  F00C         	call	_putch
  1650                           
  1651                           ;doprnt.c: 1418: while(--width);
  1652  00144E  061B               	decf	printf@width,f,c
  1653  001450  A0D8               	btfss	status,0,c
  1654  001452  061C               	decf	printf@width+1,f,c
  1655  001454  D7F5               	goto	L1
  1656  001456                     l1368:
  1657                           
  1658                           ;doprnt.c: 1422: {
  1659                           ;doprnt.c: 1424: if(width
  1660                           ;doprnt.c: 1428: )
  1661  001456  501B               	movf	printf@width,w,c
  1662  001458  101C               	iorwf	printf@width+1,w,c
  1663  00145A  B4D8               	btfsc	status,2,c
  1664  00145C  D00A               	goto	l247
  1665  00145E                     l1370:
  1666                           
  1667                           ;doprnt.c: 1430: (putch(' ') );
  1668  00145E  0E20               	movlw	32
  1669  001460  EC0A  F00C         	call	_putch
  1670                           
  1671                           ;doprnt.c: 1431: while(--width);
  1672  001464  061B               	decf	printf@width,f,c
  1673  001466  A0D8               	btfss	status,0,c
  1674  001468  061C               	decf	printf@width+1,f,c
  1675  00146A  501B               	movf	printf@width,w,c
  1676  00146C  101C               	iorwf	printf@width+1,w,c
  1677  00146E  A4D8               	btfss	status,2,c
  1678  001470  D7F6               	goto	l1370
  1679  001472                     l247:
  1680                           
  1681                           ;doprnt.c: 1469: }
  1682                           ;doprnt.c: 1472: prec = c;
  1683  001472  C01D  F01A         	movff	printf@c,printf@prec
  1684                           
  1685                           ;doprnt.c: 1474: while(prec--) {
  1686  001476  D025               	goto	l251
  1687  001478                     l1374:
  1688                           
  1689                           ;doprnt.c: 1478: {
  1690                           ;doprnt.c: 1499: {
  1691                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  1692  001478  C018  F001         	movff	printf@val,___lwdiv@dividend
  1693  00147C  C019  F002         	movff	printf@val+1,___lwdiv@dividend+1
  1694  001480  501A               	movf	printf@prec,w,c
  1695  001482  0D02               	mullw	2
  1696  001484  0E12               	movlw	low _hexpowers
  1697  001486  24F3               	addwf	prodl,w,c
  1698  001488  6EF6               	movwf	tblptrl,c
  1699  00148A  0E10               	movlw	high _hexpowers
  1700  00148C  20F4               	addwfc	prodh,w,c
  1701  00148E  6EF7               	movwf	tblptrh,c
  1702  001490                     	if	0	;There are less than 3 active tblptr bytes
  1703  001490                     	endif
  1704  001490  0009               	tblrd		*+
  1705  001492  CFF5 F003          	movff	tablat,___lwdiv@divisor
  1706  001496  000A               	tblrd		*-
  1707  001498  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  1708  00149C  EC3C  F00B         	call	___lwdiv	;wreg free
  1709  0014A0  5001               	movf	?___lwdiv,w,c
  1710  0014A2  0B0F               	andlw	15
  1711  0014A4  6E16               	movwf	printf@idx,c
  1712                           
  1713                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  1714  0014A6  5016               	movf	printf@idx,w,c
  1715  0014A8  0D01               	mullw	1
  1716  0014AA  0E21               	movlw	low STR_13
  1717  0014AC  24F3               	addwf	prodl,w,c
  1718  0014AE  6EF6               	movwf	tblptrl,c
  1719  0014B0  0E10               	movlw	high STR_13
  1720  0014B2  20F4               	addwfc	prodh,w,c
  1721  0014B4  6EF7               	movwf	tblptrh,c
  1722  0014B6                     	if	0	;There are less than 3 active tblptr bytes
  1723  0014B6                     	endif
  1724  0014B6  0008               	tblrd		*
  1725  0014B8  CFF5 F01D          	movff	tablat,printf@c
  1726                           
  1727                           ;doprnt.c: 1508: }
  1728                           ;doprnt.c: 1523: }
  1729                           ;doprnt.c: 1524: (putch(c) );
  1730  0014BC  501D               	movf	printf@c,w,c
  1731  0014BE  EC0A  F00C         	call	_putch
  1732  0014C2                     l251:
  1733  0014C2  061A               	decf	printf@prec,f,c
  1734  0014C4  281A               	incf	printf@prec,w,c
  1735  0014C6  A4D8               	btfss	status,2,c
  1736  0014C8  D7D7               	goto	l1374
  1737  0014CA                     l1380:
  1738  0014CA  C008  FFF6         	movff	printf@f,tblptrl
  1739  0014CE  C009  FFF7         	movff	printf@f+1,tblptrh
  1740  0014D2  4A08               	infsnz	printf@f,f,c
  1741  0014D4  2A09               	incf	printf@f+1,f,c
  1742  0014D6                     	if	0	;tblptru may be non-zero
  1743  0014D6                     	endif
  1744  0014D6                     	if	0	;tblptru may be non-zero
  1745  0014D6                     	endif
  1746  0014D6  0008               	tblrd		*
  1747  0014D8  CFF5 F01D          	movff	tablat,printf@c
  1748  0014DC  501D               	movf	printf@c,w,c
  1749  0014DE  B4D8               	btfsc	status,2,c
  1750  0014E0  0012               	return	
  1751  0014E2  D70B               	goto	l1308
  1752  0014E4                     __end_of_printf:
  1753                           	opt stack 0
  1754                           tblptru	equ	0xFF8
  1755                           tblptrh	equ	0xFF7
  1756                           tblptrl	equ	0xFF6
  1757                           tablat	equ	0xFF5
  1758                           prodh	equ	0xFF4
  1759                           prodl	equ	0xFF3
  1760                           postinc0	equ	0xFEE
  1761                           wreg	equ	0xFE8
  1762                           indf2	equ	0xFDF
  1763                           postinc2	equ	0xFDE
  1764                           postdec2	equ	0xFDD
  1765                           fsr2h	equ	0xFDA
  1766                           fsr2l	equ	0xFD9
  1767                           status	equ	0xFD8
  1768                           
  1769 ;; *************** function _putch *****************
  1770 ;; Defined at:
  1771 ;;		line 27 in file "lcd.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;  data            1    wreg     unsigned char 
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;  data            1    2[COMRAM] unsigned char 
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  1    wreg      void 
  1778 ;; Registers used:
  1779 ;;		wreg, status,2, status,0, cstack
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1786 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1788 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1789 ;;Total ram usage:        1 bytes
  1790 ;; Hardware stack levels used:    1
  1791 ;; Hardware stack levels required when called:    1
  1792 ;; This function calls:
  1793 ;;		_lcdNibble
  1794 ;; This function is called by:
  1795 ;;		_printf
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           	psect	text6
  1800  001814                     __ptext6:
  1801                           	opt stack 0
  1802  001814                     _putch:
  1803                           	opt stack 28
  1804                           
  1805                           ;incstack = 0
  1806                           ;putch@data stored from wreg
  1807  001814  6E03               	movwf	putch@data,c
  1808                           
  1809                           ;lcd.c: 28: LATDbits.LATD2 = 1;
  1810  001816  848C               	bsf	3980,2,c	;volatile
  1811                           
  1812                           ;lcd.c: 29: lcdNibble(data);
  1813  001818  5003               	movf	putch@data,w,c
  1814  00181A  EC11  F00B         	call	_lcdNibble
  1815  00181E  0012               	return		;funcret
  1816  001820                     __end_of_putch:
  1817                           	opt stack 0
  1818                           tblptru	equ	0xFF8
  1819                           tblptrh	equ	0xFF7
  1820                           tblptrl	equ	0xFF6
  1821                           tablat	equ	0xFF5
  1822                           prodh	equ	0xFF4
  1823                           prodl	equ	0xFF3
  1824                           postinc0	equ	0xFEE
  1825                           wreg	equ	0xFE8
  1826                           indf2	equ	0xFDF
  1827                           postinc2	equ	0xFDE
  1828                           postdec2	equ	0xFDD
  1829                           fsr2h	equ	0xFDA
  1830                           fsr2l	equ	0xFD9
  1831                           status	equ	0xFD8
  1832                           
  1833 ;; *************** function _isdigit *****************
  1834 ;; Defined at:
  1835 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\isdigit.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;  c               1    wreg     unsigned char 
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;  c               1    2[COMRAM] unsigned char 
  1840 ;; Return value:  Size  Location     Type
  1841 ;;		None               void
  1842 ;; Registers used:
  1843 ;;		wreg, status,2, status,0
  1844 ;; Tracked objects:
  1845 ;;		On entry : 0/0
  1846 ;;		On exit  : 0/0
  1847 ;;		Unchanged: 0/0
  1848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1850 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1851 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1852 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1853 ;;Total ram usage:        3 bytes
  1854 ;; Hardware stack levels used:    1
  1855 ;; This function calls:
  1856 ;;		Nothing
  1857 ;; This function is called by:
  1858 ;;		_printf
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862                           	psect	text7
  1863  0017A6                     __ptext7:
  1864                           	opt stack 0
  1865  0017A6                     _isdigit:
  1866                           	opt stack 29
  1867                           
  1868                           ;incstack = 0
  1869                           ;isdigit@c stored from wreg
  1870  0017A6  6E03               	movwf	isdigit@c,c
  1871  0017A8  0E00               	movlw	0
  1872  0017AA  6E02               	movwf	_isdigit$708,c
  1873  0017AC  0E3A               	movlw	58
  1874  0017AE  6003               	cpfslt	isdigit@c,c
  1875  0017B0  D005               	goto	l1274
  1876  0017B2  0E2F               	movlw	47
  1877  0017B4  6403               	cpfsgt	isdigit@c,c
  1878  0017B6  D002               	goto	l1274
  1879  0017B8  0E01               	movlw	1
  1880  0017BA  6E02               	movwf	_isdigit$708,c
  1881  0017BC                     l1274:
  1882  0017BC  C002  F001         	movff	_isdigit$708,??_isdigit
  1883  0017C0  3001               	rrcf	??_isdigit,w,c
  1884  0017C2  0012               	return	
  1885  0017C4                     __end_of_isdigit:
  1886                           	opt stack 0
  1887                           tblptru	equ	0xFF8
  1888                           tblptrh	equ	0xFF7
  1889                           tblptrl	equ	0xFF6
  1890                           tablat	equ	0xFF5
  1891                           prodh	equ	0xFF4
  1892                           prodl	equ	0xFF3
  1893                           postinc0	equ	0xFEE
  1894                           wreg	equ	0xFE8
  1895                           indf2	equ	0xFDF
  1896                           postinc2	equ	0xFDE
  1897                           postdec2	equ	0xFDD
  1898                           fsr2h	equ	0xFDA
  1899                           fsr2l	equ	0xFD9
  1900                           status	equ	0xFD8
  1901                           
  1902 ;; *************** function ___wmul *****************
  1903 ;; Defined at:
  1904 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  1905 ;; Parameters:    Size  Location     Type
  1906 ;;  multiplier      2    0[COMRAM] unsigned int 
  1907 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;  product         2    4[COMRAM] unsigned int 
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  2    0[COMRAM] unsigned int 
  1912 ;; Registers used:
  1913 ;;		wreg, status,2, status,0, prodl, prodh
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1919 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1920 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1922 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1923 ;;Total ram usage:        6 bytes
  1924 ;; Hardware stack levels used:    1
  1925 ;; This function calls:
  1926 ;;		Nothing
  1927 ;; This function is called by:
  1928 ;;		_printf
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932                           	psect	text8
  1933  00175A                     __ptext8:
  1934                           	opt stack 0
  1935  00175A                     ___wmul:
  1936                           	opt stack 29
  1937                           
  1938                           ;incstack = 0
  1939  00175A  5001               	movf	___wmul@multiplier,w,c
  1940  00175C  0203               	mulwf	___wmul@multiplicand,c
  1941  00175E  CFF3 F005          	movff	prodl,___wmul@product
  1942  001762  CFF4 F006          	movff	prodh,___wmul@product+1
  1943  001766  5001               	movf	___wmul@multiplier,w,c
  1944  001768  0204               	mulwf	___wmul@multiplicand+1,c
  1945  00176A  50F3               	movf	prodl,w,c
  1946  00176C  2606               	addwf	___wmul@product+1,f,c
  1947  00176E  5002               	movf	___wmul@multiplier+1,w,c
  1948  001770  0203               	mulwf	___wmul@multiplicand,c
  1949  001772  50F3               	movf	prodl,w,c
  1950  001774  2606               	addwf	___wmul@product+1,f,c
  1951  001776  C005  F001         	movff	___wmul@product,?___wmul
  1952  00177A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1953  00177E  0012               	return	
  1954  001780                     __end_of___wmul:
  1955                           	opt stack 0
  1956                           tblptru	equ	0xFF8
  1957                           tblptrh	equ	0xFF7
  1958                           tblptrl	equ	0xFF6
  1959                           tablat	equ	0xFF5
  1960                           prodh	equ	0xFF4
  1961                           prodl	equ	0xFF3
  1962                           postinc0	equ	0xFEE
  1963                           wreg	equ	0xFE8
  1964                           indf2	equ	0xFDF
  1965                           postinc2	equ	0xFDE
  1966                           postdec2	equ	0xFDD
  1967                           fsr2h	equ	0xFDA
  1968                           fsr2l	equ	0xFD9
  1969                           status	equ	0xFD8
  1970                           
  1971 ;; *************** function ___lwdiv *****************
  1972 ;; Defined at:
  1973 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;  dividend        2    0[COMRAM] unsigned int 
  1976 ;;  divisor         2    2[COMRAM] unsigned int 
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;  quotient        2    4[COMRAM] unsigned int 
  1979 ;;  counter         1    6[COMRAM] unsigned char 
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  2    0[COMRAM] unsigned int 
  1982 ;; Registers used:
  1983 ;;		wreg, status,2, status,0
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1989 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1990 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1992 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1993 ;;Total ram usage:        7 bytes
  1994 ;; Hardware stack levels used:    1
  1995 ;; This function calls:
  1996 ;;		Nothing
  1997 ;; This function is called by:
  1998 ;;		_printf
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002                           	psect	text9
  2003  001678                     __ptext9:
  2004                           	opt stack 0
  2005  001678                     ___lwdiv:
  2006                           	opt stack 29
  2007                           
  2008                           ;incstack = 0
  2009  001678  0E00               	movlw	0
  2010  00167A  6E06               	movwf	___lwdiv@quotient+1,c
  2011  00167C  0E00               	movlw	0
  2012  00167E  6E05               	movwf	___lwdiv@quotient,c
  2013  001680  5003               	movf	___lwdiv@divisor,w,c
  2014  001682  1004               	iorwf	___lwdiv@divisor+1,w,c
  2015  001684  B4D8               	btfsc	status,2,c
  2016  001686  D01C               	goto	l663
  2017  001688  0E01               	movlw	1
  2018  00168A  6E07               	movwf	___lwdiv@counter,c
  2019  00168C  D004               	goto	l1292
  2020  00168E                     l1290:
  2021  00168E  90D8               	bcf	status,0,c
  2022  001690  3603               	rlcf	___lwdiv@divisor,f,c
  2023  001692  3604               	rlcf	___lwdiv@divisor+1,f,c
  2024  001694  2A07               	incf	___lwdiv@counter,f,c
  2025  001696                     l1292:
  2026  001696  AE04               	btfss	___lwdiv@divisor+1,7,c
  2027  001698  D7FA               	goto	l1290
  2028  00169A                     l1294:
  2029  00169A  90D8               	bcf	status,0,c
  2030  00169C  3605               	rlcf	___lwdiv@quotient,f,c
  2031  00169E  3606               	rlcf	___lwdiv@quotient+1,f,c
  2032  0016A0  5003               	movf	___lwdiv@divisor,w,c
  2033  0016A2  5C01               	subwf	___lwdiv@dividend,w,c
  2034  0016A4  5004               	movf	___lwdiv@divisor+1,w,c
  2035  0016A6  5802               	subwfb	___lwdiv@dividend+1,w,c
  2036  0016A8  A0D8               	btfss	status,0,c
  2037  0016AA  D005               	goto	l1302
  2038  0016AC  5003               	movf	___lwdiv@divisor,w,c
  2039  0016AE  5E01               	subwf	___lwdiv@dividend,f,c
  2040  0016B0  5004               	movf	___lwdiv@divisor+1,w,c
  2041  0016B2  5A02               	subwfb	___lwdiv@dividend+1,f,c
  2042  0016B4  8005               	bsf	___lwdiv@quotient,0,c
  2043  0016B6                     l1302:
  2044  0016B6  90D8               	bcf	status,0,c
  2045  0016B8  3204               	rrcf	___lwdiv@divisor+1,f,c
  2046  0016BA  3203               	rrcf	___lwdiv@divisor,f,c
  2047  0016BC  2E07               	decfsz	___lwdiv@counter,f,c
  2048  0016BE  D7ED               	goto	l1294
  2049  0016C0                     l663:
  2050  0016C0  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2051  0016C4  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2052  0016C8  0012               	return		;funcret
  2053  0016CA                     __end_of___lwdiv:
  2054                           	opt stack 0
  2055                           tblptru	equ	0xFF8
  2056                           tblptrh	equ	0xFF7
  2057                           tblptrl	equ	0xFF6
  2058                           tablat	equ	0xFF5
  2059                           prodh	equ	0xFF4
  2060                           prodl	equ	0xFF3
  2061                           postinc0	equ	0xFEE
  2062                           wreg	equ	0xFE8
  2063                           indf2	equ	0xFDF
  2064                           postinc2	equ	0xFDE
  2065                           postdec2	equ	0xFDD
  2066                           fsr2h	equ	0xFDA
  2067                           fsr2l	equ	0xFD9
  2068                           status	equ	0xFD8
  2069                           
  2070 ;; *************** function _lcdInst *****************
  2071 ;; Defined at:
  2072 ;;		line 22 in file "lcd.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;  data            1    wreg     unsigned char 
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;  data            1    2[COMRAM] unsigned char 
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  1    wreg      void 
  2079 ;; Registers used:
  2080 ;;		wreg, status,2, status,0, cstack
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2087 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2089 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2090 ;;Total ram usage:        1 bytes
  2091 ;; Hardware stack levels used:    1
  2092 ;; Hardware stack levels required when called:    1
  2093 ;; This function calls:
  2094 ;;		_lcdNibble
  2095 ;; This function is called by:
  2096 ;;		_homescreen
  2097 ;;		_main
  2098 ;;		_initLCD
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           	psect	text10
  2103  001820                     __ptext10:
  2104                           	opt stack 0
  2105  001820                     _lcdInst:
  2106                           	opt stack 29
  2107                           
  2108                           ;incstack = 0
  2109                           ;lcdInst@data stored from wreg
  2110  001820  6E03               	movwf	lcdInst@data,c
  2111                           
  2112                           ;lcd.c: 23: LATDbits.LATD2 = 0;
  2113  001822  948C               	bcf	3980,2,c	;volatile
  2114                           
  2115                           ;lcd.c: 24: lcdNibble(data);
  2116  001824  5003               	movf	lcdInst@data,w,c
  2117  001826  EC11  F00B         	call	_lcdNibble
  2118  00182A  0012               	return		;funcret
  2119  00182C                     __end_of_lcdInst:
  2120                           	opt stack 0
  2121                           tblptru	equ	0xFF8
  2122                           tblptrh	equ	0xFF7
  2123                           tblptrl	equ	0xFF6
  2124                           tablat	equ	0xFF5
  2125                           prodh	equ	0xFF4
  2126                           prodl	equ	0xFF3
  2127                           postinc0	equ	0xFEE
  2128                           wreg	equ	0xFE8
  2129                           indf2	equ	0xFDF
  2130                           postinc2	equ	0xFDE
  2131                           postdec2	equ	0xFDD
  2132                           fsr2h	equ	0xFDA
  2133                           fsr2l	equ	0xFD9
  2134                           status	equ	0xFD8
  2135                           
  2136 ;; *************** function _lcdNibble *****************
  2137 ;; Defined at:
  2138 ;;		line 32 in file "lcd.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;  data            1    wreg     unsigned char 
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;  data            1    1[COMRAM] unsigned char 
  2143 ;;  temp            1    0[COMRAM] unsigned char 
  2144 ;; Return value:  Size  Location     Type
  2145 ;;                  1    wreg      void 
  2146 ;; Registers used:
  2147 ;;		wreg, status,2, status,0
  2148 ;; Tracked objects:
  2149 ;;		On entry : 0/0
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2154 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2156 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2157 ;;Total ram usage:        2 bytes
  2158 ;; Hardware stack levels used:    1
  2159 ;; This function calls:
  2160 ;;		Nothing
  2161 ;; This function is called by:
  2162 ;;		_lcdInst
  2163 ;;		_putch
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167                           	psect	text11
  2168  001622                     __ptext11:
  2169                           	opt stack 0
  2170  001622                     _lcdNibble:
  2171                           	opt stack 28
  2172                           
  2173                           ;incstack = 0
  2174                           ;lcdNibble@data stored from wreg
  2175  001622  6E02               	movwf	lcdNibble@data,c
  2176                           
  2177                           ;lcd.c: 34: char temp = data & 0xF0;
  2178  001624  5002               	movf	lcdNibble@data,w,c
  2179  001626  0BF0               	andlw	240
  2180  001628  6E01               	movwf	lcdNibble@temp,c
  2181                           
  2182                           ;lcd.c: 35: LATD = LATD & 0x0F;
  2183  00162A  508C               	movf	3980,w,c	;volatile
  2184  00162C  0B0F               	andlw	15
  2185  00162E  6E8C               	movwf	3980,c	;volatile
  2186                           
  2187                           ;lcd.c: 36: LATD = temp | LATD;
  2188  001630  5001               	movf	lcdNibble@temp,w,c
  2189  001632  108C               	iorwf	3980,w,c	;volatile
  2190  001634  6E8C               	movwf	3980,c	;volatile
  2191                           
  2192                           ;lcd.c: 38: LATDbits.LATD3 = 0;
  2193  001636  968C               	bcf	3980,3,c	;volatile
  2194                           
  2195                           ;lcd.c: 39: _delay((unsigned long)((25)*(32000000/4000000.0)));
  2196  001638  0E42               	movlw	66
  2197  00163A                     u817:
  2198  00163A  2EE8               	decfsz	wreg,f,c
  2199  00163C  D7FE               	bra	u817
  2200  00163E  D000               	nop2	
  2201                           
  2202                           ;lcd.c: 40: LATDbits.LATD3 = 1;
  2203  001640  868C               	bsf	3980,3,c	;volatile
  2204                           
  2205                           ;lcd.c: 41: _delay((unsigned long)((25)*(32000000/4000000.0)));
  2206  001642  0E42               	movlw	66
  2207  001644                     u827:
  2208  001644  2EE8               	decfsz	wreg,f,c
  2209  001646  D7FE               	bra	u827
  2210  001648  D000               	nop2	
  2211                           
  2212                           ;lcd.c: 43: data = data << 4;
  2213  00164A  3802               	swapf	lcdNibble@data,w,c
  2214  00164C  0BF0               	andlw	240
  2215  00164E  6E02               	movwf	lcdNibble@data,c
  2216                           
  2217                           ;lcd.c: 45: temp = data & 0xF0;
  2218  001650  5002               	movf	lcdNibble@data,w,c
  2219  001652  0BF0               	andlw	240
  2220  001654  6E01               	movwf	lcdNibble@temp,c
  2221                           
  2222                           ;lcd.c: 46: LATD = LATD & 0x0F;
  2223  001656  508C               	movf	3980,w,c	;volatile
  2224  001658  0B0F               	andlw	15
  2225  00165A  6E8C               	movwf	3980,c	;volatile
  2226                           
  2227                           ;lcd.c: 47: LATD = temp | LATD;
  2228  00165C  5001               	movf	lcdNibble@temp,w,c
  2229  00165E  108C               	iorwf	3980,w,c	;volatile
  2230  001660  6E8C               	movwf	3980,c	;volatile
  2231                           
  2232                           ;lcd.c: 49: LATDbits.LATD3 = 0;
  2233  001662  968C               	bcf	3980,3,c	;volatile
  2234                           
  2235                           ;lcd.c: 50: _delay((unsigned long)((25)*(32000000/4000000.0)));
  2236  001664  0E42               	movlw	66
  2237  001666                     u837:
  2238  001666  2EE8               	decfsz	wreg,f,c
  2239  001668  D7FE               	bra	u837
  2240  00166A  D000               	nop2	
  2241                           
  2242                           ;lcd.c: 51: LATDbits.LATD3 = 1;
  2243  00166C  868C               	bsf	3980,3,c	;volatile
  2244                           
  2245                           ;lcd.c: 52: _delay((unsigned long)((25)*(32000000/4000000.0)));
  2246  00166E  0E42               	movlw	66
  2247  001670                     u847:
  2248  001670  2EE8               	decfsz	wreg,f,c
  2249  001672  D7FE               	bra	u847
  2250  001674  D000               	nop2	
  2251  001676  0012               	return		;funcret
  2252  001678                     __end_of_lcdNibble:
  2253                           	opt stack 0
  2254                           tblptru	equ	0xFF8
  2255                           tblptrh	equ	0xFF7
  2256                           tblptrl	equ	0xFF6
  2257                           tablat	equ	0xFF5
  2258                           prodh	equ	0xFF4
  2259                           prodl	equ	0xFF3
  2260                           postinc0	equ	0xFEE
  2261                           wreg	equ	0xFE8
  2262                           indf2	equ	0xFDF
  2263                           postinc2	equ	0xFDE
  2264                           postdec2	equ	0xFDD
  2265                           fsr2h	equ	0xFDA
  2266                           fsr2l	equ	0xFD9
  2267                           status	equ	0xFD8
  2268                           
  2269 ;; *************** function _PWM1off *****************
  2270 ;; Defined at:
  2271 ;;		line 19 in file "motors.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;		None
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;		None
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  1    wreg      void 
  2278 ;; Registers used:
  2279 ;;		wreg, status,2
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2289 ;;Total ram usage:        0 bytes
  2290 ;; Hardware stack levels used:    1
  2291 ;; This function calls:
  2292 ;;		Nothing
  2293 ;; This function is called by:
  2294 ;;		_main
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           	psect	text12
  2299  00182C                     __ptext12:
  2300                           	opt stack 0
  2301  00182C                     _PWM1off:
  2302                           	opt stack 30
  2303                           
  2304                           ;motors.c: 20: CCP1CONbits.DC1B0 = 0;
  2305                           
  2306                           ;incstack = 0
  2307  00182C  98BD               	bcf	4029,4,c	;volatile
  2308                           
  2309                           ;motors.c: 21: CCP1CONbits.DC1B1 = 0;
  2310  00182E  9ABD               	bcf	4029,5,c	;volatile
  2311                           
  2312                           ;motors.c: 22: CCPR1L = 0;
  2313  001830  0E00               	movlw	0
  2314  001832  6EBE               	movwf	4030,c	;volatile
  2315  001834  0012               	return		;funcret
  2316  001836                     __end_of_PWM1off:
  2317                           	opt stack 0
  2318                           tblptru	equ	0xFF8
  2319                           tblptrh	equ	0xFF7
  2320                           tblptrl	equ	0xFF6
  2321                           tablat	equ	0xFF5
  2322                           prodh	equ	0xFF4
  2323                           prodl	equ	0xFF3
  2324                           postinc0	equ	0xFEE
  2325                           wreg	equ	0xFE8
  2326                           indf2	equ	0xFDF
  2327                           postinc2	equ	0xFDE
  2328                           postdec2	equ	0xFDD
  2329                           fsr2h	equ	0xFDA
  2330                           fsr2l	equ	0xFD9
  2331                           status	equ	0xFD8
  2332                           
  2333 ;; *************** function _PWM1 *****************
  2334 ;; Defined at:
  2335 ;;		line 5 in file "motors.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;  duty            2    0[COMRAM] int 
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;		None
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  1    wreg      void 
  2342 ;; Registers used:
  2343 ;;		wreg, status,2, status,0
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2349 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2351 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2352 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2353 ;;Total ram usage:        4 bytes
  2354 ;; Hardware stack levels used:    1
  2355 ;; This function calls:
  2356 ;;		Nothing
  2357 ;; This function is called by:
  2358 ;;		_main
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           
  2362                           	psect	text13
  2363  0016CA                     __ptext13:
  2364                           	opt stack 0
  2365  0016CA                     _PWM1:
  2366                           	opt stack 30
  2367                           
  2368                           ;motors.c: 13: CCP1CONbits.DC1B0 = duty & 1;
  2369                           
  2370                           ;incstack = 0
  2371  0016CA  C001  F003         	movff	PWM1@duty,??_PWM1
  2372  0016CE  0E01               	movlw	1
  2373  0016D0  1603               	andwf	??_PWM1,f,c
  2374  0016D2  3A03               	swapf	??_PWM1,f,c
  2375  0016D4  50BD               	movf	4029,w,c	;volatile
  2376  0016D6  1803               	xorwf	??_PWM1,w,c
  2377  0016D8  0BEF               	andlw	-17
  2378  0016DA  1803               	xorwf	??_PWM1,w,c
  2379  0016DC  6EBD               	movwf	4029,c	;volatile
  2380                           
  2381                           ;motors.c: 14: CCP1CONbits.DC1B1 = (duty >> 1) & 1;
  2382  0016DE  3402               	rlcf	PWM1@duty+1,w,c
  2383  0016E0  3002               	rrcf	PWM1@duty+1,w,c
  2384  0016E2  6E04               	movwf	(??_PWM1+1)& (0+255),c
  2385  0016E4  3001               	rrcf	PWM1@duty,w,c
  2386  0016E6  6E03               	movwf	??_PWM1& (0+255),c
  2387  0016E8  0E01               	movlw	1
  2388  0016EA  1603               	andwf	??_PWM1,f,c
  2389  0016EC  3A03               	swapf	??_PWM1,f,c
  2390  0016EE  4603               	rlncf	??_PWM1,f,c
  2391  0016F0  50BD               	movf	4029,w,c	;volatile
  2392  0016F2  1803               	xorwf	??_PWM1,w,c
  2393  0016F4  0BDF               	andlw	-33
  2394  0016F6  1803               	xorwf	??_PWM1,w,c
  2395  0016F8  6EBD               	movwf	4029,c	;volatile
  2396                           
  2397                           ;motors.c: 15: CCPR1L = (duty >> 2);
  2398  0016FA  C001  F003         	movff	PWM1@duty,??_PWM1
  2399  0016FE  C002  F004         	movff	PWM1@duty+1,??_PWM1+1
  2400  001702  3404               	rlcf	??_PWM1+1,w,c
  2401  001704  3204               	rrcf	??_PWM1+1,f,c
  2402  001706  3203               	rrcf	??_PWM1,f,c
  2403  001708  3404               	rlcf	??_PWM1+1,w,c
  2404  00170A  3204               	rrcf	??_PWM1+1,f,c
  2405  00170C  3203               	rrcf	??_PWM1,f,c
  2406  00170E  5003               	movf	??_PWM1,w,c
  2407  001710  6EBE               	movwf	4030,c	;volatile
  2408  001712  0012               	return		;funcret
  2409  001714                     __end_of_PWM1:
  2410                           	opt stack 0
  2411                           tblptru	equ	0xFF8
  2412                           tblptrh	equ	0xFF7
  2413                           tblptrl	equ	0xFF6
  2414                           tablat	equ	0xFF5
  2415                           prodh	equ	0xFF4
  2416                           prodl	equ	0xFF3
  2417                           postinc0	equ	0xFEE
  2418                           wreg	equ	0xFE8
  2419                           indf2	equ	0xFDF
  2420                           postinc2	equ	0xFDE
  2421                           postdec2	equ	0xFDD
  2422                           fsr2h	equ	0xFDA
  2423                           fsr2l	equ	0xFD9
  2424                           status	equ	0xFD8
  2425                           
  2426 ;; *************** function _I2C_Master_Write *****************
  2427 ;; Defined at:
  2428 ;;		line 46 in file "I2C.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;  d               2    1[COMRAM] unsigned int 
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;		None
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  1    wreg      void 
  2435 ;; Registers used:
  2436 ;;		wreg, status,2, status,0, cstack
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2442 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2445 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2446 ;;Total ram usage:        2 bytes
  2447 ;; Hardware stack levels used:    1
  2448 ;; Hardware stack levels required when called:    1
  2449 ;; This function calls:
  2450 ;;		_I2C_Master_Wait
  2451 ;; This function is called by:
  2452 ;;		_main
  2453 ;;		_set_time
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457                           	psect	text14
  2458  001836                     __ptext14:
  2459                           	opt stack 0
  2460  001836                     _I2C_Master_Write:
  2461                           	opt stack 29
  2462                           
  2463                           ;I2C.c: 48: I2C_Master_Wait();
  2464                           
  2465                           ;incstack = 0
  2466  001836  EC01  F00C         	call	_I2C_Master_Wait	;wreg free
  2467                           
  2468                           ;I2C.c: 49: SSPBUF = d;
  2469  00183A  C002  FFC9         	movff	I2C_Master_Write@d,4041	;volatile
  2470  00183E  0012               	return		;funcret
  2471  001840                     __end_of_I2C_Master_Write:
  2472                           	opt stack 0
  2473                           tblptru	equ	0xFF8
  2474                           tblptrh	equ	0xFF7
  2475                           tblptrl	equ	0xFF6
  2476                           tablat	equ	0xFF5
  2477                           prodh	equ	0xFF4
  2478                           prodl	equ	0xFF3
  2479                           postinc0	equ	0xFEE
  2480                           wreg	equ	0xFE8
  2481                           indf2	equ	0xFDF
  2482                           postinc2	equ	0xFDE
  2483                           postdec2	equ	0xFDD
  2484                           fsr2h	equ	0xFDA
  2485                           fsr2l	equ	0xFD9
  2486                           status	equ	0xFD8
  2487                           
  2488 ;; *************** function _I2C_Master_Stop *****************
  2489 ;; Defined at:
  2490 ;;		line 40 in file "I2C.c"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;		None
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;		None
  2495 ;; Return value:  Size  Location     Type
  2496 ;;                  1    wreg      void 
  2497 ;; Registers used:
  2498 ;;		wreg, status,2, status,0, cstack
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2508 ;;Total ram usage:        0 bytes
  2509 ;; Hardware stack levels used:    1
  2510 ;; Hardware stack levels required when called:    1
  2511 ;; This function calls:
  2512 ;;		_I2C_Master_Wait
  2513 ;; This function is called by:
  2514 ;;		_main
  2515 ;;		_set_time
  2516 ;; This function uses a non-reentrant model
  2517 ;;
  2518                           
  2519                           	psect	text15
  2520  001840                     __ptext15:
  2521                           	opt stack 0
  2522  001840                     _I2C_Master_Stop:
  2523                           	opt stack 29
  2524                           
  2525                           ;I2C.c: 42: I2C_Master_Wait();
  2526                           
  2527                           ;incstack = 0
  2528  001840  EC01  F00C         	call	_I2C_Master_Wait	;wreg free
  2529                           
  2530                           ;I2C.c: 43: PEN = 1;
  2531  001844  84C5               	bsf	4037,2,c	;volatile
  2532  001846  0012               	return		;funcret
  2533  001848                     __end_of_I2C_Master_Stop:
  2534                           	opt stack 0
  2535                           tblptru	equ	0xFF8
  2536                           tblptrh	equ	0xFF7
  2537                           tblptrl	equ	0xFF6
  2538                           tablat	equ	0xFF5
  2539                           prodh	equ	0xFF4
  2540                           prodl	equ	0xFF3
  2541                           postinc0	equ	0xFEE
  2542                           wreg	equ	0xFE8
  2543                           indf2	equ	0xFDF
  2544                           postinc2	equ	0xFDE
  2545                           postdec2	equ	0xFDD
  2546                           fsr2h	equ	0xFDA
  2547                           fsr2l	equ	0xFD9
  2548                           status	equ	0xFD8
  2549                           
  2550 ;; *************** function _I2C_Master_Start *****************
  2551 ;; Defined at:
  2552 ;;		line 28 in file "I2C.c"
  2553 ;; Parameters:    Size  Location     Type
  2554 ;;		None
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;		None
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  2   12[None  ] int 
  2559 ;; Registers used:
  2560 ;;		wreg, status,2, status,0, cstack
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2570 ;;Total ram usage:        0 bytes
  2571 ;; Hardware stack levels used:    1
  2572 ;; Hardware stack levels required when called:    1
  2573 ;; This function calls:
  2574 ;;		_I2C_Master_Wait
  2575 ;; This function is called by:
  2576 ;;		_main
  2577 ;;		_set_time
  2578 ;; This function uses a non-reentrant model
  2579 ;;
  2580                           
  2581                           	psect	text16
  2582  001848                     __ptext16:
  2583                           	opt stack 0
  2584  001848                     _I2C_Master_Start:
  2585                           	opt stack 29
  2586                           
  2587                           ;I2C.c: 30: I2C_Master_Wait();
  2588                           
  2589                           ;incstack = 0
  2590  001848  EC01  F00C         	call	_I2C_Master_Wait	;wreg free
  2591                           
  2592                           ;I2C.c: 31: SEN = 1;
  2593  00184C  80C5               	bsf	4037,0,c	;volatile
  2594  00184E  0012               	return		;funcret
  2595  001850                     __end_of_I2C_Master_Start:
  2596                           	opt stack 0
  2597                           tblptru	equ	0xFF8
  2598                           tblptrh	equ	0xFF7
  2599                           tblptrl	equ	0xFF6
  2600                           tablat	equ	0xFF5
  2601                           prodh	equ	0xFF4
  2602                           prodl	equ	0xFF3
  2603                           postinc0	equ	0xFEE
  2604                           wreg	equ	0xFE8
  2605                           indf2	equ	0xFDF
  2606                           postinc2	equ	0xFDE
  2607                           postdec2	equ	0xFDD
  2608                           fsr2h	equ	0xFDA
  2609                           fsr2l	equ	0xFD9
  2610                           status	equ	0xFD8
  2611                           
  2612 ;; *************** function _I2C_Master_Read *****************
  2613 ;; Defined at:
  2614 ;;		line 52 in file "I2C.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;  a               1    wreg     unsigned char 
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;  a               1    1[COMRAM] unsigned char 
  2619 ;;  temp            1    2[COMRAM] unsigned char 
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  1    wreg      unsigned char 
  2622 ;; Registers used:
  2623 ;;		wreg, status,2, status,0, cstack
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2630 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2632 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2633 ;;Total ram usage:        2 bytes
  2634 ;; Hardware stack levels used:    1
  2635 ;; Hardware stack levels required when called:    1
  2636 ;; This function calls:
  2637 ;;		_I2C_Master_Wait
  2638 ;; This function is called by:
  2639 ;;		_main
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           	psect	text17
  2644  001780                     __ptext17:
  2645                           	opt stack 0
  2646  001780                     _I2C_Master_Read:
  2647                           	opt stack 29
  2648                           
  2649                           ;incstack = 0
  2650                           ;I2C_Master_Read@a stored from wreg
  2651  001780  6E02               	movwf	I2C_Master_Read@a,c
  2652                           
  2653                           ;I2C.c: 54: unsigned char temp;
  2654                           ;I2C.c: 55: I2C_Master_Wait();
  2655  001782  EC01  F00C         	call	_I2C_Master_Wait	;wreg free
  2656                           
  2657                           ;I2C.c: 56: RCEN = 1;
  2658  001786  86C5               	bsf	4037,3,c	;volatile
  2659                           
  2660                           ;I2C.c: 57: I2C_Master_Wait();
  2661  001788  EC01  F00C         	call	_I2C_Master_Wait	;wreg free
  2662                           
  2663                           ;I2C.c: 58: temp = SSPBUF;
  2664  00178C  CFC9 F003          	movff	4041,I2C_Master_Read@temp	;volatile
  2665                           
  2666                           ;I2C.c: 59: I2C_Master_Wait();
  2667  001790  EC01  F00C         	call	_I2C_Master_Wait	;wreg free
  2668                           
  2669                           ;I2C.c: 60: ACKDT = (a)?0:1;
  2670  001794  5002               	movf	I2C_Master_Read@a,w,c
  2671  001796  A4D8               	btfss	status,2,c
  2672  001798  D002               	goto	u300
  2673  00179A  8AC5               	bsf	4037,5,c	;volatile
  2674  00179C  D001               	goto	l1102
  2675  00179E                     u300:
  2676  00179E  9AC5               	bcf	4037,5,c	;volatile
  2677  0017A0                     l1102:
  2678                           
  2679                           ;I2C.c: 61: ACKEN = 1;
  2680  0017A0  88C5               	bsf	4037,4,c	;volatile
  2681                           
  2682                           ;I2C.c: 62: return temp;
  2683  0017A2  5003               	movf	I2C_Master_Read@temp,w,c
  2684  0017A4  0012               	return	
  2685  0017A6                     __end_of_I2C_Master_Read:
  2686                           	opt stack 0
  2687                           tblptru	equ	0xFF8
  2688                           tblptrh	equ	0xFF7
  2689                           tblptrl	equ	0xFF6
  2690                           tablat	equ	0xFF5
  2691                           prodh	equ	0xFF4
  2692                           prodl	equ	0xFF3
  2693                           postinc0	equ	0xFEE
  2694                           wreg	equ	0xFE8
  2695                           indf2	equ	0xFDF
  2696                           postinc2	equ	0xFDE
  2697                           postdec2	equ	0xFDD
  2698                           fsr2h	equ	0xFDA
  2699                           fsr2l	equ	0xFD9
  2700                           status	equ	0xFD8
  2701                           
  2702 ;; *************** function _I2C_Master_Wait *****************
  2703 ;; Defined at:
  2704 ;;		line 23 in file "I2C.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;		None
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;		None
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  1    wreg      void 
  2711 ;; Registers used:
  2712 ;;		wreg, status,2, status,0
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2720 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2721 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2722 ;;Total ram usage:        1 bytes
  2723 ;; Hardware stack levels used:    1
  2724 ;; This function calls:
  2725 ;;		Nothing
  2726 ;; This function is called by:
  2727 ;;		_I2C_Master_Start
  2728 ;;		_I2C_Master_Stop
  2729 ;;		_I2C_Master_Write
  2730 ;;		_I2C_Master_Read
  2731 ;;		_I2C_Master_RepeatedStart
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           	psect	text18
  2736  001802                     __ptext18:
  2737                           	opt stack 0
  2738  001802                     _I2C_Master_Wait:
  2739                           	opt stack 29
  2740  001802                     l173:
  2741  001802  B4C7               	btfsc	4039,2,c	;volatile
  2742  001804  D7FE               	goto	l173
  2743  001806  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
  2744  00180A  0E1F               	movlw	31
  2745  00180C  1601               	andwf	??_I2C_Master_Wait,f,c
  2746  00180E  B4D8               	btfsc	status,2,c
  2747  001810  0012               	return	
  2748  001812  D7F7               	goto	l173
  2749  001814                     __end_of_I2C_Master_Wait:
  2750                           	opt stack 0
  2751                           tblptru	equ	0xFF8
  2752                           tblptrh	equ	0xFF7
  2753                           tblptrl	equ	0xFF6
  2754                           tablat	equ	0xFF5
  2755                           prodh	equ	0xFF4
  2756                           prodl	equ	0xFF3
  2757                           postinc0	equ	0xFEE
  2758                           wreg	equ	0xFE8
  2759                           indf2	equ	0xFDF
  2760                           postinc2	equ	0xFDE
  2761                           postdec2	equ	0xFDD
  2762                           fsr2h	equ	0xFDA
  2763                           fsr2l	equ	0xFD9
  2764                           status	equ	0xFD8
  2765                           
  2766 ;; *************** function _I2C_Master_Init *****************
  2767 ;; Defined at:
  2768 ;;		line 12 in file "I2C.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;  c               4   13[COMRAM] const unsigned long 
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;		None
  2773 ;; Return value:  Size  Location     Type
  2774 ;;                  1    wreg      void 
  2775 ;; Registers used:
  2776 ;;		wreg, status,2, status,0, cstack
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2782 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2784 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2785 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2786 ;;Total ram usage:        8 bytes
  2787 ;; Hardware stack levels used:    1
  2788 ;; Hardware stack levels required when called:    1
  2789 ;; This function calls:
  2790 ;;		___lldiv
  2791 ;; This function is called by:
  2792 ;;		_main
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           	psect	text19
  2797  0015C8                     __ptext19:
  2798                           	opt stack 0
  2799  0015C8                     _I2C_Master_Init:
  2800                           	opt stack 29
  2801                           
  2802                           ;I2C.c: 15: SSPSTAT = 0b00000000;
  2803                           
  2804                           ;incstack = 0
  2805  0015C8  0E00               	movlw	0
  2806  0015CA  6EC7               	movwf	4039,c	;volatile
  2807                           
  2808                           ;I2C.c: 16: SSPCON1 = 0b00101000;
  2809  0015CC  0E28               	movlw	40
  2810  0015CE  6EC6               	movwf	4038,c	;volatile
  2811                           
  2812                           ;I2C.c: 17: SSPCON2 = 0b00000000;
  2813  0015D0  0E00               	movlw	0
  2814  0015D2  6EC5               	movwf	4037,c	;volatile
  2815                           
  2816                           ;I2C.c: 18: SSPADD = (32000000/(4*c))-1;
  2817  0015D4  0E00               	movlw	0
  2818  0015D6  6E01               	movwf	___lldiv@dividend,c
  2819  0015D8  0E48               	movlw	72
  2820  0015DA  6E02               	movwf	___lldiv@dividend+1,c
  2821  0015DC  0EE8               	movlw	232
  2822  0015DE  6E03               	movwf	___lldiv@dividend+2,c
  2823  0015E0  0E01               	movlw	1
  2824  0015E2  6E04               	movwf	___lldiv@dividend+3,c
  2825  0015E4  C00E  F012         	movff	I2C_Master_Init@c,??_I2C_Master_Init
  2826  0015E8  C00F  F013         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
  2827  0015EC  C010  F014         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
  2828  0015F0  C011  F015         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
  2829  0015F4  0E02               	movlw	2
  2830  0015F6                     u645:
  2831  0015F6  90D8               	bcf	status,0,c
  2832  0015F8  3612               	rlcf	??_I2C_Master_Init,f,c
  2833  0015FA  3613               	rlcf	??_I2C_Master_Init+1,f,c
  2834  0015FC  3614               	rlcf	??_I2C_Master_Init+2,f,c
  2835  0015FE  3615               	rlcf	??_I2C_Master_Init+3,f,c
  2836  001600  2EE8               	decfsz	wreg,f,c
  2837  001602  D7F9               	goto	u645
  2838  001604  C012  F005         	movff	??_I2C_Master_Init,___lldiv@divisor
  2839  001608  C013  F006         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  2840  00160C  C014  F007         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  2841  001610  C015  F008         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  2842  001614  EC72  F00A         	call	___lldiv	;wreg free
  2843  001618  0401               	decf	?___lldiv,w,c
  2844  00161A  6EC8               	movwf	4040,c	;volatile
  2845                           
  2846                           ;I2C.c: 19: TRISC3 = 1;
  2847  00161C  8694               	bsf	3988,3,c	;volatile
  2848                           
  2849                           ;I2C.c: 20: TRISC4 = 1;
  2850  00161E  8894               	bsf	3988,4,c	;volatile
  2851  001620  0012               	return		;funcret
  2852  001622                     __end_of_I2C_Master_Init:
  2853                           	opt stack 0
  2854                           tblptru	equ	0xFF8
  2855                           tblptrh	equ	0xFF7
  2856                           tblptrl	equ	0xFF6
  2857                           tablat	equ	0xFF5
  2858                           prodh	equ	0xFF4
  2859                           prodl	equ	0xFF3
  2860                           postinc0	equ	0xFEE
  2861                           wreg	equ	0xFE8
  2862                           indf2	equ	0xFDF
  2863                           postinc2	equ	0xFDE
  2864                           postdec2	equ	0xFDD
  2865                           fsr2h	equ	0xFDA
  2866                           fsr2l	equ	0xFD9
  2867                           status	equ	0xFD8
  2868                           
  2869 ;; *************** function ___lldiv *****************
  2870 ;; Defined at:
  2871 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;  dividend        4    0[COMRAM] unsigned long 
  2874 ;;  divisor         4    4[COMRAM] unsigned long 
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;  quotient        4    8[COMRAM] unsigned long 
  2877 ;;  counter         1   12[COMRAM] unsigned char 
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  4    0[COMRAM] unsigned long 
  2880 ;; Registers used:
  2881 ;;		wreg, status,2, status,0
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2887 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2888 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2890 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2891 ;;Total ram usage:       13 bytes
  2892 ;; Hardware stack levels used:    1
  2893 ;; This function calls:
  2894 ;;		Nothing
  2895 ;; This function is called by:
  2896 ;;		_I2C_Master_Init
  2897 ;; This function uses a non-reentrant model
  2898 ;;
  2899                           
  2900                           	psect	text20
  2901  0014E4                     __ptext20:
  2902                           	opt stack 0
  2903  0014E4                     ___lldiv:
  2904                           	opt stack 29
  2905                           
  2906                           ;incstack = 0
  2907  0014E4  0E00               	movlw	0
  2908  0014E6  6E09               	movwf	___lldiv@quotient,c
  2909  0014E8  0E00               	movlw	0
  2910  0014EA  6E0A               	movwf	___lldiv@quotient+1,c
  2911  0014EC  0E00               	movlw	0
  2912  0014EE  6E0B               	movwf	___lldiv@quotient+2,c
  2913  0014F0  0E00               	movlw	0
  2914  0014F2  6E0C               	movwf	___lldiv@quotient+3,c
  2915  0014F4  5005               	movf	___lldiv@divisor,w,c
  2916  0014F6  1006               	iorwf	___lldiv@divisor+1,w,c
  2917  0014F8  1007               	iorwf	___lldiv@divisor+2,w,c
  2918  0014FA  1008               	iorwf	___lldiv@divisor+3,w,c
  2919  0014FC  B4D8               	btfsc	status,2,c
  2920  0014FE  D02A               	goto	l610
  2921  001500  0E01               	movlw	1
  2922  001502  6E0D               	movwf	___lldiv@counter,c
  2923  001504  D006               	goto	l1390
  2924  001506                     l1388:
  2925  001506  90D8               	bcf	status,0,c
  2926  001508  3605               	rlcf	___lldiv@divisor,f,c
  2927  00150A  3606               	rlcf	___lldiv@divisor+1,f,c
  2928  00150C  3607               	rlcf	___lldiv@divisor+2,f,c
  2929  00150E  3608               	rlcf	___lldiv@divisor+3,f,c
  2930  001510  2A0D               	incf	___lldiv@counter,f,c
  2931  001512                     l1390:
  2932  001512  AE08               	btfss	___lldiv@divisor+3,7,c
  2933  001514  D7F8               	goto	l1388
  2934  001516                     l1392:
  2935  001516  90D8               	bcf	status,0,c
  2936  001518  3609               	rlcf	___lldiv@quotient,f,c
  2937  00151A  360A               	rlcf	___lldiv@quotient+1,f,c
  2938  00151C  360B               	rlcf	___lldiv@quotient+2,f,c
  2939  00151E  360C               	rlcf	___lldiv@quotient+3,f,c
  2940  001520  5005               	movf	___lldiv@divisor,w,c
  2941  001522  5C01               	subwf	___lldiv@dividend,w,c
  2942  001524  5006               	movf	___lldiv@divisor+1,w,c
  2943  001526  5802               	subwfb	___lldiv@dividend+1,w,c
  2944  001528  5007               	movf	___lldiv@divisor+2,w,c
  2945  00152A  5803               	subwfb	___lldiv@dividend+2,w,c
  2946  00152C  5008               	movf	___lldiv@divisor+3,w,c
  2947  00152E  5804               	subwfb	___lldiv@dividend+3,w,c
  2948  001530  A0D8               	btfss	status,0,c
  2949  001532  D009               	goto	l1400
  2950  001534  5005               	movf	___lldiv@divisor,w,c
  2951  001536  5E01               	subwf	___lldiv@dividend,f,c
  2952  001538  5006               	movf	___lldiv@divisor+1,w,c
  2953  00153A  5A02               	subwfb	___lldiv@dividend+1,f,c
  2954  00153C  5007               	movf	___lldiv@divisor+2,w,c
  2955  00153E  5A03               	subwfb	___lldiv@dividend+2,f,c
  2956  001540  5008               	movf	___lldiv@divisor+3,w,c
  2957  001542  5A04               	subwfb	___lldiv@dividend+3,f,c
  2958  001544  8009               	bsf	___lldiv@quotient,0,c
  2959  001546                     l1400:
  2960  001546  90D8               	bcf	status,0,c
  2961  001548  3208               	rrcf	___lldiv@divisor+3,f,c
  2962  00154A  3207               	rrcf	___lldiv@divisor+2,f,c
  2963  00154C  3206               	rrcf	___lldiv@divisor+1,f,c
  2964  00154E  3205               	rrcf	___lldiv@divisor,f,c
  2965  001550  2E0D               	decfsz	___lldiv@counter,f,c
  2966  001552  D7E1               	goto	l1392
  2967  001554                     l610:
  2968  001554  C009  F001         	movff	___lldiv@quotient,?___lldiv
  2969  001558  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  2970  00155C  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  2971  001560  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  2972  001564  0012               	return		;funcret
  2973  001566                     __end_of___lldiv:
  2974                           	opt stack 0
  2975                           tblptru	equ	0xFF8
  2976                           tblptrh	equ	0xFF7
  2977                           tblptrl	equ	0xFF6
  2978                           tablat	equ	0xFF5
  2979                           prodh	equ	0xFF4
  2980                           prodl	equ	0xFF3
  2981                           postinc0	equ	0xFEE
  2982                           wreg	equ	0xFE8
  2983                           indf2	equ	0xFDF
  2984                           postinc2	equ	0xFDE
  2985                           postdec2	equ	0xFDD
  2986                           fsr2h	equ	0xFDA
  2987                           fsr2l	equ	0xFD9
  2988                           status	equ	0xFD8
  2989                           tblptru	equ	0xFF8
  2990                           tblptrh	equ	0xFF7
  2991                           tblptrl	equ	0xFF6
  2992                           tablat	equ	0xFF5
  2993                           prodh	equ	0xFF4
  2994                           prodl	equ	0xFF3
  2995                           postinc0	equ	0xFEE
  2996                           wreg	equ	0xFE8
  2997                           indf2	equ	0xFDF
  2998                           postinc2	equ	0xFDE
  2999                           postdec2	equ	0xFDD
  3000                           fsr2h	equ	0xFDA
  3001                           fsr2l	equ	0xFD9
  3002                           status	equ	0xFD8
  3003                           
  3004                           	psect	rparam
  3005  0000                     tblptru	equ	0xFF8
  3006                           tblptrh	equ	0xFF7
  3007                           tblptrl	equ	0xFF6
  3008                           tablat	equ	0xFF5
  3009                           prodh	equ	0xFF4
  3010                           prodl	equ	0xFF3
  3011                           postinc0	equ	0xFEE
  3012                           wreg	equ	0xFE8
  3013                           indf2	equ	0xFDF
  3014                           postinc2	equ	0xFDE
  3015                           postdec2	equ	0xFDD
  3016                           fsr2h	equ	0xFDA
  3017                           fsr2l	equ	0xFD9
  3018                           status	equ	0xFD8


Data Sizes:
    Strings     156
    Constant    32
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     35      43
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_12(CODE[15]), STR_11(CODE[16]), STR_10(CODE[15]), STR_9(CODE[16]), 
		 -> STR_8(CODE[14]), STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[16]), 
		 -> STR_4(CODE[8]), STR_3(CODE[15]), STR_2(CODE[8]), STR_1(CODE[16]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _initLCD->_lcdInst
    _homescreen->_printf
    _printf->___lwdiv
    _putch->_lcdNibble
    _lcdInst->_lcdNibble
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    5585
                                             29 COMRAM     6     6      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                               _PWM1
                            _PWM1off
                         _homescreen
                            _initLCD
                           _keycheck
                       _keyinterrupt
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _keyinterrupt                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _keycheck                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0      90
                                              3 COMRAM     1     1      0
                            _lcdInst
 ---------------------------------------------------------------------------------
 (1) _homescreen                                           0     0      0    2229
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              31    23      8    2139
                                              7 COMRAM    22    14      8
                            ___lwdiv
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      90
                                              2 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _lcdInst                                              1     1      0      90
                                              2 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) _lcdNibble                                            2     2      0      75
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _PWM1off                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1                                                 4     2      2     130
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     406
                                              1 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      2     2      0      30
                                              1 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     376
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     290
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _PWM1
   _PWM1off
   _homescreen
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___wmul
       _isdigit
       _putch
         _lcdNibble
   _initLCD
     _lcdInst
       _lcdNibble
   _keycheck
   _keyinterrupt
   _lcdInst
     _lcdNibble
   _printf
     ___lwdiv
     ___wmul
     _isdigit
     _putch
       _lcdNibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     23      2B       1       33.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2B      34        0.0%
DATA                 0      0      2B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Feb 21 16:57:26 2017

                       l84 17EE                         l93 17EA                         l94 17E6  
                       l87 17FA        ___wmul@multiplicand 0003                __CFG_BORV$3 000000  
             __CFG_CP0$OFF 000000               __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000  
             __CFG_CP3$OFF 000000                __CFG_OSC$HS 000000                        l108 12BE  
                      l251 14C2                        l173 1802                        l247 1472  
                      l610 1554                        l663 16C0               __CFG_CPB$OFF 000000  
                      u300 179E                        _PR2 000FCB                        _PEN 007E2A  
             __CFG_CPD$OFF 000000                        _SEN 007E28                        u645 15F6  
                      u807 174E                        u817 163A                        u827 1644  
                      u747 1136                        u837 1666                        u757 11D8  
                      u847 1670                        u767 1220                        u777 1258  
                      u787 1290                        u797 171A                        prod 000FF3  
                      wreg 000FE8               __CFG_LVP$OFF 000000               __CFG_WDT$OFF 000000  
                     l1102 17A0                       l1302 16B6                       l1400 1546  
                     l1312 130A                       l1314 1318                       l1324 134C  
                     l1308 12FA                       l1342 13E4                       l1334 13A8  
                     l1318 131E                       l1360 143C                       l1290 168E  
                     l1274 17BC                       l1370 145E                       l1354 1410  
                     l1292 1696                       l1380 14CA                       l1390 1512  
                     l1294 169A                       l1374 1478                       l1358 1434  
                     l1518 120E                       l1392 1516                       l1368 1456  
                     l1562 12DA                       l1482 1178                       l1466 1140  
                     l1388 1506                       l1492 119C                       l1486 1180  
                     STR_1 1032                       STR_2 10B5                       STR_3 1090  
                     STR_4 10AD                       STR_5 1042                       STR_6 1052  
                     STR_7 1062                       STR_8 109F                       STR_9 1062  
                     _LATA 000F89                       _LATB 000F8A                       _LATC 000F8B  
                     _LATD 000F8C                       _LATE 000F8D                       _RCEN 007E2B  
                     _PWM1 16CA                       _RSEN 007E29            __end_of_PWM1off 1836  
                     _main 10BE                       _keys 1001                       _time 0024  
                     fsr2h 000FDA                       indf2 000FDF                       fsr2l 000FD9  
              main@standby 0021                       prodh 000FF4                       prodl 000FF3  
                     start 0000              __CFG_IESO$OFF 000000              __CFG_MCLRE$ON 000000  
             ___param_bank 000000                      ?_PWM1 0001           ?_I2C_Master_Init 000E  
         ?_I2C_Master_Read 0001           ?_I2C_Master_Wait 0001           ?_I2C_Master_Stop 0001  
                    ?_main 0001                      _ACKEN 007E2C                      _ACKDT 007E2D  
                    STR_10 1081                      STR_11 1062                      STR_12 1072  
                    STR_13 1021            __end_of___lldiv 1566                      _T2CON 000FCA  
          __end_of___lwdiv 16CA                      _PORTB 000F81                      _TRISA 000F92  
                    _TRISB 000F93                      _TRISC 000F94                      _TRISD 000F95  
                    _TRISE 000F96              __CFG_PWRT$OFF 000000              __CFG_WRT0$OFF 000000  
            __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000              __CFG_WRT3$OFF 000000  
          __end_of_lcdInst 182C             __CFG_EBTR0$OFF 000000             __CFG_FCMEN$OFF 000000  
           __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000             __CFG_EBTR3$OFF 000000  
            __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000              __CFG_WRTD$OFF 000000  
          __end_of_initLCD 175A             __CFG_EBTRB$OFF 000000            __end_of_isdigit 17C4  
                    _putch 1814                      main@j 0023                      main@s 001F  
                    tablat 000FF5                      status 000FD8             __CFG_PBADEN$ON 000000  
             __end_of_PWM1 1714            __initialization 17C4               __end_of_main 12F0  
             __end_of_keys 1012                     ??_PWM1 0003                     ??_main 001E  
            __activetblptr 000002          ?_I2C_Master_Start 0001          ?_I2C_Master_Write 0002  
       ??_I2C_Master_Start 0002                     _ADCON0 000FC2                     _ADCON1 000FC1  
       ??_I2C_Master_Write 0004                  ??_PWM1off 0001                     _CCPR1L 000FBE  
                   ?_putch 0001                     _OSCCON 000FD3                     _SSPADD 000FC8  
                   _TRISC3 007CA3                     _TRISC4 007CA4                     _SSPBUF 000FC9  
           __CFG_XINST$OFF 000000                     ___wmul 175A             __CFG_STVREN$ON 000000  
                ??___lldiv 0009                  ??___lwdiv 0005           __end_of_keycheck 1802  
                   clear_0 17CA           __end_of_currtime 1021                  ??_lcdInst 0003  
                   _printf 12F0                  ??_initLCD 0004                  ??_isdigit 0001  
             __mediumconst 0000                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8              ?_keyinterrupt 0001                 __accesstop 0080  
  __end_of__initialization 17D0              ___rparam_used 000001             __pcstackCOMRAM 0001  
            __end_of_putch 1820         __size_of_lcdNibble 0056             ??_keyinterrupt 0001  
                  ??_putch 0003                    ?___wmul 0001                    _CCP1CON 000FBD  
                  ?_printf 0008                    _PWM1off 182C                    _SSPCON1 000FC6  
                  _SSPCON2 000FC5                    _SSPSTAT 000FC7                  ?_keycheck 0001  
        __end_of_lcdNibble 1678                    __Hparam 0000                    __Lparam 0000  
                  ___lldiv 14E4            __size_of___wmul 0026                    ___lwdiv 1678  
               _homescreen 1566               __psmallconst 1000                    __pcinit 17C4  
                  __ramtop 1000                    _lcdInst 1820                    __ptext0 10BE  
                  __ptext1 17DA                    __ptext2 17EE                    __ptext3 1714  
                  __ptext4 1566                    __ptext5 12F0                    __ptext6 1814  
                  __ptext7 17A6                    __ptext8 175A                    __ptext9 1678  
          __size_of_printf 01F4                    _initLCD 1714          __end_of_hexpowers 101A  
                  _isdigit 17A6   __size_of_I2C_Master_Init 005A   __size_of_I2C_Master_Read 0026  
 __size_of_I2C_Master_Wait 0012   __size_of_I2C_Master_Stop 0008       end_of_initialization 17D0  
               ??_keycheck 0001              __Lmediumconst 0000  __size_of_I2C_Master_Start 0008  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0005            ___lldiv@counter 000D  
     __end_of_keyinterrupt 17EE                    printf@c 001D                    printf@f 0008  
         I2C_Master_Init@c 000E           I2C_Master_Read@a 0002                    postdec2 000FDD  
                  postinc0 000FEE                    postinc2 000FDE                  _PORTBbits 000F81  
              _CCP1CONbits 000FBD                printf@width 001B                ?_homescreen 0001  
           __end_of___wmul 1780             __end_of_printf 14E4        start_initialization 17C4  
        ??_I2C_Master_Init 0012          ??_I2C_Master_Read 0002          ??_I2C_Master_Wait 0001  
        ??_I2C_Master_Stop 0002                   ??___wmul 0005           __CFG_LPT1OSC$OFF 000000  
                 ??_printf 0010                __pbssCOMRAM 0024                   ?_PWM1off 0001  
      __size_of_homescreen 0062      __size_of_keyinterrupt 0014           _I2C_Master_Start 1848  
         _I2C_Master_Write 1836          __size_of_keycheck 0014           ___lwdiv@dividend 0001  
        __CFG_CCP2MX$PORTC 000000                  _lcdNibble 1622                   ?___lldiv 0001  
                 PWM1@duty 0001                   ?___lwdiv 0001                   ?_lcdInst 0001  
                 ?_initLCD 0001                __smallconst 1000                   ?_isdigit 0001  
             _keyinterrupt 17DA                  _hexpowers 1012           ___lwdiv@quotient 0005  
           __size_of_putch 000C             ___wmul@product 0005                   _LATAbits 000F89  
                 _LATDbits 000F8C                   _LATEbits 000F8D           __CFG_WDTPS$32768 000000  
               ?_lcdNibble 0001          ___wmul@multiplier 0001              lcdNibble@data 0002  
               printf@flag 0017              lcdNibble@temp 0001                 printf@prec 001A  
      I2C_Master_Read@temp 0003           __size_of_PWM1off 000A                   __Hrparam 0000  
                 __Lrparam 0000         __CFG_BOREN$SBORDIS 000000               ??_homescreen 001E  
         __size_of___lldiv 0082           __size_of___lwdiv 0052                _isdigit$708 0002  
         __size_of_lcdInst 000C            _I2C_Master_Init 15C8            _I2C_Master_Read 1780  
         __size_of_initLCD 0046            _I2C_Master_Wait 1802            _I2C_Master_Stop 1840  
         __size_of_isdigit 001E            ___lwdiv@divisor 0003            ___lwdiv@counter 0007  
                 __ptext10 1820                   __ptext11 1622                   __ptext20 14E4  
                 __ptext12 182C                   __ptext13 16CA                   __ptext14 1836  
                 __ptext15 1840                   __ptext16 1848                   __ptext17 1780  
                 __ptext18 1802                   __ptext19 15C8              __size_of_PWM1 004A  
       __end_of_homescreen 15C8                   _keycheck 17EE              __size_of_main 0232  
                 _currtime 101A                   _keypress 002B                ??_lcdNibble 0001  
                printf@idx 0016                  printf@val 0018                  putch@data 0003  
 __end_of_I2C_Master_Start 1850                _OSCTUNEbits 000F9B   __end_of_I2C_Master_Write 1840  
                 isdigit@c 0003           ___lldiv@dividend 0001                   printf@ap 0014  
  __end_of_I2C_Master_Init 1622    __end_of_I2C_Master_Read 17A6    __end_of_I2C_Master_Wait 1814  
  __end_of_I2C_Master_Stop 1848                lcdInst@data 0003           ___lldiv@quotient 0009  
        I2C_Master_Write@d 0002  
