

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Feb 28 14:33:11 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33  0000                     
    34                           ; Version 1.41
    35                           ; Generated 25/01/2017 GMT
    36                           ; 
    37                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F4620 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     
    69                           	psect	smallconst
    70  001000                     __psmallconst:
    71                           	opt stack 0
    72  001000  00                 	db	0
    73  001001                     _keys:
    74                           	opt stack 0
    75  001001  31                 	db	49
    76  001002  32                 	db	50
    77  001003  33                 	db	51
    78  001004  41                 	db	65
    79  001005  34                 	db	52
    80  001006  35                 	db	53
    81  001007  36                 	db	54
    82  001008  42                 	db	66
    83  001009  37                 	db	55
    84  00100A  38                 	db	56
    85  00100B  39                 	db	57
    86  00100C  43                 	db	67
    87  00100D  2A                 	db	42
    88  00100E  30                 	db	48
    89  00100F  23                 	db	35
    90  001010  44                 	db	68
    91  001011  00                 	db	0
    92  001012                     __end_of_keys:
    93                           	opt stack 0
    94  001012                     _hexpowers:
    95                           	opt stack 0
    96  001012  0001               	dw	1
    97  001014  0010               	dw	16
    98  001016  0100               	dw	256
    99  001018  1000               	dw	4096
   100  00101A                     __end_of_hexpowers:
   101                           	opt stack 0
   102  00101A                     _currtime:
   103                           	opt stack 0
   104  00101A  30                 	db	48
   105  00101B  11                 	db	17
   106  00101C  20                 	db	32
   107  00101D  03                 	db	3
   108  00101E  07                 	db	7
   109  00101F  02                 	db	2
   110  001020  17                 	db	23
   111  001021                     __end_of_currtime:
   112                           	opt stack 0
   113  0000                     _CCP1CONbits	set	4029
   114  0000                     _SSPBUF	set	4041
   115  0000                     _SSPADD	set	4040
   116  0000                     _SSPCON2	set	4037
   117  0000                     _SSPCON1	set	4038
   118  0000                     _SSPSTAT	set	4039
   119  0000                     _CMCONbits	set	4020
   120  0000                     _CVRCON	set	4021
   121  0000                     _ADCON1	set	4033
   122  0000                     _LATEbits	set	3981
   123  0000                     _LATDbits	set	3980
   124  0000                     _LATE	set	3981
   125  0000                     _LATD	set	3980
   126  0000                     _LATC	set	3979
   127  0000                     _LATB	set	3978
   128  0000                     _LATA	set	3977
   129  0000                     _T2CON	set	4042
   130  0000                     _CCPR1L	set	4030
   131  0000                     _CCP1CON	set	4029
   132  0000                     _PR2	set	4043
   133  0000                     _TRISE	set	3990
   134  0000                     _TRISD	set	3989
   135  0000                     _TRISC	set	3988
   136  0000                     _TRISB	set	3987
   137  0000                     _TRISA	set	3986
   138  0000                     _OSCTUNEbits	set	3995
   139  0000                     _OSCCON	set	4051
   140  0000                     _PIR2bits	set	4001
   141  0000                     _EECON2	set	4007
   142  0000                     _EEDATA	set	4008
   143  0000                     _EECON1bits	set	4006
   144  0000                     _EEADR	set	4009
   145  0000                     _EEADRH	set	4010
   146  0000                     _ADCON0bits	set	4034
   147  0000                     _ADCON0	set	4034
   148  0000                     _PORTB	set	3969
   149  0000                     _PORTBbits	set	3969
   150  0000                     _ACKEN	set	32300
   151  0000                     _ACKDT	set	32301
   152  0000                     _RCEN	set	32299
   153  0000                     _PEN	set	32298
   154  0000                     _RSEN	set	32297
   155  0000                     _SEN	set	32296
   156  0000                     _TRISC4	set	31908
   157  0000                     _TRISC3	set	31907
   158  0000                     _ADFM	set	32263
   159  0000                     _nRBPU	set	32655
   160  001021                     STR_13:
   161  001021  30                 	db	48	;'0'
   162  001022  31                 	db	49	;'1'
   163  001023  32                 	db	50	;'2'
   164  001024  33                 	db	51	;'3'
   165  001025  34                 	db	52	;'4'
   166  001026  35                 	db	53	;'5'
   167  001027  36                 	db	54	;'6'
   168  001028  37                 	db	55	;'7'
   169  001029  38                 	db	56	;'8'
   170  00102A  39                 	db	57	;'9'
   171  00102B  61                 	db	97	;'a'
   172  00102C  62                 	db	98	;'b'
   173  00102D  63                 	db	99	;'c'
   174  00102E  64                 	db	100	;'d'
   175  00102F  65                 	db	101	;'e'
   176  001030  66                 	db	102	;'f'
   177  001031  00                 	db	0
   178  001032                     STR_1:
   179  001032  25                 	db	37
   180  001033  30                 	db	48	;'0'
   181  001034  32                 	db	50	;'2'
   182  001035  78                 	db	120	;'x'
   183  001036  2F                 	db	47
   184  001037  25                 	db	37
   185  001038  30                 	db	48	;'0'
   186  001039  32                 	db	50	;'2'
   187  00103A  78                 	db	120	;'x'
   188  00103B  2F                 	db	47
   189  00103C  25                 	db	37
   190  00103D  30                 	db	48	;'0'
   191  00103E  32                 	db	50	;'2'
   192  00103F  78                 	db	120	;'x'
   193  001040  20                 	db	32
   194  001041  00                 	db	0
   195  001042                     STR_5:
   196  001042  53                 	db	83	;'S'
   197  001043  6F                 	db	111	;'o'
   198  001044  72                 	db	114	;'r'
   199  001045  74                 	db	116	;'t'
   200  001046  69                 	db	105	;'i'
   201  001047  6E                 	db	110	;'n'
   202  001048  67                 	db	103	;'g'
   203  001049  20                 	db	32
   204  00104A  63                 	db	99	;'c'
   205  00104B  61                 	db	97	;'a'
   206  00104C  6E                 	db	110	;'n'
   207  00104D  73                 	db	115	;'s'
   208  00104E  2E                 	db	46
   209  00104F  2E                 	db	46
   210  001050  2E                 	db	46
   211  001051  00                 	db	0
   212  001052                     STR_6:
   213  001052  41                 	db	65	;'A'
   214  001053  6E                 	db	110	;'n'
   215  001054  79                 	db	121	;'y'
   216  001055  20                 	db	32
   217  001056  6B                 	db	107	;'k'
   218  001057  65                 	db	101	;'e'
   219  001058  79                 	db	121	;'y'
   220  001059  20                 	db	32
   221  00105A  74                 	db	116	;'t'
   222  00105B  6F                 	db	111	;'o'
   223  00105C  20                 	db	32
   224  00105D  73                 	db	115	;'s'
   225  00105E  74                 	db	116	;'t'
   226  00105F  6F                 	db	111	;'o'
   227  001060  70                 	db	112	;'p'
   228  001061  00                 	db	0
   229  001062                     STR_7:
   230  001062  52                 	db	82	;'R'
   231  001063  75                 	db	117	;'u'
   232  001064  6E                 	db	110	;'n'
   233  001065  23                 	db	35
   234  001066  31                 	db	49	;'1'
   235  001067  20                 	db	32
   236  001068  20                 	db	32
   237  001069  20                 	db	32
   238  00106A  20                 	db	32
   239  00106B  41                 	db	65	;'A'
   240  00106C  3A                 	db	58	;':'
   241  00106D  4E                 	db	78	;'N'
   242  00106E  65                 	db	101	;'e'
   243  00106F  78                 	db	120	;'x'
   244  001070  74                 	db	116	;'t'
   245  001071  00                 	db	0
   246  001072                     STR_12:
   247  001072  23                 	db	35
   248  001073  20                 	db	32
   249  001074  73                 	db	115	;'s'
   250  001075  6F                 	db	111	;'o'
   251  001076  75                 	db	117	;'u'
   252  001077  70                 	db	112	;'p'
   253  001078  20                 	db	32
   254  001079  63                 	db	99	;'c'
   255  00107A  61                 	db	97	;'a'
   256  00107B  6E                 	db	110	;'n'
   257  00107C  73                 	db	115	;'s'
   258  00107D  3A                 	db	58	;':'
   259  00107E  20                 	db	32
   260  00107F  34                 	db	52	;'4'
   261  001080  00                 	db	0
   262  001081                     STR_10:
   263  001081  23                 	db	35
   264  001082  20                 	db	32
   265  001083  73                 	db	115	;'s'
   266  001084  6F                 	db	111	;'o'
   267  001085  64                 	db	100	;'d'
   268  001086  61                 	db	97	;'a'
   269  001087  20                 	db	32
   270  001088  63                 	db	99	;'c'
   271  001089  61                 	db	97	;'a'
   272  00108A  6E                 	db	110	;'n'
   273  00108B  73                 	db	115	;'s'
   274  00108C  3A                 	db	58	;':'
   275  00108D  20                 	db	32
   276  00108E  36                 	db	54	;'6'
   277  00108F  00                 	db	0
   278  001090                     STR_3:
   279  001090  25                 	db	37
   280  001091  30                 	db	48	;'0'
   281  001092  32                 	db	50	;'2'
   282  001093  78                 	db	120	;'x'
   283  001094  3A                 	db	58	;':'
   284  001095  25                 	db	37
   285  001096  30                 	db	48	;'0'
   286  001097  32                 	db	50	;'2'
   287  001098  78                 	db	120	;'x'
   288  001099  3A                 	db	58	;':'
   289  00109A  25                 	db	37
   290  00109B  30                 	db	48	;'0'
   291  00109C  32                 	db	50	;'2'
   292  00109D  78                 	db	120	;'x'
   293  00109E  00                 	db	0
   294  00109F                     STR_8:
   295  00109F  23                 	db	35
   296  0010A0  20                 	db	32
   297  0010A1  6F                 	db	111	;'o'
   298  0010A2  66                 	db	102	;'f'
   299  0010A3  20                 	db	32
   300  0010A4  63                 	db	99	;'c'
   301  0010A5  61                 	db	97	;'a'
   302  0010A6  6E                 	db	110	;'n'
   303  0010A7  73                 	db	115	;'s'
   304  0010A8  3A                 	db	58	;':'
   305  0010A9  20                 	db	32
   306  0010AA  31                 	db	49	;'1'
   307  0010AB  30                 	db	48	;'0'
   308  0010AC  00                 	db	0
   309  0010AD                     STR_4:
   310  0010AD  20                 	db	32
   311  0010AE  32                 	db	50	;'2'
   312  0010AF  3A                 	db	58	;':'
   313  0010B0  4C                 	db	76	;'L'
   314  0010B1  6F                 	db	111	;'o'
   315  0010B2  67                 	db	103	;'g'
   316  0010B3  73                 	db	115	;'s'
   317  0010B4  00                 	db	0
   318  0010B5                     STR_2:
   319  0010B5  33                 	db	51	;'3'
   320  0010B6  3A                 	db	58	;':'
   321  0010B7  53                 	db	83	;'S'
   322  0010B8  74                 	db	116	;'t'
   323  0010B9  61                 	db	97	;'a'
   324  0010BA  72                 	db	114	;'r'
   325  0010BB  74                 	db	116	;'t'
   326  0010BC  00                 	db	0
   327  0000                     
   328                           ; #config settings
   329  0010BD  00                 	db	0	; dummy byte at the end
   330  0000                     
   331                           	psect	cinit
   332  0017C6                     __pcinit:
   333                           	opt stack 0
   334  0017C6                     start_initialization:
   335                           	opt stack 0
   336  0017C6                     __initialization:
   337                           	opt stack 0
   338                           
   339                           ; Clear objects allocated to COMRAM (8 bytes)
   340  0017C6  EE00  F024         	lfsr	0,__pbssCOMRAM
   341  0017CA  0E08               	movlw	8
   342  0017CC                     clear_0:
   343  0017CC  6AEE               	clrf	postinc0,c
   344  0017CE  06E8               	decf	wreg,f,c
   345  0017D0  E1FD               	bnz	clear_0
   346  0017D2                     end_of_initialization:
   347                           	opt stack 0
   348  0017D2                     __end_of__initialization:
   349                           	opt stack 0
   350  0017D2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   351  0017D4  6EF8               	movwf	tblptru,c
   352  0017D6  0100               	movlb	0
   353  0017D8  EF59  F009         	goto	_main	;jump to C main() function
   354                           tblptru	equ	0xFF8
   355                           postinc0	equ	0xFEE
   356                           wreg	equ	0xFE8
   357                           
   358                           	psect	bssCOMRAM
   359  000024                     __pbssCOMRAM:
   360                           	opt stack 0
   361  000024                     _time:
   362                           	opt stack 0
   363  000024                     	ds	7
   364  00002B                     _keypress:
   365                           	opt stack 0
   366  00002B                     	ds	1
   367                           tblptru	equ	0xFF8
   368                           postinc0	equ	0xFEE
   369                           wreg	equ	0xFE8
   370                           
   371                           	psect	cstackCOMRAM
   372  000001                     __pcstackCOMRAM:
   373                           	opt stack 0
   374  000001                     ??_isdigit:
   375  000001                     ??_I2C_Master_Wait:
   376  000001                     ?___wmul:
   377                           	opt stack 0
   378  000001                     ?___lwdiv:
   379                           	opt stack 0
   380  000001                     ?___lldiv:
   381                           	opt stack 0
   382  000001                     lcdNibble@temp:
   383                           	opt stack 0
   384  000001                     PWM1@duty:
   385                           	opt stack 0
   386  000001                     ___wmul@multiplier:
   387                           	opt stack 0
   388  000001                     ___lwdiv@dividend:
   389                           	opt stack 0
   390  000001                     ___lldiv@dividend:
   391                           	opt stack 0
   392                           
   393                           ; 4 bytes @ 0x0
   394  000001                     	ds	1
   395  000002                     lcdNibble@data:
   396                           	opt stack 0
   397  000002                     I2C_Master_Read@a:
   398                           	opt stack 0
   399  000002                     _isdigit$865:
   400                           	opt stack 0
   401  000002                     I2C_Master_Write@d:
   402                           	opt stack 0
   403                           
   404                           ; 2 bytes @ 0x1
   405  000002                     	ds	1
   406  000003                     ??_PWM1:
   407  000003                     lcdInst@data:
   408                           	opt stack 0
   409  000003                     putch@data:
   410                           	opt stack 0
   411  000003                     I2C_Master_Read@temp:
   412                           	opt stack 0
   413  000003                     isdigit@c:
   414                           	opt stack 0
   415  000003                     ___wmul@multiplicand:
   416                           	opt stack 0
   417  000003                     ___lwdiv@divisor:
   418                           	opt stack 0
   419                           
   420                           ; 2 bytes @ 0x2
   421  000003                     	ds	1
   422  000004                     ??_initLCD:
   423                           
   424                           ; 1 bytes @ 0x3
   425  000004                     	ds	1
   426  000005                     ___wmul@product:
   427                           	opt stack 0
   428  000005                     ___lwdiv@quotient:
   429                           	opt stack 0
   430  000005                     ___lldiv@divisor:
   431                           	opt stack 0
   432                           
   433                           ; 4 bytes @ 0x4
   434  000005                     	ds	2
   435  000007                     ___lwdiv@counter:
   436                           	opt stack 0
   437                           
   438                           ; 1 bytes @ 0x6
   439  000007                     	ds	1
   440  000008                     ?_printf:
   441                           	opt stack 0
   442  000008                     printf@f:
   443                           	opt stack 0
   444                           
   445                           ; 2 bytes @ 0x7
   446  000008                     	ds	1
   447  000009                     ___lldiv@quotient:
   448                           	opt stack 0
   449                           
   450                           ; 4 bytes @ 0x8
   451  000009                     	ds	4
   452  00000D                     ___lldiv@counter:
   453                           	opt stack 0
   454                           
   455                           ; 1 bytes @ 0xC
   456  00000D                     	ds	1
   457  00000E                     I2C_Master_Init@c:
   458                           	opt stack 0
   459                           
   460                           ; 4 bytes @ 0xD
   461  00000E                     	ds	2
   462  000010                     ??_printf:
   463                           
   464                           ; 1 bytes @ 0xF
   465  000010                     	ds	2
   466  000012                     ??_I2C_Master_Init:
   467                           
   468                           ; 1 bytes @ 0x11
   469  000012                     	ds	2
   470  000014                     printf@ap:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0x13
   474  000014                     	ds	2
   475  000016                     printf@idx:
   476                           	opt stack 0
   477                           
   478                           ; 1 bytes @ 0x15
   479  000016                     	ds	1
   480  000017                     printf@flag:
   481                           	opt stack 0
   482                           
   483                           ; 1 bytes @ 0x16
   484  000017                     	ds	1
   485  000018                     printf@val:
   486                           	opt stack 0
   487                           
   488                           ; 2 bytes @ 0x17
   489  000018                     	ds	2
   490  00001A                     printf@prec:
   491                           	opt stack 0
   492                           
   493                           ; 1 bytes @ 0x19
   494  00001A                     	ds	1
   495  00001B                     printf@width:
   496                           	opt stack 0
   497                           
   498                           ; 2 bytes @ 0x1A
   499  00001B                     	ds	2
   500  00001D                     printf@c:
   501                           	opt stack 0
   502                           
   503                           ; 1 bytes @ 0x1C
   504  00001D                     	ds	1
   505  00001E                     ??_main:
   506                           
   507                           ; 1 bytes @ 0x1D
   508  00001E                     	ds	1
   509  00001F                     main@s:
   510                           	opt stack 0
   511                           
   512                           ; 2 bytes @ 0x1E
   513  00001F                     	ds	2
   514  000021                     main@standby:
   515                           	opt stack 0
   516                           
   517                           ; 2 bytes @ 0x20
   518  000021                     	ds	2
   519  000023                     main@j:
   520                           	opt stack 0
   521                           
   522                           ; 1 bytes @ 0x22
   523  000023                     	ds	1
   524                           tblptru	equ	0xFF8
   525                           postinc0	equ	0xFEE
   526                           wreg	equ	0xFE8
   527                           
   528 ;;
   529 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   530 ;;
   531 ;; *************** function _main *****************
   532 ;; Defined at:
   533 ;;		line 160 in file "main.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;		None
   536 ;; Auto vars:     Size  Location     Type
   537 ;;  j               1   34[COMRAM] unsigned char 
   538 ;;  standby         2   32[COMRAM] int 
   539 ;;  s               2   30[COMRAM] int 
   540 ;; Return value:  Size  Location     Type
   541 ;;                  2  145[None  ] int 
   542 ;; Registers used:
   543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   544 ;; Tracked objects:
   545 ;;		On entry : 0/0
   546 ;;		On exit  : 0/0
   547 ;;		Unchanged: 0/0
   548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   550 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   551 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   552 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   553 ;;Total ram usage:        6 bytes
   554 ;; Hardware stack levels required when called:    4
   555 ;; This function calls:
   556 ;;		_I2C_Master_Read
   557 ;;		_I2C_Master_Start
   558 ;;		_I2C_Master_Stop
   559 ;;		_I2C_Master_Write
   560 ;;		_PWM1
   561 ;;		_PWM1off
   562 ;;		_homescreen
   563 ;;		_initialize
   564 ;;		_keycheck
   565 ;;		_keyinterrupt
   566 ;;		_lcdInst
   567 ;;		_printf
   568 ;; This function is called by:
   569 ;;		Startup code after reset
   570 ;; This function uses a non-reentrant model
   571 ;;
   572                           
   573                           	psect	text0
   574  0012B2                     __ptext0:
   575                           	opt stack 0
   576  0012B2                     _main:
   577                           	opt stack 27
   578                           
   579                           ;main.c: 161: initialize();
   580                           
   581                           ;incstack = 0
   582  0012B2  EC79  F00A         	call	_initialize	;wreg free
   583                           
   584                           ;main.c: 163: int standby = 1;
   585  0012B6  0E00               	movlw	0
   586  0012B8  6E22               	movwf	main@standby+1,c
   587  0012BA  0E01               	movlw	1
   588  0012BC  6E21               	movwf	main@standby,c
   589                           
   590                           ;main.c: 164: int s = 0;
   591  0012BE  0E00               	movlw	0
   592  0012C0  6E20               	movwf	main@s+1,c
   593  0012C2  0E00               	movlw	0
   594  0012C4  6E1F               	movwf	main@s,c
   595                           
   596                           ;main.c: 166: _delay((unsigned long)((10)*(32000000/4000.0)));
   597  0012C6  0E68               	movlw	104
   598  0012C8  6E1E               	movwf	??_main& (0+255),c
   599  0012CA  0EE4               	movlw	228
   600  0012CC                     u777:
   601  0012CC  2EE8               	decfsz	wreg,f,c
   602  0012CE  D7FE               	bra	u777
   603  0012D0  2E1E               	decfsz	??_main& (0+255),f,c
   604  0012D2  D7FC               	bra	u777
   605  0012D4  D000               	nop2	
   606  0012D6                     l1562:
   607                           
   608                           ;main.c: 169: LATA = 00000000;
   609  0012D6  0E00               	movlw	0
   610  0012D8  6E89               	movwf	3977,c	;volatile
   611                           
   612                           ;main.c: 172: I2C_Master_Start();
   613  0012DA  EC25  F00C         	call	_I2C_Master_Start	;wreg free
   614                           
   615                           ;main.c: 173: I2C_Master_Write(0b11010000);
   616  0012DE  0E00               	movlw	0
   617  0012E0  6E03               	movwf	I2C_Master_Write@d+1,c
   618  0012E2  0ED0               	movlw	208
   619  0012E4  6E02               	movwf	I2C_Master_Write@d,c
   620  0012E6  EC1C  F00C         	call	_I2C_Master_Write	;wreg free
   621                           
   622                           ;main.c: 174: I2C_Master_Write(0x00);
   623  0012EA  0E00               	movlw	0
   624  0012EC  6E03               	movwf	I2C_Master_Write@d+1,c
   625  0012EE  0E00               	movlw	0
   626  0012F0  6E02               	movwf	I2C_Master_Write@d,c
   627  0012F2  EC1C  F00C         	call	_I2C_Master_Write	;wreg free
   628                           
   629                           ;main.c: 175: I2C_Master_Stop();
   630  0012F6  EC21  F00C         	call	_I2C_Master_Stop	;wreg free
   631                           
   632                           ;main.c: 178: I2C_Master_Start();
   633  0012FA  EC25  F00C         	call	_I2C_Master_Start	;wreg free
   634                           
   635                           ;main.c: 179: I2C_Master_Write(0b11010001);
   636  0012FE  0E00               	movlw	0
   637  001300  6E03               	movwf	I2C_Master_Write@d+1,c
   638  001302  0ED1               	movlw	209
   639  001304  6E02               	movwf	I2C_Master_Write@d,c
   640  001306  EC1C  F00C         	call	_I2C_Master_Write	;wreg free
   641                           
   642                           ;main.c: 180: for(unsigned char j=0;j<0x06;j++){
   643  00130A  0E00               	movlw	0
   644  00130C  6E23               	movwf	main@j,c
   645  00130E                     l1578:
   646  00130E  0E05               	movlw	5
   647  001310  6423               	cpfsgt	main@j,c
   648  001312  D001               	goto	l1582
   649  001314  D00E               	goto	l1588
   650  001316                     l1582:
   651                           
   652                           ;main.c: 181: time[j] = I2C_Master_Read(1);
   653  001316  5023               	movf	main@j,w,c
   654  001318  0D01               	mullw	1
   655  00131A  0E24               	movlw	low _time
   656  00131C  24F3               	addwf	prodl,w,c
   657  00131E  6ED9               	movwf	fsr2l,c
   658  001320  0E00               	movlw	high _time
   659  001322  20F4               	addwfc	prodh,w,c
   660  001324  6EDA               	movwf	fsr2h,c
   661  001326  0E01               	movlw	1
   662  001328  ECC1  F00B         	call	_I2C_Master_Read
   663  00132C  6EDF               	movwf	indf2,c
   664  00132E  2A23               	incf	main@j,f,c
   665  001330  D7EE               	goto	l1578
   666  001332                     l1588:
   667                           
   668                           ;main.c: 182: }
   669                           ;main.c: 183: time[6] = I2C_Master_Read(0);
   670  001332  0E00               	movlw	0
   671  001334  ECC1  F00B         	call	_I2C_Master_Read
   672  001338  6E2A               	movwf	_time+6,c
   673                           
   674                           ;main.c: 184: I2C_Master_Stop();
   675  00133A  EC21  F00C         	call	_I2C_Master_Stop	;wreg free
   676                           
   677                           ;main.c: 186: if (standby){
   678  00133E  5021               	movf	main@standby,w,c
   679  001340  1022               	iorwf	main@standby+1,w,c
   680  001342  B4D8               	btfsc	status,2,c
   681  001344  D087               	goto	l1648
   682                           
   683                           ;main.c: 187: keypress = (0);
   684  001346  0E00               	movlw	0
   685  001348  6E2B               	movwf	_keypress,c	;volatile
   686                           
   687                           ;main.c: 188: homescreen();
   688  00134A  ECB4  F00A         	call	_homescreen	;wreg free
   689                           
   690                           ;main.c: 189: keyinterrupt();
   691  00134E  ECEE  F00B         	call	_keyinterrupt	;wreg free
   692                           
   693                           ;main.c: 192: if(keypress == 2){
   694  001352  0E02               	movlw	2
   695  001354  182B               	xorwf	_keypress,w,c	;volatile
   696  001356  A4D8               	btfss	status,2,c
   697  001358  D025               	goto	l1614
   698                           
   699                           ;main.c: 193: standby = 0;
   700  00135A  0E00               	movlw	0
   701  00135C  6E22               	movwf	main@standby+1,c
   702  00135E  0E00               	movlw	0
   703  001360  6E21               	movwf	main@standby,c
   704                           
   705                           ;main.c: 194: lcdInst(0b00000001); _delay((unsigned long)((10)*(32000000/4000.0)));;
   706  001362  0E01               	movlw	1
   707  001364  EC11  F00C         	call	_lcdInst
   708  001368  0E68               	movlw	104
   709  00136A  6E1E               	movwf	??_main& (0+255),c
   710  00136C  0EE4               	movlw	228
   711  00136E                     u787:
   712  00136E  2EE8               	decfsz	wreg,f,c
   713  001370  D7FE               	bra	u787
   714  001372  2E1E               	decfsz	??_main& (0+255),f,c
   715  001374  D7FC               	bra	u787
   716  001376  D000               	nop2	
   717                           
   718                           ;main.c: 195: printf("Sorting cans...");
   719  001378  0E42               	movlw	low STR_5
   720  00137A  6E08               	movwf	printf@f,c
   721  00137C  0E10               	movlw	high STR_5
   722  00137E  6E09               	movwf	printf@f+1,c
   723  001380  EC5F  F008         	call	_printf	;wreg free
   724                           
   725                           ;main.c: 196: lcdInst(0b11000000);;
   726  001384  0EC0               	movlw	192
   727  001386  EC11  F00C         	call	_lcdInst
   728                           
   729                           ;main.c: 197: printf("Any key to stop");
   730  00138A  0E52               	movlw	low STR_6
   731  00138C  6E08               	movwf	printf@f,c
   732  00138E  0E10               	movlw	high STR_6
   733  001390  6E09               	movwf	printf@f+1,c
   734  001392  EC5F  F008         	call	_printf	;wreg free
   735                           
   736                           ;main.c: 198: PWM1(100);
   737  001396  0E00               	movlw	0
   738  001398  6E02               	movwf	PWM1@duty+1,c
   739  00139A  0E64               	movlw	100
   740  00139C  6E01               	movwf	PWM1@duty,c
   741  00139E  EC66  F00B         	call	_PWM1	;wreg free
   742                           
   743                           ;main.c: 199: }
   744  0013A2  D799               	goto	l1562
   745  0013A4                     l1614:
   746                           
   747                           ;main.c: 200: else if(keypress == 1){
   748  0013A4  042B               	decf	_keypress,w,c	;volatile
   749  0013A6  A4D8               	btfss	status,2,c
   750  0013A8  D796               	goto	l1562
   751                           
   752                           ;main.c: 201: lcdInst(0b00000001); _delay((unsigned long)((10)*(32000000/4000.0)));;
   753  0013AA  0E01               	movlw	1
   754  0013AC  EC11  F00C         	call	_lcdInst
   755  0013B0  0E68               	movlw	104
   756  0013B2  6E1E               	movwf	??_main& (0+255),c
   757  0013B4  0EE4               	movlw	228
   758  0013B6                     u797:
   759  0013B6  2EE8               	decfsz	wreg,f,c
   760  0013B8  D7FE               	bra	u797
   761  0013BA  2E1E               	decfsz	??_main& (0+255),f,c
   762  0013BC  D7FC               	bra	u797
   763  0013BE  D000               	nop2	
   764                           
   765                           ;main.c: 202: printf("Run#1    A:Next");
   766  0013C0  0E62               	movlw	low STR_7
   767  0013C2  6E08               	movwf	printf@f,c
   768  0013C4  0E10               	movlw	high STR_7
   769  0013C6  6E09               	movwf	printf@f+1,c
   770  0013C8  EC5F  F008         	call	_printf	;wreg free
   771                           
   772                           ;main.c: 203: lcdInst(0b11000000);;
   773  0013CC  0EC0               	movlw	192
   774  0013CE  EC11  F00C         	call	_lcdInst
   775                           
   776                           ;main.c: 204: printf("# of cans: 10");
   777  0013D2  0E9F               	movlw	low STR_8
   778  0013D4  6E08               	movwf	printf@f,c
   779  0013D6  0E10               	movlw	high STR_8
   780  0013D8  6E09               	movwf	printf@f+1,c
   781  0013DA  EC5F  F008         	call	_printf	;wreg free
   782                           
   783                           ;main.c: 205: keycheck();
   784  0013DE  ECF8  F00B         	call	_keycheck	;wreg free
   785                           
   786                           ;main.c: 206: lcdInst(0b00000001); _delay((unsigned long)((10)*(32000000/4000.0)));;
   787  0013E2  0E01               	movlw	1
   788  0013E4  EC11  F00C         	call	_lcdInst
   789  0013E8  0E68               	movlw	104
   790  0013EA  6E1E               	movwf	??_main& (0+255),c
   791  0013EC  0EE4               	movlw	228
   792  0013EE                     u807:
   793  0013EE  2EE8               	decfsz	wreg,f,c
   794  0013F0  D7FE               	bra	u807
   795  0013F2  2E1E               	decfsz	??_main& (0+255),f,c
   796  0013F4  D7FC               	bra	u807
   797  0013F6  D000               	nop2	
   798                           
   799                           ;main.c: 207: printf("Run#1    A:Next");
   800  0013F8  0E62               	movlw	low STR_7
   801  0013FA  6E08               	movwf	printf@f,c
   802  0013FC  0E10               	movlw	high STR_7
   803  0013FE  6E09               	movwf	printf@f+1,c
   804  001400  EC5F  F008         	call	_printf	;wreg free
   805                           
   806                           ;main.c: 208: lcdInst(0b11000000);;
   807  001404  0EC0               	movlw	192
   808  001406  EC11  F00C         	call	_lcdInst
   809                           
   810                           ;main.c: 209: printf("# soda cans: 6");
   811  00140A  0E81               	movlw	low STR_10
   812  00140C  6E08               	movwf	printf@f,c
   813  00140E  0E10               	movlw	high STR_10
   814  001410  6E09               	movwf	printf@f+1,c
   815  001412  EC5F  F008         	call	_printf	;wreg free
   816                           
   817                           ;main.c: 210: keycheck();
   818  001416  ECF8  F00B         	call	_keycheck	;wreg free
   819                           
   820                           ;main.c: 211: lcdInst(0b00000001); _delay((unsigned long)((10)*(32000000/4000.0)));;
   821  00141A  0E01               	movlw	1
   822  00141C  EC11  F00C         	call	_lcdInst
   823  001420  0E68               	movlw	104
   824  001422  6E1E               	movwf	??_main& (0+255),c
   825  001424  0EE4               	movlw	228
   826  001426                     u817:
   827  001426  2EE8               	decfsz	wreg,f,c
   828  001428  D7FE               	bra	u817
   829  00142A  2E1E               	decfsz	??_main& (0+255),f,c
   830  00142C  D7FC               	bra	u817
   831  00142E  D000               	nop2	
   832                           
   833                           ;main.c: 212: printf("Run#1    A:Next");
   834  001430  0E62               	movlw	low STR_7
   835  001432  6E08               	movwf	printf@f,c
   836  001434  0E10               	movlw	high STR_7
   837  001436  6E09               	movwf	printf@f+1,c
   838  001438  EC5F  F008         	call	_printf	;wreg free
   839                           
   840                           ;main.c: 213: lcdInst(0b11000000);;
   841  00143C  0EC0               	movlw	192
   842  00143E  EC11  F00C         	call	_lcdInst
   843                           
   844                           ;main.c: 214: printf("# soup cans: 4");
   845  001442  0E72               	movlw	low STR_12
   846  001444  6E08               	movwf	printf@f,c
   847  001446  0E10               	movlw	high STR_12
   848  001448  6E09               	movwf	printf@f+1,c
   849  00144A  EC5F  F008         	call	_printf	;wreg free
   850                           
   851                           ;main.c: 215: keycheck();
   852  00144E  ECF8  F00B         	call	_keycheck	;wreg free
   853                           
   854                           ;main.c: 216: }
   855                           ;main.c: 218: }
   856  001452  D741               	goto	l1562
   857  001454                     l1648:
   858                           
   859                           ;main.c: 219: else{
   860                           ;main.c: 220: keypress = (0);
   861  001454  0E00               	movlw	0
   862  001456  6E2B               	movwf	_keypress,c	;volatile
   863                           
   864                           ;main.c: 221: keyinterrupt();
   865  001458  ECEE  F00B         	call	_keyinterrupt	;wreg free
   866                           
   867                           ;main.c: 222: if (keypress != (0)) {
   868  00145C  502B               	movf	_keypress,w,c	;volatile
   869  00145E  B4D8               	btfsc	status,2,c
   870  001460  D73A               	goto	l1562
   871                           
   872                           ;main.c: 223: standby = 1;
   873  001462  0E00               	movlw	0
   874  001464  6E22               	movwf	main@standby+1,c
   875  001466  0E01               	movlw	1
   876  001468  6E21               	movwf	main@standby,c
   877                           
   878                           ;main.c: 224: PWM1off();
   879  00146A  EC17  F00C         	call	_PWM1off	;wreg free
   880  00146E  D733               	goto	l1562
   881  001470                     __end_of_main:
   882                           	opt stack 0
   883                           tblptru	equ	0xFF8
   884                           prodh	equ	0xFF4
   885                           prodl	equ	0xFF3
   886                           postinc0	equ	0xFEE
   887                           wreg	equ	0xFE8
   888                           indf2	equ	0xFDF
   889                           fsr2h	equ	0xFDA
   890                           fsr2l	equ	0xFD9
   891                           status	equ	0xFD8
   892                           
   893 ;; *************** function _keyinterrupt *****************
   894 ;; Defined at:
   895 ;;		line 45 in file "main.c"
   896 ;; Parameters:    Size  Location     Type
   897 ;;		None
   898 ;; Auto vars:     Size  Location     Type
   899 ;;		None
   900 ;; Return value:  Size  Location     Type
   901 ;;                  1    wreg      void 
   902 ;; Registers used:
   903 ;;		wreg, status,2, status,0
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   913 ;;Total ram usage:        0 bytes
   914 ;; Hardware stack levels used:    1
   915 ;; This function calls:
   916 ;;		Nothing
   917 ;; This function is called by:
   918 ;;		_main
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           	psect	text1
   923  0017DC                     __ptext1:
   924                           	opt stack 0
   925  0017DC                     _keyinterrupt:
   926                           	opt stack 30
   927                           
   928                           ;main.c: 46: if(PORTBbits.RB1 == 1){
   929                           
   930                           ;incstack = 0
   931  0017DC  A281               	btfss	3969,1,c	;volatile
   932  0017DE  D006               	goto	l113
   933                           
   934                           ;main.c: 47: keypress = (PORTB & 0xF0)>>4;
   935  0017E0  3881               	swapf	3969,w,c	;volatile
   936  0017E2  0B0F               	andlw	15
   937  0017E4  0B0F               	andlw	15
   938  0017E6  6E2B               	movwf	_keypress,c	;volatile
   939  0017E8                     l114:
   940  0017E8  B281               	btfsc	3969,1,c	;volatile
   941  0017EA  D7FE               	goto	l114
   942  0017EC                     l113:
   943                           
   944                           ;main.c: 50: }
   945                           ;main.c: 51: }
   946                           ;main.c: 52: __nop();
   947  0017EC  F000               	nop	
   948  0017EE  0012               	return		;funcret
   949  0017F0                     __end_of_keyinterrupt:
   950                           	opt stack 0
   951                           tblptru	equ	0xFF8
   952                           prodh	equ	0xFF4
   953                           prodl	equ	0xFF3
   954                           postinc0	equ	0xFEE
   955                           wreg	equ	0xFE8
   956                           indf2	equ	0xFDF
   957                           fsr2h	equ	0xFDA
   958                           fsr2l	equ	0xFD9
   959                           status	equ	0xFD8
   960                           
   961 ;; *************** function _keycheck *****************
   962 ;; Defined at:
   963 ;;		line 32 in file "main.c"
   964 ;; Parameters:    Size  Location     Type
   965 ;;		None
   966 ;; Auto vars:     Size  Location     Type
   967 ;;		None
   968 ;; Return value:  Size  Location     Type
   969 ;;                  1    wreg      void 
   970 ;; Registers used:
   971 ;;		wreg, status,2, status,0
   972 ;; Tracked objects:
   973 ;;		On entry : 0/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   981 ;;Total ram usage:        0 bytes
   982 ;; Hardware stack levels used:    1
   983 ;; This function calls:
   984 ;;		Nothing
   985 ;; This function is called by:
   986 ;;		_main
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           	psect	text2
   991  0017F0                     __ptext2:
   992                           	opt stack 0
   993  0017F0                     _keycheck:
   994                           	opt stack 30
   995  0017F0                     l104:
   996  0017F0  A281               	btfss	3969,1,c	;volatile
   997  0017F2  D7FE               	goto	l104
   998                           
   999                           ;main.c: 36: }
  1000                           ;main.c: 37: keypress = (PORTB & 0xF0)>>4;
  1001  0017F4  3881               	swapf	3969,w,c	;volatile
  1002  0017F6  0B0F               	andlw	15
  1003  0017F8  0B0F               	andlw	15
  1004  0017FA  6E2B               	movwf	_keypress,c	;volatile
  1005  0017FC                     l107:
  1006  0017FC  B281               	btfsc	3969,1,c	;volatile
  1007  0017FE  D7FE               	goto	l107
  1008                           
  1009                           ;main.c: 40: }
  1010                           ;main.c: 41: __nop();
  1011  001800  F000               	nop	
  1012                           
  1013                           ;main.c: 42: return;
  1014  001802  0012               	return		;funcret
  1015  001804                     __end_of_keycheck:
  1016                           	opt stack 0
  1017                           tblptru	equ	0xFF8
  1018                           prodh	equ	0xFF4
  1019                           prodl	equ	0xFF3
  1020                           postinc0	equ	0xFEE
  1021                           wreg	equ	0xFE8
  1022                           indf2	equ	0xFDF
  1023                           fsr2h	equ	0xFDA
  1024                           fsr2l	equ	0xFD9
  1025                           status	equ	0xFD8
  1026                           
  1027 ;; *************** function _initialize *****************
  1028 ;; Defined at:
  1029 ;;		line 118 in file "main.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;		None
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;		None
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  1    wreg      void 
  1036 ;; Registers used:
  1037 ;;		wreg, status,2, status,0, cstack
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1047 ;;Total ram usage:        0 bytes
  1048 ;; Hardware stack levels used:    1
  1049 ;; Hardware stack levels required when called:    3
  1050 ;; This function calls:
  1051 ;;		_I2C_Master_Init
  1052 ;;		_initLCD
  1053 ;; This function is called by:
  1054 ;;		_main
  1055 ;; This function uses a non-reentrant model
  1056 ;;
  1057                           
  1058                           	psect	text3
  1059  0014F2                     __ptext3:
  1060                           	opt stack 0
  1061  0014F2                     _initialize:
  1062                           	opt stack 27
  1063                           
  1064                           ;main.c: 119: OSCCON = 0xF2;
  1065                           
  1066                           ;incstack = 0
  1067  0014F2  0EF2               	movlw	242
  1068  0014F4  6ED3               	movwf	4051,c	;volatile
  1069                           
  1070                           ;main.c: 120: OSCTUNEbits.PLLEN = 1;
  1071  0014F6  8C9B               	bsf	3995,6,c	;volatile
  1072                           
  1073                           ;main.c: 122: TRISA = 0x00;
  1074  0014F8  0E00               	movlw	0
  1075  0014FA  6E92               	movwf	3986,c	;volatile
  1076                           
  1077                           ;main.c: 123: TRISB = 0b11110010;
  1078  0014FC  0EF2               	movlw	242
  1079  0014FE  6E93               	movwf	3987,c	;volatile
  1080                           
  1081                           ;main.c: 124: TRISC = 0x00011100;
  1082  001500  0E00               	movlw	0
  1083  001502  6E94               	movwf	3988,c	;volatile
  1084                           
  1085                           ;main.c: 126: TRISD = 0x00;
  1086  001504  0E00               	movlw	0
  1087  001506  6E95               	movwf	3989,c	;volatile
  1088                           
  1089                           ;main.c: 127: TRISE = 0x00;
  1090  001508  0E00               	movlw	0
  1091  00150A  6E96               	movwf	3990,c	;volatile
  1092                           
  1093                           ;main.c: 129: PR2 = 0xff;
  1094  00150C  68CB               	setf	4043,c	;volatile
  1095                           
  1096                           ;main.c: 130: CCP1CON = 0b00001100;
  1097  00150E  0E0C               	movlw	12
  1098  001510  6EBD               	movwf	4029,c	;volatile
  1099                           
  1100                           ;main.c: 131: CCPR1L = 0x00;
  1101  001512  0E00               	movlw	0
  1102  001514  6EBE               	movwf	4030,c	;volatile
  1103                           
  1104                           ;main.c: 132: T2CON = 0b00000101;
  1105  001516  0E05               	movlw	5
  1106  001518  6ECA               	movwf	4042,c	;volatile
  1107                           
  1108                           ;main.c: 134: LATA = 0b01010101;
  1109  00151A  0E55               	movlw	85
  1110  00151C  6E89               	movwf	3977,c	;volatile
  1111                           
  1112                           ;main.c: 135: LATB = 0b01010101;
  1113  00151E  0E55               	movlw	85
  1114  001520  6E8A               	movwf	3978,c	;volatile
  1115                           
  1116                           ;main.c: 136: LATC = 0b01010101;
  1117  001522  0E55               	movlw	85
  1118  001524  6E8B               	movwf	3979,c	;volatile
  1119                           
  1120                           ;main.c: 137: LATD = 0x00;
  1121  001526  0E00               	movlw	0
  1122  001528  6E8C               	movwf	3980,c	;volatile
  1123                           
  1124                           ;main.c: 138: LATE = 0x00;
  1125  00152A  0E00               	movlw	0
  1126  00152C  6E8D               	movwf	3981,c	;volatile
  1127                           
  1128                           ;main.c: 139: LATDbits.LATD0 = 1;
  1129  00152E  808C               	bsf	3980,0,c	;volatile
  1130                           
  1131                           ;main.c: 140: LATDbits.LATD1 = 0;
  1132  001530  928C               	bcf	3980,1,c	;volatile
  1133                           
  1134                           ;main.c: 141: LATEbits.LATE0 = 1;
  1135  001532  808D               	bsf	3981,0,c	;volatile
  1136                           
  1137                           ;main.c: 142: LATEbits.LATE1 = 0;
  1138  001534  928D               	bcf	3981,1,c	;volatile
  1139                           
  1140                           ;main.c: 144: ADCON0 = 0x00;
  1141  001536  0E00               	movlw	0
  1142  001538  6EC2               	movwf	4034,c	;volatile
  1143                           
  1144                           ;main.c: 145: ADCON1 = 0xFF;
  1145  00153A  68C1               	setf	4033,c	;volatile
  1146                           
  1147                           ;main.c: 147: initLCD();
  1148  00153C  EC8B  F00B         	call	_initLCD	;wreg free
  1149                           
  1150                           ;main.c: 149: I2C_Master_Init(10000);
  1151  001540  0E10               	movlw	16
  1152  001542  6E0E               	movwf	I2C_Master_Init@c,c
  1153  001544  0E27               	movlw	39
  1154  001546  6E0F               	movwf	I2C_Master_Init@c+1,c
  1155  001548  0E00               	movlw	0
  1156  00154A  6E10               	movwf	I2C_Master_Init@c+2,c
  1157  00154C  0E00               	movlw	0
  1158  00154E  6E11               	movwf	I2C_Master_Init@c+3,c
  1159  001550  ECE5  F00A         	call	_I2C_Master_Init	;wreg free
  1160                           
  1161                           ;main.c: 152: nRBPU = 0;
  1162  001554  9EF1               	bcf	intcon2,7,c	;volatile
  1163                           
  1164                           ;main.c: 153: ADCON0 = 00000001;
  1165  001556  0E01               	movlw	1
  1166  001558  6EC2               	movwf	4034,c	;volatile
  1167                           
  1168                           ;main.c: 154: ADCON1 = 0x0B;
  1169  00155A  0E0B               	movlw	11
  1170  00155C  6EC1               	movwf	4033,c	;volatile
  1171                           
  1172                           ;main.c: 155: CVRCON = 0x00;
  1173  00155E  0E00               	movlw	0
  1174  001560  6EB5               	movwf	4021,c	;volatile
  1175                           
  1176                           ;main.c: 156: CMCONbits.CIS = 0;
  1177  001562  96B4               	bcf	4020,3,c	;volatile
  1178                           
  1179                           ;main.c: 157: ADFM = 1;
  1180  001564  8EC0               	bsf	4032,7,c	;volatile
  1181  001566  0012               	return		;funcret
  1182  001568                     __end_of_initialize:
  1183                           	opt stack 0
  1184                           tblptru	equ	0xFF8
  1185                           prodh	equ	0xFF4
  1186                           prodl	equ	0xFF3
  1187                           intcon2	equ	0xFF1
  1188                           postinc0	equ	0xFEE
  1189                           wreg	equ	0xFE8
  1190                           indf2	equ	0xFDF
  1191                           fsr2h	equ	0xFDA
  1192                           fsr2l	equ	0xFD9
  1193                           status	equ	0xFD8
  1194                           
  1195 ;; *************** function _initLCD *****************
  1196 ;; Defined at:
  1197 ;;		line 11 in file "lcd.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;		None
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;		None
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  1    wreg      void 
  1204 ;; Registers used:
  1205 ;;		wreg, status,2, status,0, cstack
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1213 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1214 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1215 ;;Total ram usage:        1 bytes
  1216 ;; Hardware stack levels used:    1
  1217 ;; Hardware stack levels required when called:    2
  1218 ;; This function calls:
  1219 ;;		_lcdInst
  1220 ;; This function is called by:
  1221 ;;		_initialize
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225                           	psect	text4
  1226  001716                     __ptext4:
  1227                           	opt stack 0
  1228  001716                     _initLCD:
  1229                           	opt stack 27
  1230                           
  1231                           ;lcd.c: 12: _delay((unsigned long)((15)*(32000000/4000.0)));
  1232                           
  1233                           ;incstack = 0
  1234  001716  0E9C               	movlw	156
  1235  001718  6E04               	movwf	??_initLCD& (0+255),c
  1236  00171A  0ED7               	movlw	215
  1237  00171C                     u827:
  1238  00171C  2EE8               	decfsz	wreg,f,c
  1239  00171E  D7FE               	bra	u827
  1240  001720  2E04               	decfsz	??_initLCD& (0+255),f,c
  1241  001722  D7FC               	bra	u827
  1242  001724  F000               	nop	
  1243                           
  1244                           ;lcd.c: 13: lcdInst(0b00110011);
  1245  001726  0E33               	movlw	51
  1246  001728  EC11  F00C         	call	_lcdInst
  1247                           
  1248                           ;lcd.c: 14: lcdInst(0b00110010);
  1249  00172C  0E32               	movlw	50
  1250  00172E  EC11  F00C         	call	_lcdInst
  1251                           
  1252                           ;lcd.c: 15: lcdInst(0b00101000);
  1253  001732  0E28               	movlw	40
  1254  001734  EC11  F00C         	call	_lcdInst
  1255                           
  1256                           ;lcd.c: 16: lcdInst(0b00001111);
  1257  001738  0E0F               	movlw	15
  1258  00173A  EC11  F00C         	call	_lcdInst
  1259                           
  1260                           ;lcd.c: 17: lcdInst(0b00000110);
  1261  00173E  0E06               	movlw	6
  1262  001740  EC11  F00C         	call	_lcdInst
  1263                           
  1264                           ;lcd.c: 18: lcdInst(0b00000001);
  1265  001744  0E01               	movlw	1
  1266  001746  EC11  F00C         	call	_lcdInst
  1267                           
  1268                           ;lcd.c: 19: _delay((unsigned long)((15)*(32000000/4000.0)));
  1269  00174A  0E9C               	movlw	156
  1270  00174C  6E04               	movwf	??_initLCD& (0+255),c
  1271  00174E  0ED7               	movlw	215
  1272  001750                     u837:
  1273  001750  2EE8               	decfsz	wreg,f,c
  1274  001752  D7FE               	bra	u837
  1275  001754  2E04               	decfsz	??_initLCD& (0+255),f,c
  1276  001756  D7FC               	bra	u837
  1277  001758  F000               	nop	
  1278  00175A  0012               	return		;funcret
  1279  00175C                     __end_of_initLCD:
  1280                           	opt stack 0
  1281                           tblptru	equ	0xFF8
  1282                           prodh	equ	0xFF4
  1283                           prodl	equ	0xFF3
  1284                           intcon2	equ	0xFF1
  1285                           postinc0	equ	0xFEE
  1286                           wreg	equ	0xFE8
  1287                           indf2	equ	0xFDF
  1288                           fsr2h	equ	0xFDA
  1289                           fsr2l	equ	0xFD9
  1290                           status	equ	0xFD8
  1291                           
  1292 ;; *************** function _I2C_Master_Init *****************
  1293 ;; Defined at:
  1294 ;;		line 12 in file "I2C.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;  c               4   13[COMRAM] const unsigned long 
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;		None
  1299 ;; Return value:  Size  Location     Type
  1300 ;;                  1    wreg      void 
  1301 ;; Registers used:
  1302 ;;		wreg, status,2, status,0, cstack
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1308 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1310 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1311 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1312 ;;Total ram usage:        8 bytes
  1313 ;; Hardware stack levels used:    1
  1314 ;; Hardware stack levels required when called:    1
  1315 ;; This function calls:
  1316 ;;		___lldiv
  1317 ;; This function is called by:
  1318 ;;		_initialize
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           	psect	text5
  1323  0015CA                     __ptext5:
  1324                           	opt stack 0
  1325  0015CA                     _I2C_Master_Init:
  1326                           	opt stack 28
  1327                           
  1328                           ;I2C.c: 15: SSPSTAT = 0b00000000;
  1329                           
  1330                           ;incstack = 0
  1331  0015CA  0E00               	movlw	0
  1332  0015CC  6EC7               	movwf	4039,c	;volatile
  1333                           
  1334                           ;I2C.c: 16: SSPCON1 = 0b00101000;
  1335  0015CE  0E28               	movlw	40
  1336  0015D0  6EC6               	movwf	4038,c	;volatile
  1337                           
  1338                           ;I2C.c: 17: SSPCON2 = 0b00000000;
  1339  0015D2  0E00               	movlw	0
  1340  0015D4  6EC5               	movwf	4037,c	;volatile
  1341                           
  1342                           ;I2C.c: 18: SSPADD = (32000000/(4*c))-1;
  1343  0015D6  0E00               	movlw	0
  1344  0015D8  6E01               	movwf	___lldiv@dividend,c
  1345  0015DA  0E48               	movlw	72
  1346  0015DC  6E02               	movwf	___lldiv@dividend+1,c
  1347  0015DE  0EE8               	movlw	232
  1348  0015E0  6E03               	movwf	___lldiv@dividend+2,c
  1349  0015E2  0E01               	movlw	1
  1350  0015E4  6E04               	movwf	___lldiv@dividend+3,c
  1351  0015E6  C00E  F012         	movff	I2C_Master_Init@c,??_I2C_Master_Init
  1352  0015EA  C00F  F013         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
  1353  0015EE  C010  F014         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
  1354  0015F2  C011  F015         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
  1355  0015F6  0E02               	movlw	2
  1356  0015F8                     u685:
  1357  0015F8  90D8               	bcf	status,0,c
  1358  0015FA  3612               	rlcf	??_I2C_Master_Init,f,c
  1359  0015FC  3613               	rlcf	??_I2C_Master_Init+1,f,c
  1360  0015FE  3614               	rlcf	??_I2C_Master_Init+2,f,c
  1361  001600  3615               	rlcf	??_I2C_Master_Init+3,f,c
  1362  001602  2EE8               	decfsz	wreg,f,c
  1363  001604  D7F9               	goto	u685
  1364  001606  C012  F005         	movff	??_I2C_Master_Init,___lldiv@divisor
  1365  00160A  C013  F006         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  1366  00160E  C014  F007         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  1367  001612  C015  F008         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  1368  001616  EC38  F00A         	call	___lldiv	;wreg free
  1369  00161A  0401               	decf	?___lldiv,w,c
  1370  00161C  6EC8               	movwf	4040,c	;volatile
  1371                           
  1372                           ;I2C.c: 19: TRISC3 = 1;
  1373  00161E  8694               	bsf	3988,3,c	;volatile
  1374                           
  1375                           ;I2C.c: 20: TRISC4 = 1;
  1376  001620  8894               	bsf	3988,4,c	;volatile
  1377  001622  0012               	return		;funcret
  1378  001624                     __end_of_I2C_Master_Init:
  1379                           	opt stack 0
  1380                           tblptru	equ	0xFF8
  1381                           prodh	equ	0xFF4
  1382                           prodl	equ	0xFF3
  1383                           intcon2	equ	0xFF1
  1384                           postinc0	equ	0xFEE
  1385                           wreg	equ	0xFE8
  1386                           indf2	equ	0xFDF
  1387                           fsr2h	equ	0xFDA
  1388                           fsr2l	equ	0xFD9
  1389                           status	equ	0xFD8
  1390                           
  1391 ;; *************** function ___lldiv *****************
  1392 ;; Defined at:
  1393 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;  dividend        4    0[COMRAM] unsigned long 
  1396 ;;  divisor         4    4[COMRAM] unsigned long 
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;  quotient        4    8[COMRAM] unsigned long 
  1399 ;;  counter         1   12[COMRAM] unsigned char 
  1400 ;; Return value:  Size  Location     Type
  1401 ;;                  4    0[COMRAM] unsigned long 
  1402 ;; Registers used:
  1403 ;;		wreg, status,2, status,0
  1404 ;; Tracked objects:
  1405 ;;		On entry : 0/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1409 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1410 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1412 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1413 ;;Total ram usage:       13 bytes
  1414 ;; Hardware stack levels used:    1
  1415 ;; This function calls:
  1416 ;;		Nothing
  1417 ;; This function is called by:
  1418 ;;		_I2C_Master_Init
  1419 ;; This function uses a non-reentrant model
  1420 ;;
  1421                           
  1422                           	psect	text6
  1423  001470                     __ptext6:
  1424                           	opt stack 0
  1425  001470                     ___lldiv:
  1426                           	opt stack 28
  1427                           
  1428                           ;incstack = 0
  1429  001470  0E00               	movlw	0
  1430  001472  6E09               	movwf	___lldiv@quotient,c
  1431  001474  0E00               	movlw	0
  1432  001476  6E0A               	movwf	___lldiv@quotient+1,c
  1433  001478  0E00               	movlw	0
  1434  00147A  6E0B               	movwf	___lldiv@quotient+2,c
  1435  00147C  0E00               	movlw	0
  1436  00147E  6E0C               	movwf	___lldiv@quotient+3,c
  1437  001480  5005               	movf	___lldiv@divisor,w,c
  1438  001482  1006               	iorwf	___lldiv@divisor+1,w,c
  1439  001484  1007               	iorwf	___lldiv@divisor+2,w,c
  1440  001486  1008               	iorwf	___lldiv@divisor+3,w,c
  1441  001488  B4D8               	btfsc	status,2,c
  1442  00148A  D02A               	goto	l650
  1443  00148C  0E01               	movlw	1
  1444  00148E  6E0D               	movwf	___lldiv@counter,c
  1445  001490  D006               	goto	l1376
  1446  001492                     l1374:
  1447  001492  90D8               	bcf	status,0,c
  1448  001494  3605               	rlcf	___lldiv@divisor,f,c
  1449  001496  3606               	rlcf	___lldiv@divisor+1,f,c
  1450  001498  3607               	rlcf	___lldiv@divisor+2,f,c
  1451  00149A  3608               	rlcf	___lldiv@divisor+3,f,c
  1452  00149C  2A0D               	incf	___lldiv@counter,f,c
  1453  00149E                     l1376:
  1454  00149E  AE08               	btfss	___lldiv@divisor+3,7,c
  1455  0014A0  D7F8               	goto	l1374
  1456  0014A2                     l1378:
  1457  0014A2  90D8               	bcf	status,0,c
  1458  0014A4  3609               	rlcf	___lldiv@quotient,f,c
  1459  0014A6  360A               	rlcf	___lldiv@quotient+1,f,c
  1460  0014A8  360B               	rlcf	___lldiv@quotient+2,f,c
  1461  0014AA  360C               	rlcf	___lldiv@quotient+3,f,c
  1462  0014AC  5005               	movf	___lldiv@divisor,w,c
  1463  0014AE  5C01               	subwf	___lldiv@dividend,w,c
  1464  0014B0  5006               	movf	___lldiv@divisor+1,w,c
  1465  0014B2  5802               	subwfb	___lldiv@dividend+1,w,c
  1466  0014B4  5007               	movf	___lldiv@divisor+2,w,c
  1467  0014B6  5803               	subwfb	___lldiv@dividend+2,w,c
  1468  0014B8  5008               	movf	___lldiv@divisor+3,w,c
  1469  0014BA  5804               	subwfb	___lldiv@dividend+3,w,c
  1470  0014BC  A0D8               	btfss	status,0,c
  1471  0014BE  D009               	goto	l1386
  1472  0014C0  5005               	movf	___lldiv@divisor,w,c
  1473  0014C2  5E01               	subwf	___lldiv@dividend,f,c
  1474  0014C4  5006               	movf	___lldiv@divisor+1,w,c
  1475  0014C6  5A02               	subwfb	___lldiv@dividend+1,f,c
  1476  0014C8  5007               	movf	___lldiv@divisor+2,w,c
  1477  0014CA  5A03               	subwfb	___lldiv@dividend+2,f,c
  1478  0014CC  5008               	movf	___lldiv@divisor+3,w,c
  1479  0014CE  5A04               	subwfb	___lldiv@dividend+3,f,c
  1480  0014D0  8009               	bsf	___lldiv@quotient,0,c
  1481  0014D2                     l1386:
  1482  0014D2  90D8               	bcf	status,0,c
  1483  0014D4  3208               	rrcf	___lldiv@divisor+3,f,c
  1484  0014D6  3207               	rrcf	___lldiv@divisor+2,f,c
  1485  0014D8  3206               	rrcf	___lldiv@divisor+1,f,c
  1486  0014DA  3205               	rrcf	___lldiv@divisor,f,c
  1487  0014DC  2E0D               	decfsz	___lldiv@counter,f,c
  1488  0014DE  D7E1               	goto	l1378
  1489  0014E0                     l650:
  1490  0014E0  C009  F001         	movff	___lldiv@quotient,?___lldiv
  1491  0014E4  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  1492  0014E8  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  1493  0014EC  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  1494  0014F0  0012               	return		;funcret
  1495  0014F2                     __end_of___lldiv:
  1496                           	opt stack 0
  1497                           tblptru	equ	0xFF8
  1498                           prodh	equ	0xFF4
  1499                           prodl	equ	0xFF3
  1500                           intcon2	equ	0xFF1
  1501                           postinc0	equ	0xFEE
  1502                           wreg	equ	0xFE8
  1503                           indf2	equ	0xFDF
  1504                           fsr2h	equ	0xFDA
  1505                           fsr2l	equ	0xFD9
  1506                           status	equ	0xFD8
  1507                           
  1508 ;; *************** function _homescreen *****************
  1509 ;; Defined at:
  1510 ;;		line 23 in file "main.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;		None
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;		None
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  1    wreg      void 
  1517 ;; Registers used:
  1518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1528 ;;Total ram usage:        0 bytes
  1529 ;; Hardware stack levels used:    1
  1530 ;; Hardware stack levels required when called:    3
  1531 ;; This function calls:
  1532 ;;		_lcdInst
  1533 ;;		_printf
  1534 ;; This function is called by:
  1535 ;;		_main
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           	psect	text7
  1540  001568                     __ptext7:
  1541                           	opt stack 0
  1542  001568                     _homescreen:
  1543                           	opt stack 27
  1544                           
  1545                           ;main.c: 24: lcdInst(0b10000000);;
  1546                           
  1547                           ;incstack = 0
  1548  001568  0E80               	movlw	128
  1549  00156A  EC11  F00C         	call	_lcdInst
  1550                           
  1551                           ;main.c: 25: printf("%02x/%02x/%02x ", time[6],time[5],time[4]);
  1552  00156E  0E32               	movlw	low STR_1
  1553  001570  6E08               	movwf	printf@f,c
  1554  001572  0E10               	movlw	high STR_1
  1555  001574  6E09               	movwf	printf@f+1,c
  1556  001576  C02A  F00A         	movff	_time+6,?_printf+2
  1557  00157A  6A0B               	clrf	?_printf+3,c
  1558  00157C  C029  F00C         	movff	_time+5,?_printf+4
  1559  001580  6A0D               	clrf	?_printf+5,c
  1560  001582  C028  F00E         	movff	_time+4,?_printf+6
  1561  001586  6A0F               	clrf	?_printf+7,c
  1562  001588  EC5F  F008         	call	_printf	;wreg free
  1563                           
  1564                           ;main.c: 26: printf("3:Start");
  1565  00158C  0EB5               	movlw	low STR_2
  1566  00158E  6E08               	movwf	printf@f,c
  1567  001590  0E10               	movlw	high STR_2
  1568  001592  6E09               	movwf	printf@f+1,c
  1569  001594  EC5F  F008         	call	_printf	;wreg free
  1570                           
  1571                           ;main.c: 27: lcdInst(0b11000000);;
  1572  001598  0EC0               	movlw	192
  1573  00159A  EC11  F00C         	call	_lcdInst
  1574                           
  1575                           ;main.c: 28: printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  1576  00159E  0E90               	movlw	low STR_3
  1577  0015A0  6E08               	movwf	printf@f,c
  1578  0015A2  0E10               	movlw	high STR_3
  1579  0015A4  6E09               	movwf	printf@f+1,c
  1580  0015A6  C026  F00A         	movff	_time+2,?_printf+2
  1581  0015AA  6A0B               	clrf	?_printf+3,c
  1582  0015AC  C025  F00C         	movff	_time+1,?_printf+4
  1583  0015B0  6A0D               	clrf	?_printf+5,c
  1584  0015B2  C024  F00E         	movff	_time,?_printf+6
  1585  0015B6  6A0F               	clrf	?_printf+7,c
  1586  0015B8  EC5F  F008         	call	_printf	;wreg free
  1587                           
  1588                           ;main.c: 29: printf(" 2:Logs");
  1589  0015BC  0EAD               	movlw	low STR_4
  1590  0015BE  6E08               	movwf	printf@f,c
  1591  0015C0  0E10               	movlw	high STR_4
  1592  0015C2  6E09               	movwf	printf@f+1,c
  1593  0015C4  EC5F  F008         	call	_printf	;wreg free
  1594  0015C8  0012               	return		;funcret
  1595  0015CA                     __end_of_homescreen:
  1596                           	opt stack 0
  1597                           tblptru	equ	0xFF8
  1598                           prodh	equ	0xFF4
  1599                           prodl	equ	0xFF3
  1600                           intcon2	equ	0xFF1
  1601                           postinc0	equ	0xFEE
  1602                           wreg	equ	0xFE8
  1603                           indf2	equ	0xFDF
  1604                           fsr2h	equ	0xFDA
  1605                           fsr2l	equ	0xFD9
  1606                           status	equ	0xFD8
  1607                           
  1608 ;; *************** function _printf *****************
  1609 ;; Defined at:
  1610 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;  f               2    7[COMRAM] PTR const unsigned char 
  1613 ;;		 -> STR_12(15), STR_11(16), STR_10(15), STR_9(16), 
  1614 ;;		 -> STR_8(14), STR_7(16), STR_6(16), STR_5(16), 
  1615 ;;		 -> STR_4(8), STR_3(15), STR_2(8), STR_1(16), 
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;  idx             1   21[COMRAM] unsigned char 
  1618 ;;  tmpval          4    0        struct .
  1619 ;;  cp              3    0        PTR const unsigned char 
  1620 ;;  width           2   26[COMRAM] int 
  1621 ;;  val             2   23[COMRAM] unsigned int 
  1622 ;;  ap              2   19[COMRAM] PTR void [1]
  1623 ;;		 -> ?_printf(2), 
  1624 ;;  len             2    0        unsigned int 
  1625 ;;  c               1   28[COMRAM] char 
  1626 ;;  prec            1   25[COMRAM] char 
  1627 ;;  flag            1   22[COMRAM] unsigned char 
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  2    7[COMRAM] int 
  1630 ;; Registers used:
  1631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1637 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1638 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1639 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1640 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1641 ;;Total ram usage:       22 bytes
  1642 ;; Hardware stack levels used:    1
  1643 ;; Hardware stack levels required when called:    2
  1644 ;; This function calls:
  1645 ;;		___lwdiv
  1646 ;;		___wmul
  1647 ;;		_isdigit
  1648 ;;		_putch
  1649 ;; This function is called by:
  1650 ;;		_homescreen
  1651 ;;		_main
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655                           	psect	text8
  1656  0010BE                     __ptext8:
  1657                           	opt stack 0
  1658  0010BE                     _printf:
  1659                           	opt stack 28
  1660                           
  1661                           ;doprnt.c: 466: va_list ap;
  1662                           ;doprnt.c: 499: signed char c;
  1663                           ;doprnt.c: 501: int width;
  1664                           ;doprnt.c: 506: signed char prec;
  1665                           ;doprnt.c: 508: unsigned char flag;
  1666                           ;doprnt.c: 523: union {
  1667                           ;doprnt.c: 524: unsigned long vd;
  1668                           ;doprnt.c: 525: double integ;
  1669                           ;doprnt.c: 526: } tmpval;
  1670                           ;doprnt.c: 528: unsigned int val;
  1671                           ;doprnt.c: 529: unsigned len;
  1672                           ;doprnt.c: 530: const char * cp;
  1673                           ;doprnt.c: 533: *ap = __va_start();
  1674                           
  1675                           ;incstack = 0
  1676  0010BE  0E0A               	movlw	low (?_printf+2)
  1677  0010C0  6E14               	movwf	printf@ap,c
  1678  0010C2  0E00               	movlw	high (?_printf+2)
  1679  0010C4  6E15               	movwf	printf@ap+1,c
  1680                           
  1681                           ;doprnt.c: 536: while(c = *f++) {
  1682  0010C6  D0E8               	goto	l1486
  1683  0010C8                     l1414:
  1684                           
  1685                           ;doprnt.c: 538: if(c != '%')
  1686  0010C8  0E25               	movlw	37
  1687  0010CA  181D               	xorwf	printf@c,w,c
  1688  0010CC  B4D8               	btfsc	status,2,c
  1689  0010CE  D004               	goto	l1418
  1690                           
  1691                           ;doprnt.c: 540: {
  1692                           ;doprnt.c: 541: (putch(c) );
  1693  0010D0  501D               	movf	printf@c,w,c
  1694  0010D2  EC0B  F00C         	call	_putch
  1695                           
  1696                           ;doprnt.c: 542: continue;
  1697  0010D6  D0E0               	goto	l1486
  1698  0010D8                     l1418:
  1699                           
  1700                           ;doprnt.c: 543: }
  1701                           ;doprnt.c: 546: width = 0;
  1702  0010D8  0E00               	movlw	0
  1703  0010DA  6E1C               	movwf	printf@width+1,c
  1704  0010DC  0E00               	movlw	0
  1705  0010DE  6E1B               	movwf	printf@width,c
  1706                           
  1707                           ;doprnt.c: 548: flag = 0;
  1708  0010E0  0E00               	movlw	0
  1709  0010E2  6E17               	movwf	printf@flag,c
  1710                           
  1711                           ;doprnt.c: 551: switch(*f) {
  1712                           
  1713                           ;doprnt.c: 550: for(;;) {
  1714  0010E4  D003               	goto	l1424
  1715  0010E6                     l1420:
  1716                           
  1717                           ;doprnt.c: 580: flag |= 0x04;
  1718  0010E6  8417               	bsf	printf@flag,2,c
  1719                           
  1720                           ;doprnt.c: 581: f++;
  1721  0010E8  4A08               	infsnz	printf@f,f,c
  1722  0010EA  2A09               	incf	printf@f+1,f,c
  1723  0010EC                     l1424:
  1724  0010EC  C008  FFF6         	movff	printf@f,tblptrl
  1725  0010F0  C009  FFF7         	movff	printf@f+1,tblptrh
  1726  0010F4                     	if	0	;tblptru may be non-zero
  1727  0010F4                     	endif
  1728  0010F4                     	if	0	;tblptru may be non-zero
  1729  0010F4                     	endif
  1730  0010F4  0008               	tblrd		*
  1731  0010F6  50F5               	movf	tablat,w,c
  1732                           
  1733                           ; Switch size 1, requested type "space"
  1734                           ; Number of cases is 1, Range of values is 48 to 48
  1735                           ; switch strategies available:
  1736                           ; Name         Instructions Cycles
  1737                           ; simple_byte            4     3 (average)
  1738                           ;	Chosen strategy is simple_byte
  1739  0010F8  0A30               	xorlw	48	; case 48
  1740  0010FA  B4D8               	btfsc	status,2,c
  1741  0010FC  D7F4               	goto	l1420
  1742                           
  1743                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1744                           
  1745                           ;doprnt.c: 586: }
  1746                           
  1747                           ;doprnt.c: 585: break;
  1748  0010FE  C008  FFF6         	movff	printf@f,tblptrl
  1749  001102  C009  FFF7         	movff	printf@f+1,tblptrh
  1750  001106                     	if	0	;tblptru may be non-zero
  1751  001106                     	endif
  1752  001106                     	if	0	;tblptru may be non-zero
  1753  001106                     	endif
  1754  001106  0008               	tblrd		*
  1755  001108  50F5               	movf	tablat,w,c
  1756  00110A  ECD4  F00B         	call	_isdigit
  1757  00110E  A0D8               	btfss	status,0,c
  1758  001110  D032               	goto	l1440
  1759                           
  1760                           ;doprnt.c: 598: width = 0;
  1761  001112  0E00               	movlw	0
  1762  001114  6E1C               	movwf	printf@width+1,c
  1763  001116  0E00               	movlw	0
  1764  001118  6E1B               	movwf	printf@width,c
  1765  00111A                     l1430:
  1766                           
  1767                           ;doprnt.c: 600: width *= 10;
  1768  00111A  C01B  F001         	movff	printf@width,___wmul@multiplier
  1769  00111E  C01C  F002         	movff	printf@width+1,___wmul@multiplier+1
  1770  001122  0E00               	movlw	0
  1771  001124  6E04               	movwf	___wmul@multiplicand+1,c
  1772  001126  0E0A               	movlw	10
  1773  001128  6E03               	movwf	___wmul@multiplicand,c
  1774  00112A  ECAE  F00B         	call	___wmul	;wreg free
  1775  00112E  C001  F01B         	movff	?___wmul,printf@width
  1776  001132  C002  F01C         	movff	?___wmul+1,printf@width+1
  1777                           
  1778                           ;doprnt.c: 601: width += *f++ - '0';
  1779  001136  0ED0               	movlw	208
  1780  001138  6E10               	movwf	??_printf& (0+255),c
  1781  00113A  0EFF               	movlw	255
  1782  00113C  6E11               	movwf	(??_printf+1)& (0+255),c
  1783  00113E  C008  FFF6         	movff	printf@f,tblptrl
  1784  001142  C009  FFF7         	movff	printf@f+1,tblptrh
  1785  001146                     	if	0	;tblptru may be non-zero
  1786  001146                     	endif
  1787  001146                     	if	0	;tblptru may be non-zero
  1788  001146                     	endif
  1789  001146  0008               	tblrd		*
  1790  001148  50F5               	movf	tablat,w,c
  1791  00114A  6E12               	movwf	(??_printf+2)& (0+255),c
  1792  00114C  6A13               	clrf	(??_printf+3)& (0+255),c
  1793  00114E  5010               	movf	??_printf,w,c
  1794  001150  2612               	addwf	??_printf+2,f,c
  1795  001152  5011               	movf	??_printf+1,w,c
  1796  001154  2213               	addwfc	??_printf+3,f,c
  1797  001156  5012               	movf	??_printf+2,w,c
  1798  001158  261B               	addwf	printf@width,f,c
  1799  00115A  5013               	movf	??_printf+3,w,c
  1800  00115C  221C               	addwfc	printf@width+1,f,c
  1801  00115E  4A08               	infsnz	printf@f,f,c
  1802  001160  2A09               	incf	printf@f+1,f,c
  1803                           
  1804                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1805  001162  C008  FFF6         	movff	printf@f,tblptrl
  1806  001166  C009  FFF7         	movff	printf@f+1,tblptrh
  1807  00116A                     	if	0	;tblptru may be non-zero
  1808  00116A                     	endif
  1809  00116A                     	if	0	;tblptru may be non-zero
  1810  00116A                     	endif
  1811  00116A  0008               	tblrd		*
  1812  00116C  50F5               	movf	tablat,w,c
  1813  00116E  ECD4  F00B         	call	_isdigit
  1814  001172  B0D8               	btfsc	status,0,c
  1815  001174  D7D2               	goto	l1430
  1816  001176                     l1440:
  1817  001176  C008  FFF6         	movff	printf@f,tblptrl
  1818  00117A  C009  FFF7         	movff	printf@f+1,tblptrh
  1819  00117E  4A08               	infsnz	printf@f,f,c
  1820  001180  2A09               	incf	printf@f+1,f,c
  1821  001182                     	if	0	;tblptru may be non-zero
  1822  001182                     	endif
  1823  001182                     	if	0	;tblptru may be non-zero
  1824  001182                     	endif
  1825  001182  0008               	tblrd		*
  1826  001184  CFF5 F01D          	movff	tablat,printf@c
  1827  001188  501D               	movf	printf@c,w,c
  1828                           
  1829                           ; Switch size 1, requested type "space"
  1830                           ; Number of cases is 2, Range of values is 0 to 120
  1831                           ; switch strategies available:
  1832                           ; Name         Instructions Cycles
  1833                           ; simple_byte            7     4 (average)
  1834                           ;	Chosen strategy is simple_byte
  1835  00118A  0A00               	xorlw	0	; case 0
  1836  00118C  B4D8               	btfsc	status,2,c
  1837  00118E  0012               	return	
  1838  001190  0A78               	xorlw	120	; case 120
  1839  001192  A4D8               	btfss	status,2,c
  1840  001194  D081               	goto	l1486
  1841                           
  1842                           ;doprnt.c: 1273: {
  1843                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1844  001196  C014  FFD9         	movff	printf@ap,fsr2l
  1845  00119A  C015  FFDA         	movff	printf@ap+1,fsr2h
  1846  00119E  CFDE F018          	movff	postinc2,printf@val
  1847  0011A2  CFDD F019          	movff	postdec2,printf@val+1
  1848  0011A6  0E02               	movlw	2
  1849  0011A8  2614               	addwf	printf@ap,f,c
  1850  0011AA  0E00               	movlw	0
  1851  0011AC  2215               	addwfc	printf@ap+1,f,c
  1852                           
  1853                           ;doprnt.c: 1287: }
  1854                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  1855  0011AE  0E01               	movlw	1
  1856  0011B0  6E1D               	movwf	printf@c,c
  1857  0011B2                     l1448:
  1858  0011B2  0E04               	movlw	4
  1859  0011B4  181D               	xorwf	printf@c,w,c
  1860  0011B6  B4D8               	btfsc	status,2,c
  1861  0011B8  D012               	goto	l1460
  1862                           
  1863                           ;doprnt.c: 1317: if(val < hexpowers[c])
  1864  0011BA  501D               	movf	printf@c,w,c
  1865  0011BC  0D02               	mullw	2
  1866  0011BE  0E12               	movlw	low _hexpowers
  1867  0011C0  24F3               	addwf	prodl,w,c
  1868  0011C2  6EF6               	movwf	tblptrl,c
  1869  0011C4  0E10               	movlw	high _hexpowers
  1870  0011C6  20F4               	addwfc	prodh,w,c
  1871  0011C8  6EF7               	movwf	tblptrh,c
  1872  0011CA                     	if	0	;There are less than 3 active tblptr bytes
  1873  0011CA                     	endif
  1874  0011CA  0009               	tblrd		*+
  1875  0011CC  50F5               	movf	tablat,w,c
  1876  0011CE  5C18               	subwf	printf@val,w,c
  1877  0011D0  0009               	tblrd		*+
  1878  0011D2  50F5               	movf	tablat,w,c
  1879  0011D4  5819               	subwfb	printf@val+1,w,c
  1880  0011D6  A0D8               	btfss	status,0,c
  1881  0011D8  D002               	goto	l1460
  1882                           
  1883                           ;doprnt.c: 1318: break;
  1884  0011DA  2A1D               	incf	printf@c,f,c
  1885  0011DC  D7EA               	goto	l1448
  1886  0011DE                     l1460:
  1887                           
  1888                           ;doprnt.c: 1381: if(width > c)
  1889  0011DE  0E80               	movlw	128
  1890  0011E0  BE1D               	btfsc	printf@c,7,c
  1891  0011E2  0E7F               	movlw	127
  1892  0011E4  6E10               	movwf	??_printf& (0+255),c
  1893  0011E6  501B               	movf	printf@width,w,c
  1894  0011E8  5C1D               	subwf	printf@c,w,c
  1895  0011EA  501C               	movf	printf@width+1,w,c
  1896  0011EC  0A80               	xorlw	128
  1897  0011EE  5810               	subwfb	??_printf& (0+255),w,c
  1898  0011F0  B0D8               	btfsc	status,0,c
  1899  0011F2  D007               	goto	l1464
  1900                           
  1901                           ;doprnt.c: 1382: width -= c;
  1902  0011F4  501D               	movf	printf@c,w,c
  1903  0011F6  5E1B               	subwf	printf@width,f,c
  1904  0011F8  0E00               	movlw	0
  1905  0011FA  BE1D               	btfsc	printf@c,7,c
  1906  0011FC  0EFF               	movlw	255
  1907  0011FE  5A1C               	subwfb	printf@width+1,f,c
  1908  001200  D004               	goto	l1466
  1909  001202                     l1464:
  1910                           
  1911                           ;doprnt.c: 1383: else
  1912                           ;doprnt.c: 1384: width = 0;
  1913  001202  0E00               	movlw	0
  1914  001204  6E1C               	movwf	printf@width+1,c
  1915  001206  0E00               	movlw	0
  1916  001208  6E1B               	movwf	printf@width,c
  1917  00120A                     l1466:
  1918                           
  1919                           ;doprnt.c: 1387: if(flag & 0x04) {
  1920  00120A  A417               	btfss	printf@flag,2,c
  1921  00120C  D00B               	goto	l1474
  1922  00120E                     
  1923                           ;doprnt.c: 1415: if(width)
  1924  00120E  501B               	movf	printf@width,w,c
  1925  001210  101C               	iorwf	printf@width+1,w,c
  1926  001212  B4D8               	btfsc	status,2,c
  1927  001214  D015               	goto	l287
  1928                           
  1929                           ;doprnt.c: 1417: (putch('0') );
  1930                           
  1931                           ;doprnt.c: 1416: do
  1932  001216  0E30               	movlw	48
  1933  001218  EC0B  F00C         	call	_putch
  1934                           
  1935                           ;doprnt.c: 1418: while(--width);
  1936  00121C  061B               	decf	printf@width,f,c
  1937  00121E  A0D8               	btfss	status,0,c
  1938  001220  061C               	decf	printf@width+1,f,c
  1939  001222  D7F5               	goto	L1
  1940  001224                     l1474:
  1941                           
  1942                           ;doprnt.c: 1422: {
  1943                           ;doprnt.c: 1424: if(width
  1944                           ;doprnt.c: 1428: )
  1945  001224  501B               	movf	printf@width,w,c
  1946  001226  101C               	iorwf	printf@width+1,w,c
  1947  001228  B4D8               	btfsc	status,2,c
  1948  00122A  D00A               	goto	l287
  1949  00122C                     l1476:
  1950                           
  1951                           ;doprnt.c: 1430: (putch(' ') );
  1952  00122C  0E20               	movlw	32
  1953  00122E  EC0B  F00C         	call	_putch
  1954                           
  1955                           ;doprnt.c: 1431: while(--width);
  1956  001232  061B               	decf	printf@width,f,c
  1957  001234  A0D8               	btfss	status,0,c
  1958  001236  061C               	decf	printf@width+1,f,c
  1959  001238  501B               	movf	printf@width,w,c
  1960  00123A  101C               	iorwf	printf@width+1,w,c
  1961  00123C  A4D8               	btfss	status,2,c
  1962  00123E  D7F6               	goto	l1476
  1963  001240                     l287:
  1964                           
  1965                           ;doprnt.c: 1469: }
  1966                           ;doprnt.c: 1472: prec = c;
  1967  001240  C01D  F01A         	movff	printf@c,printf@prec
  1968                           
  1969                           ;doprnt.c: 1474: while(prec--) {
  1970  001244  D025               	goto	l291
  1971  001246                     l1480:
  1972                           
  1973                           ;doprnt.c: 1478: {
  1974                           ;doprnt.c: 1499: {
  1975                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  1976  001246  C018  F001         	movff	printf@val,___lwdiv@dividend
  1977  00124A  C019  F002         	movff	printf@val+1,___lwdiv@dividend+1
  1978  00124E  501A               	movf	printf@prec,w,c
  1979  001250  0D02               	mullw	2
  1980  001252  0E12               	movlw	low _hexpowers
  1981  001254  24F3               	addwf	prodl,w,c
  1982  001256  6EF6               	movwf	tblptrl,c
  1983  001258  0E10               	movlw	high _hexpowers
  1984  00125A  20F4               	addwfc	prodh,w,c
  1985  00125C  6EF7               	movwf	tblptrh,c
  1986  00125E                     	if	0	;There are less than 3 active tblptr bytes
  1987  00125E                     	endif
  1988  00125E  0009               	tblrd		*+
  1989  001260  CFF5 F003          	movff	tablat,___lwdiv@divisor
  1990  001264  000A               	tblrd		*-
  1991  001266  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  1992  00126A  EC3D  F00B         	call	___lwdiv	;wreg free
  1993  00126E  5001               	movf	?___lwdiv,w,c
  1994  001270  0B0F               	andlw	15
  1995  001272  6E16               	movwf	printf@idx,c
  1996                           
  1997                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  1998  001274  5016               	movf	printf@idx,w,c
  1999  001276  0D01               	mullw	1
  2000  001278  0E21               	movlw	low STR_13
  2001  00127A  24F3               	addwf	prodl,w,c
  2002  00127C  6EF6               	movwf	tblptrl,c
  2003  00127E  0E10               	movlw	high STR_13
  2004  001280  20F4               	addwfc	prodh,w,c
  2005  001282  6EF7               	movwf	tblptrh,c
  2006  001284                     	if	0	;There are less than 3 active tblptr bytes
  2007  001284                     	endif
  2008  001284  0008               	tblrd		*
  2009  001286  CFF5 F01D          	movff	tablat,printf@c
  2010                           
  2011                           ;doprnt.c: 1508: }
  2012                           ;doprnt.c: 1523: }
  2013                           ;doprnt.c: 1524: (putch(c) );
  2014  00128A  501D               	movf	printf@c,w,c
  2015  00128C  EC0B  F00C         	call	_putch
  2016  001290                     l291:
  2017  001290  061A               	decf	printf@prec,f,c
  2018  001292  281A               	incf	printf@prec,w,c
  2019  001294  A4D8               	btfss	status,2,c
  2020  001296  D7D7               	goto	l1480
  2021  001298                     l1486:
  2022  001298  C008  FFF6         	movff	printf@f,tblptrl
  2023  00129C  C009  FFF7         	movff	printf@f+1,tblptrh
  2024  0012A0  4A08               	infsnz	printf@f,f,c
  2025  0012A2  2A09               	incf	printf@f+1,f,c
  2026  0012A4                     	if	0	;tblptru may be non-zero
  2027  0012A4                     	endif
  2028  0012A4                     	if	0	;tblptru may be non-zero
  2029  0012A4                     	endif
  2030  0012A4  0008               	tblrd		*
  2031  0012A6  CFF5 F01D          	movff	tablat,printf@c
  2032  0012AA  501D               	movf	printf@c,w,c
  2033  0012AC  B4D8               	btfsc	status,2,c
  2034  0012AE  0012               	return	
  2035  0012B0  D70B               	goto	l1414
  2036  0012B2                     __end_of_printf:
  2037                           	opt stack 0
  2038                           tblptru	equ	0xFF8
  2039                           tblptrh	equ	0xFF7
  2040                           tblptrl	equ	0xFF6
  2041                           tablat	equ	0xFF5
  2042                           prodh	equ	0xFF4
  2043                           prodl	equ	0xFF3
  2044                           intcon2	equ	0xFF1
  2045                           postinc0	equ	0xFEE
  2046                           wreg	equ	0xFE8
  2047                           indf2	equ	0xFDF
  2048                           postinc2	equ	0xFDE
  2049                           postdec2	equ	0xFDD
  2050                           fsr2h	equ	0xFDA
  2051                           fsr2l	equ	0xFD9
  2052                           status	equ	0xFD8
  2053                           
  2054 ;; *************** function _putch *****************
  2055 ;; Defined at:
  2056 ;;		line 27 in file "lcd.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;  data            1    wreg     unsigned char 
  2059 ;; Auto vars:     Size  Location     Type
  2060 ;;  data            1    2[COMRAM] unsigned char 
  2061 ;; Return value:  Size  Location     Type
  2062 ;;                  1    wreg      void 
  2063 ;; Registers used:
  2064 ;;		wreg, status,2, status,0, cstack
  2065 ;; Tracked objects:
  2066 ;;		On entry : 0/0
  2067 ;;		On exit  : 0/0
  2068 ;;		Unchanged: 0/0
  2069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2071 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2073 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2074 ;;Total ram usage:        1 bytes
  2075 ;; Hardware stack levels used:    1
  2076 ;; Hardware stack levels required when called:    1
  2077 ;; This function calls:
  2078 ;;		_lcdNibble
  2079 ;; This function is called by:
  2080 ;;		_printf
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           	psect	text9
  2085  001816                     __ptext9:
  2086                           	opt stack 0
  2087  001816                     _putch:
  2088                           	opt stack 28
  2089                           
  2090                           ;incstack = 0
  2091                           ;putch@data stored from wreg
  2092  001816  6E03               	movwf	putch@data,c
  2093                           
  2094                           ;lcd.c: 28: LATDbits.LATD2 = 1;
  2095  001818  848C               	bsf	3980,2,c	;volatile
  2096                           
  2097                           ;lcd.c: 29: lcdNibble(data);
  2098  00181A  5003               	movf	putch@data,w,c
  2099  00181C  EC12  F00B         	call	_lcdNibble
  2100  001820  0012               	return		;funcret
  2101  001822                     __end_of_putch:
  2102                           	opt stack 0
  2103                           tblptru	equ	0xFF8
  2104                           tblptrh	equ	0xFF7
  2105                           tblptrl	equ	0xFF6
  2106                           tablat	equ	0xFF5
  2107                           prodh	equ	0xFF4
  2108                           prodl	equ	0xFF3
  2109                           intcon2	equ	0xFF1
  2110                           postinc0	equ	0xFEE
  2111                           wreg	equ	0xFE8
  2112                           indf2	equ	0xFDF
  2113                           postinc2	equ	0xFDE
  2114                           postdec2	equ	0xFDD
  2115                           fsr2h	equ	0xFDA
  2116                           fsr2l	equ	0xFD9
  2117                           status	equ	0xFD8
  2118                           
  2119 ;; *************** function _isdigit *****************
  2120 ;; Defined at:
  2121 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\isdigit.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;  c               1    wreg     unsigned char 
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;  c               1    2[COMRAM] unsigned char 
  2126 ;; Return value:  Size  Location     Type
  2127 ;;		None               void
  2128 ;; Registers used:
  2129 ;;		wreg, status,2, status,0
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2136 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2137 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2138 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2139 ;;Total ram usage:        3 bytes
  2140 ;; Hardware stack levels used:    1
  2141 ;; This function calls:
  2142 ;;		Nothing
  2143 ;; This function is called by:
  2144 ;;		_printf
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148                           	psect	text10
  2149  0017A8                     __ptext10:
  2150                           	opt stack 0
  2151  0017A8                     _isdigit:
  2152                           	opt stack 29
  2153                           
  2154                           ;incstack = 0
  2155                           ;isdigit@c stored from wreg
  2156  0017A8  6E03               	movwf	isdigit@c,c
  2157  0017AA  0E00               	movlw	0
  2158  0017AC  6E02               	movwf	_isdigit$865,c
  2159  0017AE  0E3A               	movlw	58
  2160  0017B0  6003               	cpfslt	isdigit@c,c
  2161  0017B2  D005               	goto	l1358
  2162  0017B4  0E2F               	movlw	47
  2163  0017B6  6403               	cpfsgt	isdigit@c,c
  2164  0017B8  D002               	goto	l1358
  2165  0017BA  0E01               	movlw	1
  2166  0017BC  6E02               	movwf	_isdigit$865,c
  2167  0017BE                     l1358:
  2168  0017BE  C002  F001         	movff	_isdigit$865,??_isdigit
  2169  0017C2  3001               	rrcf	??_isdigit,w,c
  2170  0017C4  0012               	return	
  2171  0017C6                     __end_of_isdigit:
  2172                           	opt stack 0
  2173                           tblptru	equ	0xFF8
  2174                           tblptrh	equ	0xFF7
  2175                           tblptrl	equ	0xFF6
  2176                           tablat	equ	0xFF5
  2177                           prodh	equ	0xFF4
  2178                           prodl	equ	0xFF3
  2179                           intcon2	equ	0xFF1
  2180                           postinc0	equ	0xFEE
  2181                           wreg	equ	0xFE8
  2182                           indf2	equ	0xFDF
  2183                           postinc2	equ	0xFDE
  2184                           postdec2	equ	0xFDD
  2185                           fsr2h	equ	0xFDA
  2186                           fsr2l	equ	0xFD9
  2187                           status	equ	0xFD8
  2188                           
  2189 ;; *************** function ___wmul *****************
  2190 ;; Defined at:
  2191 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;  multiplier      2    0[COMRAM] unsigned int 
  2194 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;  product         2    4[COMRAM] unsigned int 
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  2    0[COMRAM] unsigned int 
  2199 ;; Registers used:
  2200 ;;		wreg, status,2, status,0, prodl, prodh
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2206 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2207 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2209 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2210 ;;Total ram usage:        6 bytes
  2211 ;; Hardware stack levels used:    1
  2212 ;; This function calls:
  2213 ;;		Nothing
  2214 ;; This function is called by:
  2215 ;;		_printf
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           	psect	text11
  2220  00175C                     __ptext11:
  2221                           	opt stack 0
  2222  00175C                     ___wmul:
  2223                           	opt stack 29
  2224                           
  2225                           ;incstack = 0
  2226  00175C  5001               	movf	___wmul@multiplier,w,c
  2227  00175E  0203               	mulwf	___wmul@multiplicand,c
  2228  001760  CFF3 F005          	movff	prodl,___wmul@product
  2229  001764  CFF4 F006          	movff	prodh,___wmul@product+1
  2230  001768  5001               	movf	___wmul@multiplier,w,c
  2231  00176A  0204               	mulwf	___wmul@multiplicand+1,c
  2232  00176C  50F3               	movf	prodl,w,c
  2233  00176E  2606               	addwf	___wmul@product+1,f,c
  2234  001770  5002               	movf	___wmul@multiplier+1,w,c
  2235  001772  0203               	mulwf	___wmul@multiplicand,c
  2236  001774  50F3               	movf	prodl,w,c
  2237  001776  2606               	addwf	___wmul@product+1,f,c
  2238  001778  C005  F001         	movff	___wmul@product,?___wmul
  2239  00177C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2240  001780  0012               	return	
  2241  001782                     __end_of___wmul:
  2242                           	opt stack 0
  2243                           tblptru	equ	0xFF8
  2244                           tblptrh	equ	0xFF7
  2245                           tblptrl	equ	0xFF6
  2246                           tablat	equ	0xFF5
  2247                           prodh	equ	0xFF4
  2248                           prodl	equ	0xFF3
  2249                           intcon2	equ	0xFF1
  2250                           postinc0	equ	0xFEE
  2251                           wreg	equ	0xFE8
  2252                           indf2	equ	0xFDF
  2253                           postinc2	equ	0xFDE
  2254                           postdec2	equ	0xFDD
  2255                           fsr2h	equ	0xFDA
  2256                           fsr2l	equ	0xFD9
  2257                           status	equ	0xFD8
  2258                           
  2259 ;; *************** function ___lwdiv *****************
  2260 ;; Defined at:
  2261 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;  dividend        2    0[COMRAM] unsigned int 
  2264 ;;  divisor         2    2[COMRAM] unsigned int 
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;  quotient        2    4[COMRAM] unsigned int 
  2267 ;;  counter         1    6[COMRAM] unsigned char 
  2268 ;; Return value:  Size  Location     Type
  2269 ;;                  2    0[COMRAM] unsigned int 
  2270 ;; Registers used:
  2271 ;;		wreg, status,2, status,0
  2272 ;; Tracked objects:
  2273 ;;		On entry : 0/0
  2274 ;;		On exit  : 0/0
  2275 ;;		Unchanged: 0/0
  2276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2277 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2278 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2280 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2281 ;;Total ram usage:        7 bytes
  2282 ;; Hardware stack levels used:    1
  2283 ;; This function calls:
  2284 ;;		Nothing
  2285 ;; This function is called by:
  2286 ;;		_printf
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           	psect	text12
  2291  00167A                     __ptext12:
  2292                           	opt stack 0
  2293  00167A                     ___lwdiv:
  2294                           	opt stack 29
  2295                           
  2296                           ;incstack = 0
  2297  00167A  0E00               	movlw	0
  2298  00167C  6E06               	movwf	___lwdiv@quotient+1,c
  2299  00167E  0E00               	movlw	0
  2300  001680  6E05               	movwf	___lwdiv@quotient,c
  2301  001682  5003               	movf	___lwdiv@divisor,w,c
  2302  001684  1004               	iorwf	___lwdiv@divisor+1,w,c
  2303  001686  B4D8               	btfsc	status,2,c
  2304  001688  D01C               	goto	l703
  2305  00168A  0E01               	movlw	1
  2306  00168C  6E07               	movwf	___lwdiv@counter,c
  2307  00168E  D004               	goto	l1398
  2308  001690                     l1396:
  2309  001690  90D8               	bcf	status,0,c
  2310  001692  3603               	rlcf	___lwdiv@divisor,f,c
  2311  001694  3604               	rlcf	___lwdiv@divisor+1,f,c
  2312  001696  2A07               	incf	___lwdiv@counter,f,c
  2313  001698                     l1398:
  2314  001698  AE04               	btfss	___lwdiv@divisor+1,7,c
  2315  00169A  D7FA               	goto	l1396
  2316  00169C                     l1400:
  2317  00169C  90D8               	bcf	status,0,c
  2318  00169E  3605               	rlcf	___lwdiv@quotient,f,c
  2319  0016A0  3606               	rlcf	___lwdiv@quotient+1,f,c
  2320  0016A2  5003               	movf	___lwdiv@divisor,w,c
  2321  0016A4  5C01               	subwf	___lwdiv@dividend,w,c
  2322  0016A6  5004               	movf	___lwdiv@divisor+1,w,c
  2323  0016A8  5802               	subwfb	___lwdiv@dividend+1,w,c
  2324  0016AA  A0D8               	btfss	status,0,c
  2325  0016AC  D005               	goto	l1408
  2326  0016AE  5003               	movf	___lwdiv@divisor,w,c
  2327  0016B0  5E01               	subwf	___lwdiv@dividend,f,c
  2328  0016B2  5004               	movf	___lwdiv@divisor+1,w,c
  2329  0016B4  5A02               	subwfb	___lwdiv@dividend+1,f,c
  2330  0016B6  8005               	bsf	___lwdiv@quotient,0,c
  2331  0016B8                     l1408:
  2332  0016B8  90D8               	bcf	status,0,c
  2333  0016BA  3204               	rrcf	___lwdiv@divisor+1,f,c
  2334  0016BC  3203               	rrcf	___lwdiv@divisor,f,c
  2335  0016BE  2E07               	decfsz	___lwdiv@counter,f,c
  2336  0016C0  D7ED               	goto	l1400
  2337  0016C2                     l703:
  2338  0016C2  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2339  0016C6  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2340  0016CA  0012               	return		;funcret
  2341  0016CC                     __end_of___lwdiv:
  2342                           	opt stack 0
  2343                           tblptru	equ	0xFF8
  2344                           tblptrh	equ	0xFF7
  2345                           tblptrl	equ	0xFF6
  2346                           tablat	equ	0xFF5
  2347                           prodh	equ	0xFF4
  2348                           prodl	equ	0xFF3
  2349                           intcon2	equ	0xFF1
  2350                           postinc0	equ	0xFEE
  2351                           wreg	equ	0xFE8
  2352                           indf2	equ	0xFDF
  2353                           postinc2	equ	0xFDE
  2354                           postdec2	equ	0xFDD
  2355                           fsr2h	equ	0xFDA
  2356                           fsr2l	equ	0xFD9
  2357                           status	equ	0xFD8
  2358                           
  2359 ;; *************** function _lcdInst *****************
  2360 ;; Defined at:
  2361 ;;		line 22 in file "lcd.c"
  2362 ;; Parameters:    Size  Location     Type
  2363 ;;  data            1    wreg     unsigned char 
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;  data            1    2[COMRAM] unsigned char 
  2366 ;; Return value:  Size  Location     Type
  2367 ;;                  1    wreg      void 
  2368 ;; Registers used:
  2369 ;;		wreg, status,2, status,0, cstack
  2370 ;; Tracked objects:
  2371 ;;		On entry : 0/0
  2372 ;;		On exit  : 0/0
  2373 ;;		Unchanged: 0/0
  2374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2376 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2378 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2379 ;;Total ram usage:        1 bytes
  2380 ;; Hardware stack levels used:    1
  2381 ;; Hardware stack levels required when called:    1
  2382 ;; This function calls:
  2383 ;;		_lcdNibble
  2384 ;; This function is called by:
  2385 ;;		_homescreen
  2386 ;;		_main
  2387 ;;		_initLCD
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           	psect	text13
  2392  001822                     __ptext13:
  2393                           	opt stack 0
  2394  001822                     _lcdInst:
  2395                           	opt stack 29
  2396                           
  2397                           ;incstack = 0
  2398                           ;lcdInst@data stored from wreg
  2399  001822  6E03               	movwf	lcdInst@data,c
  2400                           
  2401                           ;lcd.c: 23: LATDbits.LATD2 = 0;
  2402  001824  948C               	bcf	3980,2,c	;volatile
  2403                           
  2404                           ;lcd.c: 24: lcdNibble(data);
  2405  001826  5003               	movf	lcdInst@data,w,c
  2406  001828  EC12  F00B         	call	_lcdNibble
  2407  00182C  0012               	return		;funcret
  2408  00182E                     __end_of_lcdInst:
  2409                           	opt stack 0
  2410                           tblptru	equ	0xFF8
  2411                           tblptrh	equ	0xFF7
  2412                           tblptrl	equ	0xFF6
  2413                           tablat	equ	0xFF5
  2414                           prodh	equ	0xFF4
  2415                           prodl	equ	0xFF3
  2416                           intcon2	equ	0xFF1
  2417                           postinc0	equ	0xFEE
  2418                           wreg	equ	0xFE8
  2419                           indf2	equ	0xFDF
  2420                           postinc2	equ	0xFDE
  2421                           postdec2	equ	0xFDD
  2422                           fsr2h	equ	0xFDA
  2423                           fsr2l	equ	0xFD9
  2424                           status	equ	0xFD8
  2425                           
  2426 ;; *************** function _lcdNibble *****************
  2427 ;; Defined at:
  2428 ;;		line 32 in file "lcd.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;  data            1    wreg     unsigned char 
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;  data            1    1[COMRAM] unsigned char 
  2433 ;;  temp            1    0[COMRAM] unsigned char 
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  1    wreg      void 
  2436 ;; Registers used:
  2437 ;;		wreg, status,2, status,0
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2444 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2446 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2447 ;;Total ram usage:        2 bytes
  2448 ;; Hardware stack levels used:    1
  2449 ;; This function calls:
  2450 ;;		Nothing
  2451 ;; This function is called by:
  2452 ;;		_lcdInst
  2453 ;;		_putch
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457                           	psect	text14
  2458  001624                     __ptext14:
  2459                           	opt stack 0
  2460  001624                     _lcdNibble:
  2461                           	opt stack 28
  2462                           
  2463                           ;incstack = 0
  2464                           ;lcdNibble@data stored from wreg
  2465  001624  6E02               	movwf	lcdNibble@data,c
  2466                           
  2467                           ;lcd.c: 34: char temp = data & 0xF0;
  2468  001626  5002               	movf	lcdNibble@data,w,c
  2469  001628  0BF0               	andlw	240
  2470  00162A  6E01               	movwf	lcdNibble@temp,c
  2471                           
  2472                           ;lcd.c: 35: LATD = LATD & 0x0F;
  2473  00162C  508C               	movf	3980,w,c	;volatile
  2474  00162E  0B0F               	andlw	15
  2475  001630  6E8C               	movwf	3980,c	;volatile
  2476                           
  2477                           ;lcd.c: 36: LATD = temp | LATD;
  2478  001632  5001               	movf	lcdNibble@temp,w,c
  2479  001634  108C               	iorwf	3980,w,c	;volatile
  2480  001636  6E8C               	movwf	3980,c	;volatile
  2481                           
  2482                           ;lcd.c: 38: LATDbits.LATD3 = 0;
  2483  001638  968C               	bcf	3980,3,c	;volatile
  2484                           
  2485                           ;lcd.c: 39: _delay((unsigned long)((25)*(32000000/4000000.0)));
  2486  00163A  0E42               	movlw	66
  2487  00163C                     u847:
  2488  00163C  2EE8               	decfsz	wreg,f,c
  2489  00163E  D7FE               	bra	u847
  2490  001640  D000               	nop2	
  2491                           
  2492                           ;lcd.c: 40: LATDbits.LATD3 = 1;
  2493  001642  868C               	bsf	3980,3,c	;volatile
  2494                           
  2495                           ;lcd.c: 41: _delay((unsigned long)((25)*(32000000/4000000.0)));
  2496  001644  0E42               	movlw	66
  2497  001646                     u857:
  2498  001646  2EE8               	decfsz	wreg,f,c
  2499  001648  D7FE               	bra	u857
  2500  00164A  D000               	nop2	
  2501                           
  2502                           ;lcd.c: 43: data = data << 4;
  2503  00164C  3802               	swapf	lcdNibble@data,w,c
  2504  00164E  0BF0               	andlw	240
  2505  001650  6E02               	movwf	lcdNibble@data,c
  2506                           
  2507                           ;lcd.c: 45: temp = data & 0xF0;
  2508  001652  5002               	movf	lcdNibble@data,w,c
  2509  001654  0BF0               	andlw	240
  2510  001656  6E01               	movwf	lcdNibble@temp,c
  2511                           
  2512                           ;lcd.c: 46: LATD = LATD & 0x0F;
  2513  001658  508C               	movf	3980,w,c	;volatile
  2514  00165A  0B0F               	andlw	15
  2515  00165C  6E8C               	movwf	3980,c	;volatile
  2516                           
  2517                           ;lcd.c: 47: LATD = temp | LATD;
  2518  00165E  5001               	movf	lcdNibble@temp,w,c
  2519  001660  108C               	iorwf	3980,w,c	;volatile
  2520  001662  6E8C               	movwf	3980,c	;volatile
  2521                           
  2522                           ;lcd.c: 49: LATDbits.LATD3 = 0;
  2523  001664  968C               	bcf	3980,3,c	;volatile
  2524                           
  2525                           ;lcd.c: 50: _delay((unsigned long)((25)*(32000000/4000000.0)));
  2526  001666  0E42               	movlw	66
  2527  001668                     u867:
  2528  001668  2EE8               	decfsz	wreg,f,c
  2529  00166A  D7FE               	bra	u867
  2530  00166C  D000               	nop2	
  2531                           
  2532                           ;lcd.c: 51: LATDbits.LATD3 = 1;
  2533  00166E  868C               	bsf	3980,3,c	;volatile
  2534                           
  2535                           ;lcd.c: 52: _delay((unsigned long)((25)*(32000000/4000000.0)));
  2536  001670  0E42               	movlw	66
  2537  001672                     u877:
  2538  001672  2EE8               	decfsz	wreg,f,c
  2539  001674  D7FE               	bra	u877
  2540  001676  D000               	nop2	
  2541  001678  0012               	return		;funcret
  2542  00167A                     __end_of_lcdNibble:
  2543                           	opt stack 0
  2544                           tblptru	equ	0xFF8
  2545                           tblptrh	equ	0xFF7
  2546                           tblptrl	equ	0xFF6
  2547                           tablat	equ	0xFF5
  2548                           prodh	equ	0xFF4
  2549                           prodl	equ	0xFF3
  2550                           intcon2	equ	0xFF1
  2551                           postinc0	equ	0xFEE
  2552                           wreg	equ	0xFE8
  2553                           indf2	equ	0xFDF
  2554                           postinc2	equ	0xFDE
  2555                           postdec2	equ	0xFDD
  2556                           fsr2h	equ	0xFDA
  2557                           fsr2l	equ	0xFD9
  2558                           status	equ	0xFD8
  2559                           
  2560 ;; *************** function _PWM1off *****************
  2561 ;; Defined at:
  2562 ;;		line 19 in file "motors.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;		None
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;		None
  2567 ;; Return value:  Size  Location     Type
  2568 ;;                  1    wreg      void 
  2569 ;; Registers used:
  2570 ;;		wreg, status,2
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2580 ;;Total ram usage:        0 bytes
  2581 ;; Hardware stack levels used:    1
  2582 ;; This function calls:
  2583 ;;		Nothing
  2584 ;; This function is called by:
  2585 ;;		_main
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588                           
  2589                           	psect	text15
  2590  00182E                     __ptext15:
  2591                           	opt stack 0
  2592  00182E                     _PWM1off:
  2593                           	opt stack 30
  2594                           
  2595                           ;motors.c: 20: CCP1CONbits.DC1B0 = 0;
  2596                           
  2597                           ;incstack = 0
  2598  00182E  98BD               	bcf	4029,4,c	;volatile
  2599                           
  2600                           ;motors.c: 21: CCP1CONbits.DC1B1 = 0;
  2601  001830  9ABD               	bcf	4029,5,c	;volatile
  2602                           
  2603                           ;motors.c: 22: CCPR1L = 0;
  2604  001832  0E00               	movlw	0
  2605  001834  6EBE               	movwf	4030,c	;volatile
  2606  001836  0012               	return		;funcret
  2607  001838                     __end_of_PWM1off:
  2608                           	opt stack 0
  2609                           tblptru	equ	0xFF8
  2610                           tblptrh	equ	0xFF7
  2611                           tblptrl	equ	0xFF6
  2612                           tablat	equ	0xFF5
  2613                           prodh	equ	0xFF4
  2614                           prodl	equ	0xFF3
  2615                           intcon2	equ	0xFF1
  2616                           postinc0	equ	0xFEE
  2617                           wreg	equ	0xFE8
  2618                           indf2	equ	0xFDF
  2619                           postinc2	equ	0xFDE
  2620                           postdec2	equ	0xFDD
  2621                           fsr2h	equ	0xFDA
  2622                           fsr2l	equ	0xFD9
  2623                           status	equ	0xFD8
  2624                           
  2625 ;; *************** function _PWM1 *****************
  2626 ;; Defined at:
  2627 ;;		line 5 in file "motors.c"
  2628 ;; Parameters:    Size  Location     Type
  2629 ;;  duty            2    0[COMRAM] int 
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;		None
  2632 ;; Return value:  Size  Location     Type
  2633 ;;                  1    wreg      void 
  2634 ;; Registers used:
  2635 ;;		wreg, status,2, status,0
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/0
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2641 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2643 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2644 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2645 ;;Total ram usage:        4 bytes
  2646 ;; Hardware stack levels used:    1
  2647 ;; This function calls:
  2648 ;;		Nothing
  2649 ;; This function is called by:
  2650 ;;		_main
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           	psect	text16
  2655  0016CC                     __ptext16:
  2656                           	opt stack 0
  2657  0016CC                     _PWM1:
  2658                           	opt stack 30
  2659                           
  2660                           ;motors.c: 13: CCP1CONbits.DC1B0 = duty & 1;
  2661                           
  2662                           ;incstack = 0
  2663  0016CC  C001  F003         	movff	PWM1@duty,??_PWM1
  2664  0016D0  0E01               	movlw	1
  2665  0016D2  1603               	andwf	??_PWM1,f,c
  2666  0016D4  3A03               	swapf	??_PWM1,f,c
  2667  0016D6  50BD               	movf	4029,w,c	;volatile
  2668  0016D8  1803               	xorwf	??_PWM1,w,c
  2669  0016DA  0BEF               	andlw	-17
  2670  0016DC  1803               	xorwf	??_PWM1,w,c
  2671  0016DE  6EBD               	movwf	4029,c	;volatile
  2672                           
  2673                           ;motors.c: 14: CCP1CONbits.DC1B1 = (duty >> 1) & 1;
  2674  0016E0  3402               	rlcf	PWM1@duty+1,w,c
  2675  0016E2  3002               	rrcf	PWM1@duty+1,w,c
  2676  0016E4  6E04               	movwf	(??_PWM1+1)& (0+255),c
  2677  0016E6  3001               	rrcf	PWM1@duty,w,c
  2678  0016E8  6E03               	movwf	??_PWM1& (0+255),c
  2679  0016EA  0E01               	movlw	1
  2680  0016EC  1603               	andwf	??_PWM1,f,c
  2681  0016EE  3A03               	swapf	??_PWM1,f,c
  2682  0016F0  4603               	rlncf	??_PWM1,f,c
  2683  0016F2  50BD               	movf	4029,w,c	;volatile
  2684  0016F4  1803               	xorwf	??_PWM1,w,c
  2685  0016F6  0BDF               	andlw	-33
  2686  0016F8  1803               	xorwf	??_PWM1,w,c
  2687  0016FA  6EBD               	movwf	4029,c	;volatile
  2688                           
  2689                           ;motors.c: 15: CCPR1L = (duty >> 2);
  2690  0016FC  C001  F003         	movff	PWM1@duty,??_PWM1
  2691  001700  C002  F004         	movff	PWM1@duty+1,??_PWM1+1
  2692  001704  3404               	rlcf	??_PWM1+1,w,c
  2693  001706  3204               	rrcf	??_PWM1+1,f,c
  2694  001708  3203               	rrcf	??_PWM1,f,c
  2695  00170A  3404               	rlcf	??_PWM1+1,w,c
  2696  00170C  3204               	rrcf	??_PWM1+1,f,c
  2697  00170E  3203               	rrcf	??_PWM1,f,c
  2698  001710  5003               	movf	??_PWM1,w,c
  2699  001712  6EBE               	movwf	4030,c	;volatile
  2700  001714  0012               	return		;funcret
  2701  001716                     __end_of_PWM1:
  2702                           	opt stack 0
  2703                           tblptru	equ	0xFF8
  2704                           tblptrh	equ	0xFF7
  2705                           tblptrl	equ	0xFF6
  2706                           tablat	equ	0xFF5
  2707                           prodh	equ	0xFF4
  2708                           prodl	equ	0xFF3
  2709                           intcon2	equ	0xFF1
  2710                           postinc0	equ	0xFEE
  2711                           wreg	equ	0xFE8
  2712                           indf2	equ	0xFDF
  2713                           postinc2	equ	0xFDE
  2714                           postdec2	equ	0xFDD
  2715                           fsr2h	equ	0xFDA
  2716                           fsr2l	equ	0xFD9
  2717                           status	equ	0xFD8
  2718                           
  2719 ;; *************** function _I2C_Master_Write *****************
  2720 ;; Defined at:
  2721 ;;		line 46 in file "I2C.c"
  2722 ;; Parameters:    Size  Location     Type
  2723 ;;  d               2    1[COMRAM] unsigned int 
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;		None
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  1    wreg      void 
  2728 ;; Registers used:
  2729 ;;		wreg, status,2, status,0, cstack
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2735 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2738 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2739 ;;Total ram usage:        2 bytes
  2740 ;; Hardware stack levels used:    1
  2741 ;; Hardware stack levels required when called:    1
  2742 ;; This function calls:
  2743 ;;		_I2C_Master_Wait
  2744 ;; This function is called by:
  2745 ;;		_main
  2746 ;;		_set_time
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           	psect	text17
  2751  001838                     __ptext17:
  2752                           	opt stack 0
  2753  001838                     _I2C_Master_Write:
  2754                           	opt stack 29
  2755                           
  2756                           ;I2C.c: 48: I2C_Master_Wait();
  2757                           
  2758                           ;incstack = 0
  2759  001838  EC02  F00C         	call	_I2C_Master_Wait	;wreg free
  2760                           
  2761                           ;I2C.c: 49: SSPBUF = d;
  2762  00183C  C002  FFC9         	movff	I2C_Master_Write@d,4041	;volatile
  2763  001840  0012               	return		;funcret
  2764  001842                     __end_of_I2C_Master_Write:
  2765                           	opt stack 0
  2766                           tblptru	equ	0xFF8
  2767                           tblptrh	equ	0xFF7
  2768                           tblptrl	equ	0xFF6
  2769                           tablat	equ	0xFF5
  2770                           prodh	equ	0xFF4
  2771                           prodl	equ	0xFF3
  2772                           intcon2	equ	0xFF1
  2773                           postinc0	equ	0xFEE
  2774                           wreg	equ	0xFE8
  2775                           indf2	equ	0xFDF
  2776                           postinc2	equ	0xFDE
  2777                           postdec2	equ	0xFDD
  2778                           fsr2h	equ	0xFDA
  2779                           fsr2l	equ	0xFD9
  2780                           status	equ	0xFD8
  2781                           
  2782 ;; *************** function _I2C_Master_Stop *****************
  2783 ;; Defined at:
  2784 ;;		line 40 in file "I2C.c"
  2785 ;; Parameters:    Size  Location     Type
  2786 ;;		None
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;		None
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  1    wreg      void 
  2791 ;; Registers used:
  2792 ;;		wreg, status,2, status,0, cstack
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2802 ;;Total ram usage:        0 bytes
  2803 ;; Hardware stack levels used:    1
  2804 ;; Hardware stack levels required when called:    1
  2805 ;; This function calls:
  2806 ;;		_I2C_Master_Wait
  2807 ;; This function is called by:
  2808 ;;		_main
  2809 ;;		_set_time
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           
  2813                           	psect	text18
  2814  001842                     __ptext18:
  2815                           	opt stack 0
  2816  001842                     _I2C_Master_Stop:
  2817                           	opt stack 29
  2818                           
  2819                           ;I2C.c: 42: I2C_Master_Wait();
  2820                           
  2821                           ;incstack = 0
  2822  001842  EC02  F00C         	call	_I2C_Master_Wait	;wreg free
  2823                           
  2824                           ;I2C.c: 43: PEN = 1;
  2825  001846  84C5               	bsf	4037,2,c	;volatile
  2826  001848  0012               	return		;funcret
  2827  00184A                     __end_of_I2C_Master_Stop:
  2828                           	opt stack 0
  2829                           tblptru	equ	0xFF8
  2830                           tblptrh	equ	0xFF7
  2831                           tblptrl	equ	0xFF6
  2832                           tablat	equ	0xFF5
  2833                           prodh	equ	0xFF4
  2834                           prodl	equ	0xFF3
  2835                           intcon2	equ	0xFF1
  2836                           postinc0	equ	0xFEE
  2837                           wreg	equ	0xFE8
  2838                           indf2	equ	0xFDF
  2839                           postinc2	equ	0xFDE
  2840                           postdec2	equ	0xFDD
  2841                           fsr2h	equ	0xFDA
  2842                           fsr2l	equ	0xFD9
  2843                           status	equ	0xFD8
  2844                           
  2845 ;; *************** function _I2C_Master_Start *****************
  2846 ;; Defined at:
  2847 ;;		line 28 in file "I2C.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;		None
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;		None
  2852 ;; Return value:  Size  Location     Type
  2853 ;;                  2   12[None  ] int 
  2854 ;; Registers used:
  2855 ;;		wreg, status,2, status,0, cstack
  2856 ;; Tracked objects:
  2857 ;;		On entry : 0/0
  2858 ;;		On exit  : 0/0
  2859 ;;		Unchanged: 0/0
  2860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2865 ;;Total ram usage:        0 bytes
  2866 ;; Hardware stack levels used:    1
  2867 ;; Hardware stack levels required when called:    1
  2868 ;; This function calls:
  2869 ;;		_I2C_Master_Wait
  2870 ;; This function is called by:
  2871 ;;		_main
  2872 ;;		_set_time
  2873 ;; This function uses a non-reentrant model
  2874 ;;
  2875                           
  2876                           	psect	text19
  2877  00184A                     __ptext19:
  2878                           	opt stack 0
  2879  00184A                     _I2C_Master_Start:
  2880                           	opt stack 29
  2881                           
  2882                           ;I2C.c: 30: I2C_Master_Wait();
  2883                           
  2884                           ;incstack = 0
  2885  00184A  EC02  F00C         	call	_I2C_Master_Wait	;wreg free
  2886                           
  2887                           ;I2C.c: 31: SEN = 1;
  2888  00184E  80C5               	bsf	4037,0,c	;volatile
  2889  001850  0012               	return		;funcret
  2890  001852                     __end_of_I2C_Master_Start:
  2891                           	opt stack 0
  2892                           tblptru	equ	0xFF8
  2893                           tblptrh	equ	0xFF7
  2894                           tblptrl	equ	0xFF6
  2895                           tablat	equ	0xFF5
  2896                           prodh	equ	0xFF4
  2897                           prodl	equ	0xFF3
  2898                           intcon2	equ	0xFF1
  2899                           postinc0	equ	0xFEE
  2900                           wreg	equ	0xFE8
  2901                           indf2	equ	0xFDF
  2902                           postinc2	equ	0xFDE
  2903                           postdec2	equ	0xFDD
  2904                           fsr2h	equ	0xFDA
  2905                           fsr2l	equ	0xFD9
  2906                           status	equ	0xFD8
  2907                           
  2908 ;; *************** function _I2C_Master_Read *****************
  2909 ;; Defined at:
  2910 ;;		line 52 in file "I2C.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;  a               1    wreg     unsigned char 
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;  a               1    1[COMRAM] unsigned char 
  2915 ;;  temp            1    2[COMRAM] unsigned char 
  2916 ;; Return value:  Size  Location     Type
  2917 ;;                  1    wreg      unsigned char 
  2918 ;; Registers used:
  2919 ;;		wreg, status,2, status,0, cstack
  2920 ;; Tracked objects:
  2921 ;;		On entry : 0/0
  2922 ;;		On exit  : 0/0
  2923 ;;		Unchanged: 0/0
  2924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2926 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2928 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2929 ;;Total ram usage:        2 bytes
  2930 ;; Hardware stack levels used:    1
  2931 ;; Hardware stack levels required when called:    1
  2932 ;; This function calls:
  2933 ;;		_I2C_Master_Wait
  2934 ;; This function is called by:
  2935 ;;		_main
  2936 ;; This function uses a non-reentrant model
  2937 ;;
  2938                           
  2939                           	psect	text20
  2940  001782                     __ptext20:
  2941                           	opt stack 0
  2942  001782                     _I2C_Master_Read:
  2943                           	opt stack 29
  2944                           
  2945                           ;incstack = 0
  2946                           ;I2C_Master_Read@a stored from wreg
  2947  001782  6E02               	movwf	I2C_Master_Read@a,c
  2948                           
  2949                           ;I2C.c: 54: unsigned char temp;
  2950                           ;I2C.c: 55: I2C_Master_Wait();
  2951  001784  EC02  F00C         	call	_I2C_Master_Wait	;wreg free
  2952                           
  2953                           ;I2C.c: 56: RCEN = 1;
  2954  001788  86C5               	bsf	4037,3,c	;volatile
  2955                           
  2956                           ;I2C.c: 57: I2C_Master_Wait();
  2957  00178A  EC02  F00C         	call	_I2C_Master_Wait	;wreg free
  2958                           
  2959                           ;I2C.c: 58: temp = SSPBUF;
  2960  00178E  CFC9 F003          	movff	4041,I2C_Master_Read@temp	;volatile
  2961                           
  2962                           ;I2C.c: 59: I2C_Master_Wait();
  2963  001792  EC02  F00C         	call	_I2C_Master_Wait	;wreg free
  2964                           
  2965                           ;I2C.c: 60: ACKDT = (a)?0:1;
  2966  001796  5002               	movf	I2C_Master_Read@a,w,c
  2967  001798  A4D8               	btfss	status,2,c
  2968  00179A  D002               	goto	u300
  2969  00179C  8AC5               	bsf	4037,5,c	;volatile
  2970  00179E  D001               	goto	l1168
  2971  0017A0                     u300:
  2972  0017A0  9AC5               	bcf	4037,5,c	;volatile
  2973  0017A2                     l1168:
  2974                           
  2975                           ;I2C.c: 61: ACKEN = 1;
  2976  0017A2  88C5               	bsf	4037,4,c	;volatile
  2977                           
  2978                           ;I2C.c: 62: return temp;
  2979  0017A4  5003               	movf	I2C_Master_Read@temp,w,c
  2980  0017A6  0012               	return	
  2981  0017A8                     __end_of_I2C_Master_Read:
  2982                           	opt stack 0
  2983                           tblptru	equ	0xFF8
  2984                           tblptrh	equ	0xFF7
  2985                           tblptrl	equ	0xFF6
  2986                           tablat	equ	0xFF5
  2987                           prodh	equ	0xFF4
  2988                           prodl	equ	0xFF3
  2989                           intcon2	equ	0xFF1
  2990                           postinc0	equ	0xFEE
  2991                           wreg	equ	0xFE8
  2992                           indf2	equ	0xFDF
  2993                           postinc2	equ	0xFDE
  2994                           postdec2	equ	0xFDD
  2995                           fsr2h	equ	0xFDA
  2996                           fsr2l	equ	0xFD9
  2997                           status	equ	0xFD8
  2998                           
  2999 ;; *************** function _I2C_Master_Wait *****************
  3000 ;; Defined at:
  3001 ;;		line 23 in file "I2C.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;		None
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;		None
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  1    wreg      void 
  3008 ;; Registers used:
  3009 ;;		wreg, status,2, status,0
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3017 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3018 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3019 ;;Total ram usage:        1 bytes
  3020 ;; Hardware stack levels used:    1
  3021 ;; This function calls:
  3022 ;;		Nothing
  3023 ;; This function is called by:
  3024 ;;		_I2C_Master_Start
  3025 ;;		_I2C_Master_Stop
  3026 ;;		_I2C_Master_Write
  3027 ;;		_I2C_Master_Read
  3028 ;;		_I2C_Master_RepeatedStart
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           	psect	text21
  3033  001804                     __ptext21:
  3034                           	opt stack 0
  3035  001804                     _I2C_Master_Wait:
  3036                           	opt stack 29
  3037  001804                     l213:
  3038  001804  B4C7               	btfsc	4039,2,c	;volatile
  3039  001806  D7FE               	goto	l213
  3040  001808  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
  3041  00180C  0E1F               	movlw	31
  3042  00180E  1601               	andwf	??_I2C_Master_Wait,f,c
  3043  001810  B4D8               	btfsc	status,2,c
  3044  001812  0012               	return	
  3045  001814  D7F7               	goto	l213
  3046  001816                     __end_of_I2C_Master_Wait:
  3047                           	opt stack 0
  3048                           tblptru	equ	0xFF8
  3049                           tblptrh	equ	0xFF7
  3050                           tblptrl	equ	0xFF6
  3051                           tablat	equ	0xFF5
  3052                           prodh	equ	0xFF4
  3053                           prodl	equ	0xFF3
  3054                           intcon2	equ	0xFF1
  3055                           postinc0	equ	0xFEE
  3056                           wreg	equ	0xFE8
  3057                           indf2	equ	0xFDF
  3058                           postinc2	equ	0xFDE
  3059                           postdec2	equ	0xFDD
  3060                           fsr2h	equ	0xFDA
  3061                           fsr2l	equ	0xFD9
  3062                           status	equ	0xFD8
  3063                           tblptru	equ	0xFF8
  3064                           tblptrh	equ	0xFF7
  3065                           tblptrl	equ	0xFF6
  3066                           tablat	equ	0xFF5
  3067                           prodh	equ	0xFF4
  3068                           prodl	equ	0xFF3
  3069                           intcon2	equ	0xFF1
  3070                           postinc0	equ	0xFEE
  3071                           wreg	equ	0xFE8
  3072                           indf2	equ	0xFDF
  3073                           postinc2	equ	0xFDE
  3074                           postdec2	equ	0xFDD
  3075                           fsr2h	equ	0xFDA
  3076                           fsr2l	equ	0xFD9
  3077                           status	equ	0xFD8
  3078                           
  3079                           	psect	rparam
  3080  0000                     tblptru	equ	0xFF8
  3081                           tblptrh	equ	0xFF7
  3082                           tblptrl	equ	0xFF6
  3083                           tablat	equ	0xFF5
  3084                           prodh	equ	0xFF4
  3085                           prodl	equ	0xFF3
  3086                           intcon2	equ	0xFF1
  3087                           postinc0	equ	0xFEE
  3088                           wreg	equ	0xFE8
  3089                           indf2	equ	0xFDF
  3090                           postinc2	equ	0xFDE
  3091                           postdec2	equ	0xFDD
  3092                           fsr2h	equ	0xFDA
  3093                           fsr2l	equ	0xFD9
  3094                           status	equ	0xFD8


Data Sizes:
    Strings     156
    Constant    32
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     35      43
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_12(CODE[15]), STR_11(CODE[16]), STR_10(CODE[15]), STR_9(CODE[16]), 
		 -> STR_8(CODE[14]), STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[16]), 
		 -> STR_4(CODE[8]), STR_3(CODE[15]), STR_2(CODE[8]), STR_1(CODE[16]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _initialize->_I2C_Master_Init
    _initLCD->_lcdInst
    _I2C_Master_Init->___lldiv
    _homescreen->_printf
    _printf->___lwdiv
    _putch->_lcdNibble
    _lcdInst->_lcdNibble
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    5584
                                             29 COMRAM     6     6      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                               _PWM1
                            _PWM1off
                         _homescreen
                         _initialize
                           _keycheck
                       _keyinterrupt
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _keyinterrupt                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _keycheck                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0     466
                    _I2C_Master_Init
                            _initLCD
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              1     1      0      90
                                              3 COMRAM     1     1      0
                            _lcdInst
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     376
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     290
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _homescreen                                           0     0      0    2229
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              31    23      8    2139
                                              7 COMRAM    22    14      8
                            ___lwdiv
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      90
                                              2 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _lcdInst                                              1     1      0      90
                                              2 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) _lcdNibble                                            2     2      0      75
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _PWM1off                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1                                                 4     2      2     130
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     406
                                              1 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      2     2      0      30
                                              1 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _PWM1
   _PWM1off
   _homescreen
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___wmul
       _isdigit
       _putch
         _lcdNibble
   _initialize
     _I2C_Master_Init
       ___lldiv
     _initLCD
       _lcdInst
         _lcdNibble
   _keycheck
   _keyinterrupt
   _lcdInst
     _lcdNibble
   _printf
     ___lwdiv
     ___wmul
     _isdigit
     _putch
       _lcdNibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     23      2B       1       33.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2B      34        0.0%
DATA                 0      0      2B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Feb 28 14:33:11 2017

      ___wmul@multiplicand 0003                __CFG_BORV$3 000000               __CFG_CP0$OFF 000000  
             __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000  
              __CFG_OSC$HS 000000                        l104 17F0                        l113 17EC  
                      l114 17E8                        l107 17FC                        l213 1804  
                      l291 1290                        l703 16C2                        l287 1240  
                      l650 14E0               __CFG_CPB$OFF 000000                        u300 17A0  
                      _PR2 000FCB                        _PEN 007E2A               __CFG_CPD$OFF 000000  
                      _SEN 007E28                        u807 13EE                        u817 1426  
                      u827 171C                        u685 15F8                        u837 1750  
                      u847 163C                        u857 1646                        u777 12CC  
                      u867 1668                        u787 136E                        u877 1672  
                      u797 13B6                        prod 000FF3                        wreg 000FE8  
             __CFG_LVP$OFF 000000               __CFG_WDT$OFF 000000                       l1400 169C  
                     l1420 10E6                       l1430 111A                       l1414 10C8  
                     l1168 17A2                       l1408 16B8                       l1440 1176  
                     l1424 10EC                       l1418 10D8                       l1460 11DE  
                     l1358 17BE                       l1374 1492                       l1614 13A4  
                     l1480 1246                       l1464 1202                       l1448 11B2  
                     l1376 149E                       l1474 1224                       l1466 120A  
                     l1386 14D2                       l1378 14A2                       l1562 12D6  
                     l1396 1690                       l1476 122C                       l1398 1698  
                     l1486 1298                       l1582 1316                       l1648 1454  
                     l1578 130E                       l1588 1332                       _ADFM 007E07  
                     STR_1 1032                       STR_2 10B5                       STR_3 1090  
                     STR_4 10AD                       STR_5 1042                       STR_6 1052  
                     STR_7 1062                       STR_8 109F                       STR_9 1062  
                     _LATA 000F89                       _LATB 000F8A                       _LATC 000F8B  
                     _LATD 000F8C                       _LATE 000F8D                       _RCEN 007E2B  
                     _PWM1 16CC                       _RSEN 007E29            __end_of_PWM1off 1838  
                     _main 12B2                       _keys 1001                       _time 0024  
                     fsr2h 000FDA                       indf2 000FDF                       fsr2l 000FD9  
              main@standby 0021                       prodh 000FF4                       prodl 000FF3  
                     start 0000              __CFG_IESO$OFF 000000              __CFG_MCLRE$ON 000000  
             ___param_bank 000000                      ?_PWM1 0001           ?_I2C_Master_Init 000E  
         ?_I2C_Master_Read 0001           ?_I2C_Master_Wait 0001           ?_I2C_Master_Stop 0001  
                    ?_main 0001                      _ACKEN 007E2C                      _ACKDT 007E2D  
                    _EEADR 000FA9                      STR_10 1081                      STR_11 1062  
                    STR_12 1072                      STR_13 1021            __end_of___lldiv 14F2  
                    _T2CON 000FCA            __end_of___lwdiv 16CC                      _PORTB 000F81  
                    _TRISA 000F92                      _TRISB 000F93                      _TRISC 000F94  
                    _TRISD 000F95                      _TRISE 000F96              __CFG_PWRT$OFF 000000  
            __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000  
            __CFG_WRT3$OFF 000000            __end_of_lcdInst 182E             __CFG_EBTR0$OFF 000000  
           __CFG_FCMEN$OFF 000000             __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000  
           __CFG_EBTR3$OFF 000000                      _nRBPU 007F8F              __CFG_WRTB$OFF 000000  
            __CFG_WRTC$OFF 000000              __CFG_WRTD$OFF 000000            __end_of_initLCD 175C  
           __CFG_EBTRB$OFF 000000            __end_of_isdigit 17C6                      _putch 1816  
                    main@j 0023                      main@s 001F                      tablat 000FF5  
                    status 000FD8             __CFG_PBADEN$ON 000000               __end_of_PWM1 1716  
          __initialization 17C6               __end_of_main 1470               __end_of_keys 1012  
                   ??_PWM1 0003                     ??_main 001E              __activetblptr 000002  
        ?_I2C_Master_Start 0001          ?_I2C_Master_Write 0002         ??_I2C_Master_Start 0002  
                   _ADCON0 000FC2                     _ADCON1 000FC1         ??_I2C_Master_Write 0004  
                ??_PWM1off 0001                     _EEADRH 000FAA                     _EEDATA 000FA8  
                   _CCPR1L 000FBE                     _EECON2 000FA7                     ?_putch 0001  
                   _CVRCON 000FB5                     _OSCCON 000FD3                     _SSPADD 000FC8  
                   _TRISC3 007CA3                     _TRISC4 007CA4                     _SSPBUF 000FC9  
           __CFG_XINST$OFF 000000                     ___wmul 175C             __CFG_STVREN$ON 000000  
                ??___lldiv 0009                  ??___lwdiv 0005           __end_of_keycheck 1804  
                   clear_0 17CC           __end_of_currtime 1021                  ??_lcdInst 0003  
                   _printf 10BE                  ??_initLCD 0004                  ??_isdigit 0001  
             __mediumconst 0000                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8              ?_keyinterrupt 0001                 __accesstop 0080  
  __end_of__initialization 17D2              ___rparam_used 000001             __pcstackCOMRAM 0001  
            __end_of_putch 1822         __size_of_lcdNibble 0056             ??_keyinterrupt 0001  
                  ??_putch 0003                    ?___wmul 0001                    _CCP1CON 000FBD  
                  ?_printf 0008                    _PWM1off 182E                    _SSPCON1 000FC6  
                  _SSPCON2 000FC5                    _SSPSTAT 000FC7                  ?_keycheck 0001  
        __end_of_lcdNibble 167A                    __Hparam 0000                    __Lparam 0000  
                  ___lldiv 1470            __size_of___wmul 0026                    ___lwdiv 167A  
                _CMCONbits 000FB4                 _homescreen 1568               __psmallconst 1000  
                  __pcinit 17C6                    __ramtop 1000                 _initialize 14F2  
                  _lcdInst 1822                    __ptext0 12B2                    __ptext1 17DC  
                  __ptext2 17F0                    __ptext3 14F2                    __ptext4 1716  
                  __ptext5 15CA                    __ptext6 1470                    __ptext7 1568  
                  __ptext8 10BE                    __ptext9 1816            __size_of_printf 01F4  
                  _initLCD 1716          __end_of_hexpowers 101A                    _isdigit 17A8  
 __size_of_I2C_Master_Init 005A   __size_of_I2C_Master_Read 0026   __size_of_I2C_Master_Wait 0012  
 __size_of_I2C_Master_Stop 0008       end_of_initialization 17D2                 ??_keycheck 0001  
            __Lmediumconst 0000  __size_of_I2C_Master_Start 0008  __size_of_I2C_Master_Write 000A  
          ___lldiv@divisor 0005            ___lldiv@counter 000D       __end_of_keyinterrupt 17F0  
                  printf@c 001D                    printf@f 0008           I2C_Master_Init@c 000E  
         I2C_Master_Read@a 0002                    postdec2 000FDD                    postinc0 000FEE  
                  postinc2 000FDE                  _PORTBbits 000F81                _CCP1CONbits 000FBD  
              printf@width 001B                ?_homescreen 0001             __end_of___wmul 1782  
              ?_initialize 0001             __end_of_printf 12B2        start_initialization 17C6  
        ??_I2C_Master_Init 0012          ??_I2C_Master_Read 0002          ??_I2C_Master_Wait 0001  
        ??_I2C_Master_Stop 0002                   ??___wmul 0005           __CFG_LPT1OSC$OFF 000000  
                 ??_printf 0010                __pbssCOMRAM 0024                   ?_PWM1off 0001  
      __size_of_homescreen 0062      __size_of_keyinterrupt 0014        __size_of_initialize 0076  
         _I2C_Master_Start 184A           _I2C_Master_Write 1838          __size_of_keycheck 0014  
         ___lwdiv@dividend 0001          __CFG_CCP2MX$PORTC 000000                  _lcdNibble 1624  
                 ?___lldiv 0001                   PWM1@duty 0001                   ?___lwdiv 0001  
                 ?_lcdInst 0001                   ?_initLCD 0001                __smallconst 1000  
                 ?_isdigit 0001               _keyinterrupt 17DC                  _hexpowers 1012  
         ___lwdiv@quotient 0005             __size_of_putch 000C             ___wmul@product 0005  
                 _LATDbits 000F8C                   _LATEbits 000F8D                   _PIR2bits 000FA1  
         __CFG_WDTPS$32768 000000                 ?_lcdNibble 0001                 _ADCON0bits 000FC2  
        ___wmul@multiplier 0001              lcdNibble@data 0002                 printf@flag 0017  
            lcdNibble@temp 0001                 printf@prec 001A        I2C_Master_Read@temp 0003  
         __size_of_PWM1off 000A                 _EECON1bits 000FA6                   __Hrparam 0000  
                 __Lrparam 0000         __CFG_BOREN$SBORDIS 000000               ??_homescreen 001E  
         __size_of___lldiv 0082           __size_of___lwdiv 0052               ??_initialize 0016  
              _isdigit$865 0002           __size_of_lcdInst 000C            _I2C_Master_Init 15CA  
          _I2C_Master_Read 1782           __size_of_initLCD 0046            _I2C_Master_Wait 1804  
          _I2C_Master_Stop 1842           __size_of_isdigit 001E            ___lwdiv@divisor 0003  
          ___lwdiv@counter 0007                   __ptext10 17A8                   __ptext11 175C  
                 __ptext20 1782                   __ptext12 167A                   __ptext21 1804  
                 __ptext13 1822                   __ptext14 1624                   __ptext15 182E  
                 __ptext16 16CC                   __ptext17 1838                   __ptext18 1842  
                 __ptext19 184A              __size_of_PWM1 004A         __end_of_homescreen 15CA  
                 _keycheck 17F0              __size_of_main 01BE                   _currtime 101A  
                 _keypress 002B         __end_of_initialize 1568                ??_lcdNibble 0001  
                printf@idx 0016                  printf@val 0018                  putch@data 0003  
 __end_of_I2C_Master_Start 1852                _OSCTUNEbits 000F9B   __end_of_I2C_Master_Write 1842  
                 isdigit@c 0003           ___lldiv@dividend 0001                   printf@ap 0014  
  __end_of_I2C_Master_Init 1624    __end_of_I2C_Master_Read 17A8    __end_of_I2C_Master_Wait 1816  
  __end_of_I2C_Master_Stop 184A                lcdInst@data 0003           ___lldiv@quotient 0009  
        I2C_Master_Write@d 0002  
