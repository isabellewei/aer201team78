

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Mar 01 02:30:33 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36  0000                     
    37                           ; Version 1.41
    38                           ; Generated 25/01/2017 GMT
    39                           ; 
    40                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F4620 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     
    72                           	psect	smallconst
    73  001000                     __psmallconst:
    74                           	opt stack 0
    75  001000  00                 	db	0
    76  001001                     _keys:
    77                           	opt stack 0
    78  001001  31                 	db	49
    79  001002  32                 	db	50
    80  001003  33                 	db	51
    81  001004  41                 	db	65
    82  001005  34                 	db	52
    83  001006  35                 	db	53
    84  001007  36                 	db	54
    85  001008  42                 	db	66
    86  001009  37                 	db	55
    87  00100A  38                 	db	56
    88  00100B  39                 	db	57
    89  00100C  43                 	db	67
    90  00100D  2A                 	db	42
    91  00100E  30                 	db	48
    92  00100F  23                 	db	35
    93  001010  44                 	db	68
    94  001011  00                 	db	0
    95  001012                     __end_of_keys:
    96                           	opt stack 0
    97  001012                     _hexpowers:
    98                           	opt stack 0
    99  001012  0001               	dw	1
   100  001014  0010               	dw	16
   101  001016  0100               	dw	256
   102  001018  1000               	dw	4096
   103  00101A                     __end_of_hexpowers:
   104                           	opt stack 0
   105  00101A                     _currtime:
   106                           	opt stack 0
   107  00101A  30                 	db	48
   108  00101B  11                 	db	17
   109  00101C  20                 	db	32
   110  00101D  03                 	db	3
   111  00101E  07                 	db	7
   112  00101F  02                 	db	2
   113  001020  17                 	db	23
   114  001021                     __end_of_currtime:
   115                           	opt stack 0
   116  0000                     _ADRESH	set	4036
   117  0000                     _PIR2bits	set	4001
   118  0000                     _EECON2	set	4007
   119  0000                     _EEDATA	set	4008
   120  0000                     _EECON1bits	set	4006
   121  0000                     _EEADR	set	4009
   122  0000                     _EEADRH	set	4010
   123  0000                     _CCP1CONbits	set	4029
   124  0000                     _SSPBUF	set	4041
   125  0000                     _SSPADD	set	4040
   126  0000                     _SSPCON2	set	4037
   127  0000                     _SSPCON1	set	4038
   128  0000                     _SSPSTAT	set	4039
   129  0000                     _CMCONbits	set	4020
   130  0000                     _CVRCON	set	4021
   131  0000                     _ADCON1	set	4033
   132  0000                     _LATEbits	set	3981
   133  0000                     _LATDbits	set	3980
   134  0000                     _LATE	set	3981
   135  0000                     _LATD	set	3980
   136  0000                     _LATC	set	3979
   137  0000                     _LATB	set	3978
   138  0000                     _LATA	set	3977
   139  0000                     _T2CON	set	4042
   140  0000                     _CCPR1L	set	4030
   141  0000                     _CCP1CON	set	4029
   142  0000                     _PR2	set	4043
   143  0000                     _TRISE	set	3990
   144  0000                     _TRISD	set	3989
   145  0000                     _TRISC	set	3988
   146  0000                     _TRISB	set	3987
   147  0000                     _TRISA	set	3986
   148  0000                     _OSCTUNEbits	set	3995
   149  0000                     _OSCCON	set	4051
   150  0000                     _PORTB	set	3969
   151  0000                     _PORTBbits	set	3969
   152  0000                     _ADCON0bits	set	4034
   153  0000                     _ADCON0	set	4034
   154  0000                     _ACKEN	set	32300
   155  0000                     _ACKDT	set	32301
   156  0000                     _RCEN	set	32299
   157  0000                     _PEN	set	32298
   158  0000                     _RSEN	set	32297
   159  0000                     _SEN	set	32296
   160  0000                     _TRISC4	set	31908
   161  0000                     _TRISC3	set	31907
   162  0000                     _ADFM	set	32263
   163  0000                     _nRBPU	set	32655
   164  001021                     STR_13:
   165  001021  30                 	db	48	;'0'
   166  001022  31                 	db	49	;'1'
   167  001023  32                 	db	50	;'2'
   168  001024  33                 	db	51	;'3'
   169  001025  34                 	db	52	;'4'
   170  001026  35                 	db	53	;'5'
   171  001027  36                 	db	54	;'6'
   172  001028  37                 	db	55	;'7'
   173  001029  38                 	db	56	;'8'
   174  00102A  39                 	db	57	;'9'
   175  00102B  61                 	db	97	;'a'
   176  00102C  62                 	db	98	;'b'
   177  00102D  63                 	db	99	;'c'
   178  00102E  64                 	db	100	;'d'
   179  00102F  65                 	db	101	;'e'
   180  001030  66                 	db	102	;'f'
   181  001031  00                 	db	0
   182  001032                     STR_3:
   183  001032  25                 	db	37
   184  001033  30                 	db	48	;'0'
   185  001034  32                 	db	50	;'2'
   186  001035  78                 	db	120	;'x'
   187  001036  2F                 	db	47
   188  001037  25                 	db	37
   189  001038  30                 	db	48	;'0'
   190  001039  32                 	db	50	;'2'
   191  00103A  78                 	db	120	;'x'
   192  00103B  2F                 	db	47
   193  00103C  25                 	db	37
   194  00103D  30                 	db	48	;'0'
   195  00103E  32                 	db	50	;'2'
   196  00103F  78                 	db	120	;'x'
   197  001040  20                 	db	32
   198  001041  00                 	db	0
   199  001042                     STR_7:
   200  001042  52                 	db	82	;'R'
   201  001043  75                 	db	117	;'u'
   202  001044  6E                 	db	110	;'n'
   203  001045  23                 	db	35
   204  001046  31                 	db	49	;'1'
   205  001047  20                 	db	32
   206  001048  20                 	db	32
   207  001049  20                 	db	32
   208  00104A  20                 	db	32
   209  00104B  41                 	db	65	;'A'
   210  00104C  3A                 	db	58	;':'
   211  00104D  4E                 	db	78	;'N'
   212  00104E  65                 	db	101	;'e'
   213  00104F  78                 	db	120	;'x'
   214  001050  74                 	db	116	;'t'
   215  001051  00                 	db	0
   216  001052                     STR_1:
   217  001052  53                 	db	83	;'S'
   218  001053  6F                 	db	111	;'o'
   219  001054  72                 	db	114	;'r'
   220  001055  74                 	db	116	;'t'
   221  001056  69                 	db	105	;'i'
   222  001057  6E                 	db	110	;'n'
   223  001058  67                 	db	103	;'g'
   224  001059  20                 	db	32
   225  00105A  63                 	db	99	;'c'
   226  00105B  61                 	db	97	;'a'
   227  00105C  6E                 	db	110	;'n'
   228  00105D  73                 	db	115	;'s'
   229  00105E  2E                 	db	46
   230  00105F  2E                 	db	46
   231  001060  2E                 	db	46
   232  001061  00                 	db	0
   233  001062                     STR_2:
   234  001062  41                 	db	65	;'A'
   235  001063  6E                 	db	110	;'n'
   236  001064  79                 	db	121	;'y'
   237  001065  20                 	db	32
   238  001066  6B                 	db	107	;'k'
   239  001067  65                 	db	101	;'e'
   240  001068  79                 	db	121	;'y'
   241  001069  20                 	db	32
   242  00106A  74                 	db	116	;'t'
   243  00106B  6F                 	db	111	;'o'
   244  00106C  20                 	db	32
   245  00106D  73                 	db	115	;'s'
   246  00106E  74                 	db	116	;'t'
   247  00106F  6F                 	db	111	;'o'
   248  001070  70                 	db	112	;'p'
   249  001071  00                 	db	0
   250  001072                     STR_12:
   251  001072  23                 	db	35
   252  001073  20                 	db	32
   253  001074  73                 	db	115	;'s'
   254  001075  6F                 	db	111	;'o'
   255  001076  75                 	db	117	;'u'
   256  001077  70                 	db	112	;'p'
   257  001078  20                 	db	32
   258  001079  63                 	db	99	;'c'
   259  00107A  61                 	db	97	;'a'
   260  00107B  6E                 	db	110	;'n'
   261  00107C  73                 	db	115	;'s'
   262  00107D  3A                 	db	58	;':'
   263  00107E  20                 	db	32
   264  00107F  34                 	db	52	;'4'
   265  001080  00                 	db	0
   266  001081                     STR_10:
   267  001081  23                 	db	35
   268  001082  20                 	db	32
   269  001083  73                 	db	115	;'s'
   270  001084  6F                 	db	111	;'o'
   271  001085  64                 	db	100	;'d'
   272  001086  61                 	db	97	;'a'
   273  001087  20                 	db	32
   274  001088  63                 	db	99	;'c'
   275  001089  61                 	db	97	;'a'
   276  00108A  6E                 	db	110	;'n'
   277  00108B  73                 	db	115	;'s'
   278  00108C  3A                 	db	58	;':'
   279  00108D  20                 	db	32
   280  00108E  36                 	db	54	;'6'
   281  00108F  00                 	db	0
   282  001090                     STR_5:
   283  001090  25                 	db	37
   284  001091  30                 	db	48	;'0'
   285  001092  32                 	db	50	;'2'
   286  001093  78                 	db	120	;'x'
   287  001094  3A                 	db	58	;':'
   288  001095  25                 	db	37
   289  001096  30                 	db	48	;'0'
   290  001097  32                 	db	50	;'2'
   291  001098  78                 	db	120	;'x'
   292  001099  3A                 	db	58	;':'
   293  00109A  25                 	db	37
   294  00109B  30                 	db	48	;'0'
   295  00109C  32                 	db	50	;'2'
   296  00109D  78                 	db	120	;'x'
   297  00109E  00                 	db	0
   298  00109F                     STR_8:
   299  00109F  23                 	db	35
   300  0010A0  20                 	db	32
   301  0010A1  6F                 	db	111	;'o'
   302  0010A2  66                 	db	102	;'f'
   303  0010A3  20                 	db	32
   304  0010A4  63                 	db	99	;'c'
   305  0010A5  61                 	db	97	;'a'
   306  0010A6  6E                 	db	110	;'n'
   307  0010A7  73                 	db	115	;'s'
   308  0010A8  3A                 	db	58	;':'
   309  0010A9  20                 	db	32
   310  0010AA  31                 	db	49	;'1'
   311  0010AB  30                 	db	48	;'0'
   312  0010AC  00                 	db	0
   313  0010AD                     STR_6:
   314  0010AD  20                 	db	32
   315  0010AE  32                 	db	50	;'2'
   316  0010AF  3A                 	db	58	;':'
   317  0010B0  4C                 	db	76	;'L'
   318  0010B1  6F                 	db	111	;'o'
   319  0010B2  67                 	db	103	;'g'
   320  0010B3  73                 	db	115	;'s'
   321  0010B4  00                 	db	0
   322  0010B5                     STR_4:
   323  0010B5  33                 	db	51	;'3'
   324  0010B6  3A                 	db	58	;':'
   325  0010B7  53                 	db	83	;'S'
   326  0010B8  74                 	db	116	;'t'
   327  0010B9  61                 	db	97	;'a'
   328  0010BA  72                 	db	114	;'r'
   329  0010BB  74                 	db	116	;'t'
   330  0010BC  00                 	db	0
   331  0000                     
   332                           ; #config settings
   333  0010BD  00                 	db	0	; dummy byte at the end
   334  0000                     
   335                           	psect	cinit
   336  00183E                     __pcinit:
   337                           	opt stack 0
   338  00183E                     start_initialization:
   339                           	opt stack 0
   340  00183E                     __initialization:
   341                           	opt stack 0
   342                           
   343                           ; Clear objects allocated to COMRAM (8 bytes)
   344  00183E  EE00  F029         	lfsr	0,__pbssCOMRAM
   345  001842  0E08               	movlw	8
   346  001844                     clear_0:
   347  001844  6AEE               	clrf	postinc0,c
   348  001846  06E8               	decf	wreg,f,c
   349  001848  E1FD               	bnz	clear_0
   350  00184A                     end_of_initialization:
   351                           	opt stack 0
   352  00184A                     __end_of__initialization:
   353                           	opt stack 0
   354  00184A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   355  00184C  6EF8               	movwf	tblptru,c
   356  00184E  0100               	movlb	0
   357  001850  EF59  F009         	goto	_main	;jump to C main() function
   358                           tblptru	equ	0xFF8
   359                           postinc0	equ	0xFEE
   360                           wreg	equ	0xFE8
   361                           
   362                           	psect	bssCOMRAM
   363  000029                     __pbssCOMRAM:
   364                           	opt stack 0
   365  000029                     _time:
   366                           	opt stack 0
   367  000029                     	ds	7
   368  000030                     _keypress:
   369                           	opt stack 0
   370  000030                     	ds	1
   371                           tblptru	equ	0xFF8
   372                           postinc0	equ	0xFEE
   373                           wreg	equ	0xFE8
   374                           
   375                           	psect	cstackCOMRAM
   376  000001                     __pcstackCOMRAM:
   377                           	opt stack 0
   378  000001                     ??_isdigit:
   379  000001                     ??_readADC:
   380  000001                     ??_I2C_Master_Wait:
   381  000001                     ?___wmul:
   382                           	opt stack 0
   383  000001                     ?___lwdiv:
   384                           	opt stack 0
   385  000001                     ?___lldiv:
   386                           	opt stack 0
   387  000001                     lcdNibble@temp:
   388                           	opt stack 0
   389  000001                     PWM1@duty:
   390                           	opt stack 0
   391  000001                     ___wmul@multiplier:
   392                           	opt stack 0
   393  000001                     ___lwdiv@dividend:
   394                           	opt stack 0
   395  000001                     ___lldiv@dividend:
   396                           	opt stack 0
   397                           
   398                           ; 4 bytes @ 0x0
   399  000001                     	ds	1
   400  000002                     readADC@channel:
   401                           	opt stack 0
   402  000002                     lcdNibble@data:
   403                           	opt stack 0
   404  000002                     I2C_Master_Read@a:
   405                           	opt stack 0
   406  000002                     _isdigit$882:
   407                           	opt stack 0
   408  000002                     I2C_Master_Write@d:
   409                           	opt stack 0
   410                           
   411                           ; 2 bytes @ 0x1
   412  000002                     	ds	1
   413  000003                     ??_PWM1:
   414  000003                     lcdInst@data:
   415                           	opt stack 0
   416  000003                     putch@data:
   417                           	opt stack 0
   418  000003                     I2C_Master_Read@temp:
   419                           	opt stack 0
   420  000003                     isdigit@c:
   421                           	opt stack 0
   422  000003                     ___wmul@multiplicand:
   423                           	opt stack 0
   424  000003                     ___lwdiv@divisor:
   425                           	opt stack 0
   426                           
   427                           ; 2 bytes @ 0x2
   428  000003                     	ds	1
   429  000004                     ??_initLCD:
   430  000004                     updateTime@j:
   431                           	opt stack 0
   432                           
   433                           ; 1 bytes @ 0x3
   434  000004                     	ds	1
   435  000005                     ___wmul@product:
   436                           	opt stack 0
   437  000005                     ___lwdiv@quotient:
   438                           	opt stack 0
   439  000005                     ___lldiv@divisor:
   440                           	opt stack 0
   441                           
   442                           ; 4 bytes @ 0x4
   443  000005                     	ds	2
   444  000007                     ___lwdiv@counter:
   445                           	opt stack 0
   446                           
   447                           ; 1 bytes @ 0x6
   448  000007                     	ds	1
   449  000008                     ?_printf:
   450                           	opt stack 0
   451  000008                     printf@f:
   452                           	opt stack 0
   453                           
   454                           ; 2 bytes @ 0x7
   455  000008                     	ds	1
   456  000009                     ___lldiv@quotient:
   457                           	opt stack 0
   458                           
   459                           ; 4 bytes @ 0x8
   460  000009                     	ds	4
   461  00000D                     ___lldiv@counter:
   462                           	opt stack 0
   463                           
   464                           ; 1 bytes @ 0xC
   465  00000D                     	ds	1
   466  00000E                     I2C_Master_Init@c:
   467                           	opt stack 0
   468                           
   469                           ; 4 bytes @ 0xD
   470  00000E                     	ds	2
   471  000010                     ??_printf:
   472                           
   473                           ; 1 bytes @ 0xF
   474  000010                     	ds	2
   475  000012                     ??_I2C_Master_Init:
   476                           
   477                           ; 1 bytes @ 0x11
   478  000012                     	ds	2
   479  000014                     printf@ap:
   480                           	opt stack 0
   481                           
   482                           ; 2 bytes @ 0x13
   483  000014                     	ds	2
   484  000016                     printf@idx:
   485                           	opt stack 0
   486                           
   487                           ; 1 bytes @ 0x15
   488  000016                     	ds	1
   489  000017                     printf@flag:
   490                           	opt stack 0
   491                           
   492                           ; 1 bytes @ 0x16
   493  000017                     	ds	1
   494  000018                     printf@val:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0x17
   498  000018                     	ds	2
   499  00001A                     printf@prec:
   500                           	opt stack 0
   501                           
   502                           ; 1 bytes @ 0x19
   503  00001A                     	ds	1
   504  00001B                     printf@width:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0x1A
   508  00001B                     	ds	2
   509  00001D                     printf@c:
   510                           	opt stack 0
   511                           
   512                           ; 1 bytes @ 0x1C
   513  00001D                     	ds	1
   514  00001E                     ??_displayLogs:
   515                           
   516                           ; 1 bytes @ 0x1D
   517  00001E                     	ds	1
   518  00001F                     ??_main:
   519                           
   520                           ; 1 bytes @ 0x1E
   521  00001F                     	ds	2
   522  000021                     main@s:
   523                           	opt stack 0
   524                           
   525                           ; 2 bytes @ 0x20
   526  000021                     	ds	2
   527  000023                     main@startTime:
   528                           	opt stack 0
   529                           
   530                           ; 2 bytes @ 0x22
   531  000023                     	ds	2
   532  000025                     main@dc:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0x24
   536  000025                     	ds	2
   537  000027                     main@standby:
   538                           	opt stack 0
   539                           
   540                           ; 2 bytes @ 0x26
   541  000027                     	ds	2
   542                           tblptru	equ	0xFF8
   543                           postinc0	equ	0xFEE
   544                           wreg	equ	0xFE8
   545                           
   546 ;;
   547 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   548 ;;
   549 ;; *************** function _main *****************
   550 ;; Defined at:
   551 ;;		line 90 in file "main.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;		None
   554 ;; Auto vars:     Size  Location     Type
   555 ;;  standby         2   38[COMRAM] int 
   556 ;;  dc              2   36[COMRAM] int 
   557 ;;  startTime       2   34[COMRAM] int 
   558 ;;  s               2   32[COMRAM] int 
   559 ;; Return value:  Size  Location     Type
   560 ;;                  2  109[None  ] int 
   561 ;; Registers used:
   562 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   569 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   570 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   571 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   572 ;;Total ram usage:       10 bytes
   573 ;; Hardware stack levels required when called:    4
   574 ;; This function calls:
   575 ;;		_PWM1
   576 ;;		_PWM1off
   577 ;;		___wmul
   578 ;;		_displayLogs
   579 ;;		_homescreen
   580 ;;		_initialize
   581 ;;		_keyinterrupt
   582 ;;		_lcdInst
   583 ;;		_printf
   584 ;;		_readADC
   585 ;;		_updateTime
   586 ;; This function is called by:
   587 ;;		Startup code after reset
   588 ;; This function uses a non-reentrant model
   589 ;;
   590                           
   591                           	psect	text0
   592  0012B2                     __ptext0:
   593                           	opt stack 0
   594  0012B2                     _main:
   595                           	opt stack 27
   596                           
   597                           ;main.c: 91: initialize();
   598                           
   599                           ;incstack = 0
   600  0012B2  EC71  F00A         	call	_initialize	;wreg free
   601                           
   602                           ;main.c: 92: int standby = 1;
   603  0012B6  0E00               	movlw	0
   604  0012B8  6E28               	movwf	main@standby+1,c
   605  0012BA  0E01               	movlw	1
   606  0012BC  6E27               	movwf	main@standby,c
   607                           
   608                           ;main.c: 93: int s = 0;
   609  0012BE  0E00               	movlw	0
   610  0012C0  6E22               	movwf	main@s+1,c
   611  0012C2  0E00               	movlw	0
   612  0012C4  6E21               	movwf	main@s,c
   613                           
   614                           ;main.c: 94: int dc = 0;
   615  0012C6  0E00               	movlw	0
   616  0012C8  6E26               	movwf	main@dc+1,c
   617  0012CA  0E00               	movlw	0
   618  0012CC  6E25               	movwf	main@dc,c
   619                           
   620                           ;main.c: 95: int startTime;
   621                           ;main.c: 96: _delay((unsigned long)((10)*(32000000/4000.0)));
   622  0012CE  0E68               	movlw	104
   623  0012D0  6E1F               	movwf	??_main& (0+255),c
   624  0012D2  0EE4               	movlw	228
   625  0012D4                     u817:
   626  0012D4  2EE8               	decfsz	wreg,f,c
   627  0012D6  D7FE               	bra	u817
   628  0012D8  2E1F               	decfsz	??_main& (0+255),f,c
   629  0012DA  D7FC               	bra	u817
   630  0012DC  D000               	nop2	
   631  0012DE                     l1657:
   632                           
   633                           ;main.c: 99: updateTime();
   634  0012DE  ECAC  F00A         	call	_updateTime	;wreg free
   635                           
   636                           ;main.c: 101: if (standby){
   637  0012E2  5027               	movf	main@standby,w,c
   638  0012E4  1028               	iorwf	main@standby+1,w,c
   639  0012E6  B4D8               	btfsc	status,2,c
   640  0012E8  D051               	goto	l1691
   641                           
   642                           ;main.c: 102: keypress = (0);
   643  0012EA  0E00               	movlw	0
   644  0012EC  6E30               	movwf	_keypress,c	;volatile
   645                           
   646                           ;main.c: 103: homescreen();
   647  0012EE  ECDF  F00A         	call	_homescreen	;wreg free
   648                           
   649                           ;main.c: 104: keyinterrupt();
   650  0012F2  EC2A  F00C         	call	_keyinterrupt	;wreg free
   651                           
   652                           ;main.c: 106: if(keypress == 2){
   653  0012F6  0E02               	movlw	2
   654  0012F8  1830               	xorwf	_keypress,w,c	;volatile
   655  0012FA  A4D8               	btfss	status,2,c
   656  0012FC  D041               	goto	l1687
   657                           
   658                           ;main.c: 107: standby = 0;
   659  0012FE  0E00               	movlw	0
   660  001300  6E28               	movwf	main@standby+1,c
   661  001302  0E00               	movlw	0
   662  001304  6E27               	movwf	main@standby,c
   663                           
   664                           ;main.c: 108: lcdInst(0b00000001); _delay((unsigned long)((10)*(32000000/4000.0)));;
   665  001306  0E01               	movlw	1
   666  001308  EC4D  F00C         	call	_lcdInst
   667  00130C  0E68               	movlw	104
   668  00130E  6E1F               	movwf	??_main& (0+255),c
   669  001310  0EE4               	movlw	228
   670  001312                     u827:
   671  001312  2EE8               	decfsz	wreg,f,c
   672  001314  D7FE               	bra	u827
   673  001316  2E1F               	decfsz	??_main& (0+255),f,c
   674  001318  D7FC               	bra	u827
   675  00131A  D000               	nop2	
   676                           
   677                           ;main.c: 109: printf("Sorting cans...");
   678  00131C  0E52               	movlw	low STR_1
   679  00131E  6E08               	movwf	printf@f,c
   680  001320  0E10               	movlw	high STR_1
   681  001322  6E09               	movwf	printf@f+1,c
   682  001324  EC5F  F008         	call	_printf	;wreg free
   683                           
   684                           ;main.c: 110: lcdInst(0b11000000);;
   685  001328  0EC0               	movlw	192
   686  00132A  EC4D  F00C         	call	_lcdInst
   687                           
   688                           ;main.c: 111: printf("Any key to stop");
   689  00132E  0E62               	movlw	low STR_2
   690  001330  6E08               	movwf	printf@f,c
   691  001332  0E10               	movlw	high STR_2
   692  001334  6E09               	movwf	printf@f+1,c
   693  001336  EC5F  F008         	call	_printf	;wreg free
   694                           
   695                           ;main.c: 112: PWM1(100);
   696  00133A  0E00               	movlw	0
   697  00133C  6E02               	movwf	PWM1@duty+1,c
   698  00133E  0E64               	movlw	100
   699  001340  6E01               	movwf	PWM1@duty,c
   700  001342  EC91  F00B         	call	_PWM1	;wreg free
   701                           
   702                           ;main.c: 113: dc = 1;
   703  001346  0E00               	movlw	0
   704  001348  6E26               	movwf	main@dc+1,c
   705  00134A  0E01               	movlw	1
   706  00134C  6E25               	movwf	main@dc,c
   707                           
   708                           ;main.c: 114: startTime = time[0] + 60*time[1] + 3600*time[2];
   709  00134E  C02B  F001         	movff	_time+2,___wmul@multiplier
   710  001352  6A02               	clrf	___wmul@multiplier+1,c
   711  001354  0E0E               	movlw	14
   712  001356  6E04               	movwf	___wmul@multiplicand+1,c
   713  001358  0E10               	movlw	16
   714  00135A  6E03               	movwf	___wmul@multiplicand,c
   715  00135C  ECEC  F00B         	call	___wmul	;wreg free
   716  001360  502A               	movf	_time+1,w,c
   717  001362  0D3C               	mullw	60
   718  001364  5029               	movf	_time,w,c
   719  001366  6E1F               	movwf	??_main& (0+255),c
   720  001368  6A20               	clrf	(??_main+1)& (0+255),c
   721  00136A  50F3               	movf	prodl,w,c
   722  00136C  261F               	addwf	??_main,f,c
   723  00136E  50F4               	movf	prodh,w,c
   724  001370  2220               	addwfc	??_main+1,f,c
   725  001372  5001               	movf	?___wmul,w,c
   726  001374  241F               	addwf	??_main,w,c
   727  001376  6E23               	movwf	main@startTime,c
   728  001378  5002               	movf	?___wmul+1,w,c
   729  00137A  2020               	addwfc	??_main+1,w,c
   730  00137C  6E24               	movwf	main@startTime+1,c
   731                           
   732                           ;main.c: 115: }
   733  00137E  D7AF               	goto	l1657
   734  001380                     l1687:
   735                           
   736                           ;main.c: 116: else if(keypress == 1){
   737  001380  0430               	decf	_keypress,w,c	;volatile
   738  001382  A4D8               	btfss	status,2,c
   739  001384  D7AC               	goto	l1657
   740                           
   741                           ;main.c: 117: displayLogs();
   742  001386  ECDB  F009         	call	_displayLogs	;wreg free
   743                           
   744                           ;main.c: 118: }
   745                           ;main.c: 120: }
   746  00138A  D7A9               	goto	l1657
   747  00138C                     l1691:
   748                           
   749                           ;main.c: 121: else{
   750                           ;main.c: 122: keypress = (0);
   751  00138C  0E00               	movlw	0
   752  00138E  6E30               	movwf	_keypress,c	;volatile
   753                           
   754                           ;main.c: 123: keyinterrupt();
   755  001390  EC2A  F00C         	call	_keyinterrupt	;wreg free
   756                           
   757                           ;main.c: 124: if (keypress != (0)) {
   758  001394  5030               	movf	_keypress,w,c	;volatile
   759  001396  B4D8               	btfsc	status,2,c
   760  001398  D00A               	goto	l1703
   761                           
   762                           ;main.c: 125: standby = 1;
   763  00139A  0E00               	movlw	0
   764  00139C  6E28               	movwf	main@standby+1,c
   765  00139E  0E01               	movlw	1
   766  0013A0  6E27               	movwf	main@standby,c
   767                           
   768                           ;main.c: 126: PWM1off();
   769  0013A2  EC58  F00C         	call	_PWM1off	;wreg free
   770                           
   771                           ;main.c: 127: dc = 0;
   772  0013A6  0E00               	movlw	0
   773  0013A8  6E26               	movwf	main@dc+1,c
   774  0013AA  0E00               	movlw	0
   775  0013AC  6E25               	movwf	main@dc,c
   776  0013AE                     l1703:
   777                           
   778                           ;main.c: 128: }
   779                           ;main.c: 130: readADC(2);
   780  0013AE  0E02               	movlw	2
   781  0013B0  ECFF  F00B         	call	_readADC
   782  0013B4  D794               	goto	l1657
   783  0013B6                     __end_of_main:
   784                           	opt stack 0
   785                           tblptru	equ	0xFF8
   786                           prodh	equ	0xFF4
   787                           prodl	equ	0xFF3
   788                           postinc0	equ	0xFEE
   789                           wreg	equ	0xFE8
   790                           status	equ	0xFD8
   791                           
   792 ;; *************** function _updateTime *****************
   793 ;; Defined at:
   794 ;;		line 89 in file "I2C.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;		None
   797 ;; Auto vars:     Size  Location     Type
   798 ;;  j               1    3[COMRAM] unsigned char 
   799 ;; Return value:  Size  Location     Type
   800 ;;                  1    wreg      void 
   801 ;; Registers used:
   802 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   803 ;; Tracked objects:
   804 ;;		On entry : 0/0
   805 ;;		On exit  : 0/0
   806 ;;		Unchanged: 0/0
   807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   809 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   811 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   812 ;;Total ram usage:        1 bytes
   813 ;; Hardware stack levels used:    1
   814 ;; Hardware stack levels required when called:    2
   815 ;; This function calls:
   816 ;;		_I2C_Master_Read
   817 ;;		_I2C_Master_Start
   818 ;;		_I2C_Master_Stop
   819 ;;		_I2C_Master_Write
   820 ;; This function is called by:
   821 ;;		_main
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           
   825                           	psect	text1
   826  001558                     __ptext1:
   827                           	opt stack 0
   828  001558                     _updateTime:
   829                           	opt stack 28
   830                           
   831                           ;I2C.c: 91: I2C_Master_Start();
   832                           
   833                           ;incstack = 0
   834  001558  EC61  F00C         	call	_I2C_Master_Start	;wreg free
   835                           
   836                           ;I2C.c: 92: I2C_Master_Write(0b11010000);
   837  00155C  0E00               	movlw	0
   838  00155E  6E03               	movwf	I2C_Master_Write@d+1,c
   839  001560  0ED0               	movlw	208
   840  001562  6E02               	movwf	I2C_Master_Write@d,c
   841  001564  EC53  F00C         	call	_I2C_Master_Write	;wreg free
   842                           
   843                           ;I2C.c: 93: I2C_Master_Write(0x00);
   844  001568  0E00               	movlw	0
   845  00156A  6E03               	movwf	I2C_Master_Write@d+1,c
   846  00156C  0E00               	movlw	0
   847  00156E  6E02               	movwf	I2C_Master_Write@d,c
   848  001570  EC53  F00C         	call	_I2C_Master_Write	;wreg free
   849                           
   850                           ;I2C.c: 94: I2C_Master_Stop();
   851  001574  EC5D  F00C         	call	_I2C_Master_Stop	;wreg free
   852                           
   853                           ;I2C.c: 97: I2C_Master_Start();
   854  001578  EC61  F00C         	call	_I2C_Master_Start	;wreg free
   855                           
   856                           ;I2C.c: 98: I2C_Master_Write(0b11010001);
   857  00157C  0E00               	movlw	0
   858  00157E  6E03               	movwf	I2C_Master_Write@d+1,c
   859  001580  0ED1               	movlw	209
   860  001582  6E02               	movwf	I2C_Master_Write@d,c
   861  001584  EC53  F00C         	call	_I2C_Master_Write	;wreg free
   862                           
   863                           ;I2C.c: 99: for(unsigned char j=0;j<0x06;j++){
   864  001588  0E00               	movlw	0
   865  00158A  6E04               	movwf	updateTime@j,c
   866  00158C                     l1591:
   867  00158C  0E05               	movlw	5
   868  00158E  6404               	cpfsgt	updateTime@j,c
   869  001590  D001               	goto	l1595
   870  001592  D00E               	goto	l1601
   871  001594                     l1595:
   872                           
   873                           ;I2C.c: 100: time[j] = I2C_Master_Read(1);
   874  001594  5004               	movf	updateTime@j,w,c
   875  001596  0D01               	mullw	1
   876  001598  0E29               	movlw	low _time
   877  00159A  24F3               	addwf	prodl,w,c
   878  00159C  6ED9               	movwf	fsr2l,c
   879  00159E  0E00               	movlw	high _time
   880  0015A0  20F4               	addwfc	prodh,w,c
   881  0015A2  6EDA               	movwf	fsr2h,c
   882  0015A4  0E01               	movlw	1
   883  0015A6  ECD9  F00B         	call	_I2C_Master_Read
   884  0015AA  6EDF               	movwf	indf2,c
   885  0015AC  2A04               	incf	updateTime@j,f,c
   886  0015AE  D7EE               	goto	l1591
   887  0015B0                     l1601:
   888                           
   889                           ;I2C.c: 101: }
   890                           ;I2C.c: 102: time[6] = I2C_Master_Read(0);
   891  0015B0  0E00               	movlw	0
   892  0015B2  ECD9  F00B         	call	_I2C_Master_Read
   893  0015B6  6E2F               	movwf	_time+6,c
   894                           
   895                           ;I2C.c: 103: I2C_Master_Stop();
   896  0015B8  EC5D  F00C         	call	_I2C_Master_Stop	;wreg free
   897  0015BC  0012               	return		;funcret
   898  0015BE                     __end_of_updateTime:
   899                           	opt stack 0
   900                           tblptru	equ	0xFF8
   901                           prodh	equ	0xFF4
   902                           prodl	equ	0xFF3
   903                           postinc0	equ	0xFEE
   904                           wreg	equ	0xFE8
   905                           indf2	equ	0xFDF
   906                           fsr2h	equ	0xFDA
   907                           fsr2l	equ	0xFD9
   908                           status	equ	0xFD8
   909                           
   910 ;; *************** function _I2C_Master_Write *****************
   911 ;; Defined at:
   912 ;;		line 54 in file "I2C.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;  d               2    1[COMRAM] unsigned int 
   915 ;; Auto vars:     Size  Location     Type
   916 ;;		None
   917 ;; Return value:  Size  Location     Type
   918 ;;                  1    wreg      void 
   919 ;; Registers used:
   920 ;;		wreg, status,2, status,0, cstack
   921 ;; Tracked objects:
   922 ;;		On entry : 0/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   926 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   929 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   930 ;;Total ram usage:        2 bytes
   931 ;; Hardware stack levels used:    1
   932 ;; Hardware stack levels required when called:    1
   933 ;; This function calls:
   934 ;;		_I2C_Master_Wait
   935 ;; This function is called by:
   936 ;;		_updateTime
   937 ;;		_set_time
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           
   941                           	psect	text2
   942  0018A6                     __ptext2:
   943                           	opt stack 0
   944  0018A6                     _I2C_Master_Write:
   945                           	opt stack 28
   946                           
   947                           ;I2C.c: 56: I2C_Master_Wait();
   948                           
   949                           ;incstack = 0
   950  0018A6  EC3E  F00C         	call	_I2C_Master_Wait	;wreg free
   951                           
   952                           ;I2C.c: 57: SSPBUF = d;
   953  0018AA  C002  FFC9         	movff	I2C_Master_Write@d,4041	;volatile
   954  0018AE  0012               	return		;funcret
   955  0018B0                     __end_of_I2C_Master_Write:
   956                           	opt stack 0
   957                           tblptru	equ	0xFF8
   958                           prodh	equ	0xFF4
   959                           prodl	equ	0xFF3
   960                           postinc0	equ	0xFEE
   961                           wreg	equ	0xFE8
   962                           indf2	equ	0xFDF
   963                           fsr2h	equ	0xFDA
   964                           fsr2l	equ	0xFD9
   965                           status	equ	0xFD8
   966                           
   967 ;; *************** function _I2C_Master_Stop *****************
   968 ;; Defined at:
   969 ;;		line 48 in file "I2C.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;		None
   972 ;; Auto vars:     Size  Location     Type
   973 ;;		None
   974 ;; Return value:  Size  Location     Type
   975 ;;                  1    wreg      void 
   976 ;; Registers used:
   977 ;;		wreg, status,2, status,0, cstack
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   987 ;;Total ram usage:        0 bytes
   988 ;; Hardware stack levels used:    1
   989 ;; Hardware stack levels required when called:    1
   990 ;; This function calls:
   991 ;;		_I2C_Master_Wait
   992 ;; This function is called by:
   993 ;;		_updateTime
   994 ;;		_set_time
   995 ;; This function uses a non-reentrant model
   996 ;;
   997                           
   998                           	psect	text3
   999  0018BA                     __ptext3:
  1000                           	opt stack 0
  1001  0018BA                     _I2C_Master_Stop:
  1002                           	opt stack 28
  1003                           
  1004                           ;I2C.c: 50: I2C_Master_Wait();
  1005                           
  1006                           ;incstack = 0
  1007  0018BA  EC3E  F00C         	call	_I2C_Master_Wait	;wreg free
  1008                           
  1009                           ;I2C.c: 51: PEN = 1;
  1010  0018BE  84C5               	bsf	4037,2,c	;volatile
  1011  0018C0  0012               	return		;funcret
  1012  0018C2                     __end_of_I2C_Master_Stop:
  1013                           	opt stack 0
  1014                           tblptru	equ	0xFF8
  1015                           prodh	equ	0xFF4
  1016                           prodl	equ	0xFF3
  1017                           postinc0	equ	0xFEE
  1018                           wreg	equ	0xFE8
  1019                           indf2	equ	0xFDF
  1020                           fsr2h	equ	0xFDA
  1021                           fsr2l	equ	0xFD9
  1022                           status	equ	0xFD8
  1023                           
  1024 ;; *************** function _I2C_Master_Start *****************
  1025 ;; Defined at:
  1026 ;;		line 36 in file "I2C.c"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;		None
  1029 ;; Auto vars:     Size  Location     Type
  1030 ;;		None
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  1    wreg      void 
  1033 ;; Registers used:
  1034 ;;		wreg, status,2, status,0, cstack
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1044 ;;Total ram usage:        0 bytes
  1045 ;; Hardware stack levels used:    1
  1046 ;; Hardware stack levels required when called:    1
  1047 ;; This function calls:
  1048 ;;		_I2C_Master_Wait
  1049 ;; This function is called by:
  1050 ;;		_updateTime
  1051 ;;		_set_time
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           
  1055                           	psect	text4
  1056  0018C2                     __ptext4:
  1057                           	opt stack 0
  1058  0018C2                     _I2C_Master_Start:
  1059                           	opt stack 28
  1060                           
  1061                           ;I2C.c: 38: I2C_Master_Wait();
  1062                           
  1063                           ;incstack = 0
  1064  0018C2  EC3E  F00C         	call	_I2C_Master_Wait	;wreg free
  1065                           
  1066                           ;I2C.c: 39: SEN = 1;
  1067  0018C6  80C5               	bsf	4037,0,c	;volatile
  1068  0018C8  0012               	return		;funcret
  1069  0018CA                     __end_of_I2C_Master_Start:
  1070                           	opt stack 0
  1071                           tblptru	equ	0xFF8
  1072                           prodh	equ	0xFF4
  1073                           prodl	equ	0xFF3
  1074                           postinc0	equ	0xFEE
  1075                           wreg	equ	0xFE8
  1076                           indf2	equ	0xFDF
  1077                           fsr2h	equ	0xFDA
  1078                           fsr2l	equ	0xFD9
  1079                           status	equ	0xFD8
  1080                           
  1081 ;; *************** function _I2C_Master_Read *****************
  1082 ;; Defined at:
  1083 ;;		line 60 in file "I2C.c"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;  a               1    wreg     unsigned char 
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;  a               1    1[COMRAM] unsigned char 
  1088 ;;  temp            1    2[COMRAM] unsigned char 
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  1    wreg      unsigned char 
  1091 ;; Registers used:
  1092 ;;		wreg, status,2, status,0, cstack
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1099 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1101 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1102 ;;Total ram usage:        2 bytes
  1103 ;; Hardware stack levels used:    1
  1104 ;; Hardware stack levels required when called:    1
  1105 ;; This function calls:
  1106 ;;		_I2C_Master_Wait
  1107 ;; This function is called by:
  1108 ;;		_updateTime
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           	psect	text5
  1113  0017B2                     __ptext5:
  1114                           	opt stack 0
  1115  0017B2                     _I2C_Master_Read:
  1116                           	opt stack 28
  1117                           
  1118                           ;incstack = 0
  1119                           ;I2C_Master_Read@a stored from wreg
  1120  0017B2  6E02               	movwf	I2C_Master_Read@a,c
  1121                           
  1122                           ;I2C.c: 62: unsigned char temp;
  1123                           ;I2C.c: 63: I2C_Master_Wait();
  1124  0017B4  EC3E  F00C         	call	_I2C_Master_Wait	;wreg free
  1125                           
  1126                           ;I2C.c: 64: RCEN = 1;
  1127  0017B8  86C5               	bsf	4037,3,c	;volatile
  1128                           
  1129                           ;I2C.c: 65: I2C_Master_Wait();
  1130  0017BA  EC3E  F00C         	call	_I2C_Master_Wait	;wreg free
  1131                           
  1132                           ;I2C.c: 66: temp = SSPBUF;
  1133  0017BE  CFC9 F003          	movff	4041,I2C_Master_Read@temp	;volatile
  1134                           
  1135                           ;I2C.c: 67: I2C_Master_Wait();
  1136  0017C2  EC3E  F00C         	call	_I2C_Master_Wait	;wreg free
  1137                           
  1138                           ;I2C.c: 68: ACKDT = (a)?0:1;
  1139  0017C6  5002               	movf	I2C_Master_Read@a,w,c
  1140  0017C8  A4D8               	btfss	status,2,c
  1141  0017CA  D002               	goto	u280
  1142  0017CC  8AC5               	bsf	4037,5,c	;volatile
  1143  0017CE  D001               	goto	l1161
  1144  0017D0                     u280:
  1145  0017D0  9AC5               	bcf	4037,5,c	;volatile
  1146  0017D2                     l1161:
  1147                           
  1148                           ;I2C.c: 69: ACKEN = 1;
  1149  0017D2  88C5               	bsf	4037,4,c	;volatile
  1150                           
  1151                           ;I2C.c: 70: return temp;
  1152  0017D4  5003               	movf	I2C_Master_Read@temp,w,c
  1153  0017D6  0012               	return	
  1154  0017D8                     __end_of_I2C_Master_Read:
  1155                           	opt stack 0
  1156                           tblptru	equ	0xFF8
  1157                           prodh	equ	0xFF4
  1158                           prodl	equ	0xFF3
  1159                           postinc0	equ	0xFEE
  1160                           wreg	equ	0xFE8
  1161                           indf2	equ	0xFDF
  1162                           fsr2h	equ	0xFDA
  1163                           fsr2l	equ	0xFD9
  1164                           status	equ	0xFD8
  1165                           
  1166 ;; *************** function _I2C_Master_Wait *****************
  1167 ;; Defined at:
  1168 ;;		line 31 in file "I2C.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;		None
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;		None
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      void 
  1175 ;; Registers used:
  1176 ;;		wreg, status,2, status,0
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1184 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1185 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1186 ;;Total ram usage:        1 bytes
  1187 ;; Hardware stack levels used:    1
  1188 ;; This function calls:
  1189 ;;		Nothing
  1190 ;; This function is called by:
  1191 ;;		_I2C_Master_Start
  1192 ;;		_I2C_Master_Stop
  1193 ;;		_I2C_Master_Write
  1194 ;;		_I2C_Master_Read
  1195 ;;		_I2C_Master_RepeatedStart
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           	psect	text6
  1200  00187C                     __ptext6:
  1201                           	opt stack 0
  1202  00187C                     _I2C_Master_Wait:
  1203                           	opt stack 28
  1204  00187C                     l179:
  1205  00187C  B4C7               	btfsc	4039,2,c	;volatile
  1206  00187E  D7FE               	goto	l179
  1207  001880  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
  1208  001884  0E1F               	movlw	31
  1209  001886  1601               	andwf	??_I2C_Master_Wait,f,c
  1210  001888  B4D8               	btfsc	status,2,c
  1211  00188A  0012               	return	
  1212  00188C  D7F7               	goto	l179
  1213  00188E                     __end_of_I2C_Master_Wait:
  1214                           	opt stack 0
  1215                           tblptru	equ	0xFF8
  1216                           prodh	equ	0xFF4
  1217                           prodl	equ	0xFF3
  1218                           postinc0	equ	0xFEE
  1219                           wreg	equ	0xFE8
  1220                           indf2	equ	0xFDF
  1221                           fsr2h	equ	0xFDA
  1222                           fsr2l	equ	0xFD9
  1223                           status	equ	0xFD8
  1224                           
  1225 ;; *************** function _readADC *****************
  1226 ;; Defined at:
  1227 ;;		line 16 in file "main.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;  channel         1    wreg     unsigned char 
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;  channel         1    1[COMRAM] unsigned char 
  1232 ;; Return value:  Size  Location     Type
  1233 ;;                  1    wreg      void 
  1234 ;; Registers used:
  1235 ;;		wreg, status,2, status,0, cstack
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1242 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1243 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1244 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1245 ;;Total ram usage:        2 bytes
  1246 ;; Hardware stack levels used:    1
  1247 ;; This function calls:
  1248 ;;		Nothing
  1249 ;; This function is called by:
  1250 ;;		_main
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253                           
  1254                           	psect	text7
  1255  0017FE                     __ptext7:
  1256                           	opt stack 0
  1257  0017FE                     _readADC:
  1258                           	opt stack 30
  1259                           
  1260                           ;incstack = 0
  1261                           ;readADC@channel stored from wreg
  1262  0017FE  6E02               	movwf	readADC@channel,c
  1263                           
  1264                           ;main.c: 18: ADCON0 = ((channel <<2));
  1265  001800  4402               	rlncf	readADC@channel,w,c
  1266  001802  46E8               	rlncf	wreg,f,c
  1267  001804  0BFC               	andlw	252
  1268  001806  6EC2               	movwf	4034,c	;volatile
  1269                           
  1270                           ;main.c: 19: ADCON0bits.GO = 1;
  1271  001808  82C2               	bsf	4034,1,c	;volatile
  1272                           
  1273                           ;main.c: 20: while(ADCON0bits.GO_NOT_DONE){_delay((unsigned long)((5)*(32000000/4000.0))
      +                          );}
  1274  00180A  D007               	goto	l1173
  1275  00180C                     l1171:
  1276  00180C  0E34               	movlw	52
  1277  00180E  6E01               	movwf	??_readADC& (0+255),c
  1278  001810  0EF2               	movlw	242
  1279  001812                     u837:
  1280  001812  2EE8               	decfsz	wreg,f,c
  1281  001814  D7FE               	bra	u837
  1282  001816  2E01               	decfsz	??_readADC& (0+255),f,c
  1283  001818  D7FC               	bra	u837
  1284  00181A                     l1173:
  1285  00181A  A2C2               	btfss	4034,1,c	;volatile
  1286  00181C  0012               	return	
  1287  00181E  D7F6               	goto	l1171
  1288  001820                     __end_of_readADC:
  1289                           	opt stack 0
  1290                           tblptru	equ	0xFF8
  1291                           prodh	equ	0xFF4
  1292                           prodl	equ	0xFF3
  1293                           postinc0	equ	0xFEE
  1294                           wreg	equ	0xFE8
  1295                           indf2	equ	0xFDF
  1296                           fsr2h	equ	0xFDA
  1297                           fsr2l	equ	0xFD9
  1298                           status	equ	0xFD8
  1299                           
  1300 ;; *************** function _keyinterrupt *****************
  1301 ;; Defined at:
  1302 ;;		line 38 in file "main.c"
  1303 ;; Parameters:    Size  Location     Type
  1304 ;;		None
  1305 ;; Auto vars:     Size  Location     Type
  1306 ;;		None
  1307 ;; Return value:  Size  Location     Type
  1308 ;;                  1    wreg      void 
  1309 ;; Registers used:
  1310 ;;		wreg, status,2, status,0
  1311 ;; Tracked objects:
  1312 ;;		On entry : 0/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1320 ;;Total ram usage:        0 bytes
  1321 ;; Hardware stack levels used:    1
  1322 ;; This function calls:
  1323 ;;		Nothing
  1324 ;; This function is called by:
  1325 ;;		_main
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           	psect	text8
  1330  001854                     __ptext8:
  1331                           	opt stack 0
  1332  001854                     _keyinterrupt:
  1333                           	opt stack 30
  1334                           
  1335                           ;main.c: 39: if(PORTBbits.RB1 == 1){
  1336                           
  1337                           ;incstack = 0
  1338  001854  A281               	btfss	3969,1,c	;volatile
  1339  001856  D006               	goto	l100
  1340                           
  1341                           ;main.c: 40: keypress = (PORTB & 0xF0)>>4;
  1342  001858  3881               	swapf	3969,w,c	;volatile
  1343  00185A  0B0F               	andlw	15
  1344  00185C  0B0F               	andlw	15
  1345  00185E  6E30               	movwf	_keypress,c	;volatile
  1346  001860                     l101:
  1347  001860  B281               	btfsc	3969,1,c	;volatile
  1348  001862  D7FE               	goto	l101
  1349  001864                     l100:
  1350                           
  1351                           ;main.c: 43: }
  1352                           ;main.c: 44: }
  1353                           ;main.c: 45: __nop();
  1354  001864  F000               	nop	
  1355  001866  0012               	return		;funcret
  1356  001868                     __end_of_keyinterrupt:
  1357                           	opt stack 0
  1358                           tblptru	equ	0xFF8
  1359                           prodh	equ	0xFF4
  1360                           prodl	equ	0xFF3
  1361                           postinc0	equ	0xFEE
  1362                           wreg	equ	0xFE8
  1363                           indf2	equ	0xFDF
  1364                           fsr2h	equ	0xFDA
  1365                           fsr2l	equ	0xFD9
  1366                           status	equ	0xFD8
  1367                           
  1368 ;; *************** function _initialize *****************
  1369 ;; Defined at:
  1370 ;;		line 48 in file "main.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;		None
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;		None
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  1    wreg      void 
  1377 ;; Registers used:
  1378 ;;		wreg, status,2, status,0, cstack
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1388 ;;Total ram usage:        0 bytes
  1389 ;; Hardware stack levels used:    1
  1390 ;; Hardware stack levels required when called:    3
  1391 ;; This function calls:
  1392 ;;		_I2C_Master_Init
  1393 ;;		_initLCD
  1394 ;; This function is called by:
  1395 ;;		_main
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           	psect	text9
  1400  0014E2                     __ptext9:
  1401                           	opt stack 0
  1402  0014E2                     _initialize:
  1403                           	opt stack 27
  1404                           
  1405                           ;main.c: 49: OSCCON = 0xF2;
  1406                           
  1407                           ;incstack = 0
  1408  0014E2  0EF2               	movlw	242
  1409  0014E4  6ED3               	movwf	4051,c	;volatile
  1410                           
  1411                           ;main.c: 50: OSCTUNEbits.PLLEN = 1;
  1412  0014E6  8C9B               	bsf	3995,6,c	;volatile
  1413                           
  1414                           ;main.c: 52: TRISA = 0x00;
  1415  0014E8  0E00               	movlw	0
  1416  0014EA  6E92               	movwf	3986,c	;volatile
  1417                           
  1418                           ;main.c: 53: TRISB = 0b11110010;
  1419  0014EC  0EF2               	movlw	242
  1420  0014EE  6E93               	movwf	3987,c	;volatile
  1421                           
  1422                           ;main.c: 54: TRISC = 0x00011100;
  1423  0014F0  0E00               	movlw	0
  1424  0014F2  6E94               	movwf	3988,c	;volatile
  1425                           
  1426                           ;main.c: 56: TRISD = 0x00;
  1427  0014F4  0E00               	movlw	0
  1428  0014F6  6E95               	movwf	3989,c	;volatile
  1429                           
  1430                           ;main.c: 57: TRISE = 0x00;
  1431  0014F8  0E00               	movlw	0
  1432  0014FA  6E96               	movwf	3990,c	;volatile
  1433                           
  1434                           ;main.c: 59: PR2 = 0xff;
  1435  0014FC  68CB               	setf	4043,c	;volatile
  1436                           
  1437                           ;main.c: 60: CCP1CON = 0b00001100;
  1438  0014FE  0E0C               	movlw	12
  1439  001500  6EBD               	movwf	4029,c	;volatile
  1440                           
  1441                           ;main.c: 61: CCPR1L = 0x00;
  1442  001502  0E00               	movlw	0
  1443  001504  6EBE               	movwf	4030,c	;volatile
  1444                           
  1445                           ;main.c: 62: T2CON = 0b00000101;
  1446  001506  0E05               	movlw	5
  1447  001508  6ECA               	movwf	4042,c	;volatile
  1448                           
  1449                           ;main.c: 64: LATA = 0b01010101;
  1450  00150A  0E55               	movlw	85
  1451  00150C  6E89               	movwf	3977,c	;volatile
  1452                           
  1453                           ;main.c: 65: LATB = 0b01010101;
  1454  00150E  0E55               	movlw	85
  1455  001510  6E8A               	movwf	3978,c	;volatile
  1456                           
  1457                           ;main.c: 66: LATC = 0b01010101;
  1458  001512  0E55               	movlw	85
  1459  001514  6E8B               	movwf	3979,c	;volatile
  1460                           
  1461                           ;main.c: 67: LATD = 0x00;
  1462  001516  0E00               	movlw	0
  1463  001518  6E8C               	movwf	3980,c	;volatile
  1464                           
  1465                           ;main.c: 68: LATE = 0x00;
  1466  00151A  0E00               	movlw	0
  1467  00151C  6E8D               	movwf	3981,c	;volatile
  1468                           
  1469                           ;main.c: 69: LATDbits.LATD0 = 1;
  1470  00151E  808C               	bsf	3980,0,c	;volatile
  1471                           
  1472                           ;main.c: 70: LATDbits.LATD1 = 0;
  1473  001520  928C               	bcf	3980,1,c	;volatile
  1474                           
  1475                           ;main.c: 71: LATEbits.LATE0 = 1;
  1476  001522  808D               	bsf	3981,0,c	;volatile
  1477                           
  1478                           ;main.c: 72: LATEbits.LATE1 = 0;
  1479  001524  928D               	bcf	3981,1,c	;volatile
  1480                           
  1481                           ;main.c: 74: ADCON0 = 0x00;
  1482  001526  0E00               	movlw	0
  1483  001528  6EC2               	movwf	4034,c	;volatile
  1484                           
  1485                           ;main.c: 75: ADCON1 = 0xFF;
  1486  00152A  68C1               	setf	4033,c	;volatile
  1487                           
  1488                           ;main.c: 77: initLCD();
  1489  00152C  ECB6  F00B         	call	_initLCD	;wreg free
  1490                           
  1491                           ;main.c: 79: I2C_Master_Init(10000);
  1492  001530  0E10               	movlw	16
  1493  001532  6E0E               	movwf	I2C_Master_Init@c,c
  1494  001534  0E27               	movlw	39
  1495  001536  6E0F               	movwf	I2C_Master_Init@c+1,c
  1496  001538  0E00               	movlw	0
  1497  00153A  6E10               	movwf	I2C_Master_Init@c+2,c
  1498  00153C  0E00               	movlw	0
  1499  00153E  6E11               	movwf	I2C_Master_Init@c+3,c
  1500  001540  EC10  F00B         	call	_I2C_Master_Init	;wreg free
  1501                           
  1502                           ;main.c: 82: nRBPU = 0;
  1503  001544  9EF1               	bcf	intcon2,7,c	;volatile
  1504                           
  1505                           ;main.c: 83: ADCON0 = 00000001;
  1506  001546  0E01               	movlw	1
  1507  001548  6EC2               	movwf	4034,c	;volatile
  1508                           
  1509                           ;main.c: 84: ADCON1 = 0x0B;
  1510  00154A  0E0B               	movlw	11
  1511  00154C  6EC1               	movwf	4033,c	;volatile
  1512                           
  1513                           ;main.c: 85: CVRCON = 0x00;
  1514  00154E  0E00               	movlw	0
  1515  001550  6EB5               	movwf	4021,c	;volatile
  1516                           
  1517                           ;main.c: 86: CMCONbits.CIS = 0;
  1518  001552  96B4               	bcf	4020,3,c	;volatile
  1519                           
  1520                           ;main.c: 87: ADFM = 1;
  1521  001554  8EC0               	bsf	4032,7,c	;volatile
  1522  001556  0012               	return		;funcret
  1523  001558                     __end_of_initialize:
  1524                           	opt stack 0
  1525                           tblptru	equ	0xFF8
  1526                           prodh	equ	0xFF4
  1527                           prodl	equ	0xFF3
  1528                           intcon2	equ	0xFF1
  1529                           postinc0	equ	0xFEE
  1530                           wreg	equ	0xFE8
  1531                           indf2	equ	0xFDF
  1532                           fsr2h	equ	0xFDA
  1533                           fsr2l	equ	0xFD9
  1534                           status	equ	0xFD8
  1535                           
  1536 ;; *************** function _initLCD *****************
  1537 ;; Defined at:
  1538 ;;		line 11 in file "lcd.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;		None
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;		None
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      void 
  1545 ;; Registers used:
  1546 ;;		wreg, status,2, status,0, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1554 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1555 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1556 ;;Total ram usage:        1 bytes
  1557 ;; Hardware stack levels used:    1
  1558 ;; Hardware stack levels required when called:    2
  1559 ;; This function calls:
  1560 ;;		_lcdInst
  1561 ;; This function is called by:
  1562 ;;		_initialize
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           	psect	text10
  1567  00176C                     __ptext10:
  1568                           	opt stack 0
  1569  00176C                     _initLCD:
  1570                           	opt stack 27
  1571                           
  1572                           ;lcd.c: 12: _delay((unsigned long)((15)*(32000000/4000.0)));
  1573                           
  1574                           ;incstack = 0
  1575  00176C  0E9C               	movlw	156
  1576  00176E  6E04               	movwf	??_initLCD& (0+255),c
  1577  001770  0ED7               	movlw	215
  1578  001772                     u847:
  1579  001772  2EE8               	decfsz	wreg,f,c
  1580  001774  D7FE               	bra	u847
  1581  001776  2E04               	decfsz	??_initLCD& (0+255),f,c
  1582  001778  D7FC               	bra	u847
  1583  00177A  F000               	nop	
  1584                           
  1585                           ;lcd.c: 13: lcdInst(0b00110011);
  1586  00177C  0E33               	movlw	51
  1587  00177E  EC4D  F00C         	call	_lcdInst
  1588                           
  1589                           ;lcd.c: 14: lcdInst(0b00110010);
  1590  001782  0E32               	movlw	50
  1591  001784  EC4D  F00C         	call	_lcdInst
  1592                           
  1593                           ;lcd.c: 15: lcdInst(0b00101000);
  1594  001788  0E28               	movlw	40
  1595  00178A  EC4D  F00C         	call	_lcdInst
  1596                           
  1597                           ;lcd.c: 16: lcdInst(0b00001111);
  1598  00178E  0E0F               	movlw	15
  1599  001790  EC4D  F00C         	call	_lcdInst
  1600                           
  1601                           ;lcd.c: 17: lcdInst(0b00000110);
  1602  001794  0E06               	movlw	6
  1603  001796  EC4D  F00C         	call	_lcdInst
  1604                           
  1605                           ;lcd.c: 18: lcdInst(0b00000001);
  1606  00179A  0E01               	movlw	1
  1607  00179C  EC4D  F00C         	call	_lcdInst
  1608                           
  1609                           ;lcd.c: 19: _delay((unsigned long)((15)*(32000000/4000.0)));
  1610  0017A0  0E9C               	movlw	156
  1611  0017A2  6E04               	movwf	??_initLCD& (0+255),c
  1612  0017A4  0ED7               	movlw	215
  1613  0017A6                     u857:
  1614  0017A6  2EE8               	decfsz	wreg,f,c
  1615  0017A8  D7FE               	bra	u857
  1616  0017AA  2E04               	decfsz	??_initLCD& (0+255),f,c
  1617  0017AC  D7FC               	bra	u857
  1618  0017AE  F000               	nop	
  1619  0017B0  0012               	return		;funcret
  1620  0017B2                     __end_of_initLCD:
  1621                           	opt stack 0
  1622                           tblptru	equ	0xFF8
  1623                           prodh	equ	0xFF4
  1624                           prodl	equ	0xFF3
  1625                           intcon2	equ	0xFF1
  1626                           postinc0	equ	0xFEE
  1627                           wreg	equ	0xFE8
  1628                           indf2	equ	0xFDF
  1629                           fsr2h	equ	0xFDA
  1630                           fsr2l	equ	0xFD9
  1631                           status	equ	0xFD8
  1632                           
  1633 ;; *************** function _I2C_Master_Init *****************
  1634 ;; Defined at:
  1635 ;;		line 20 in file "I2C.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;  c               4   13[COMRAM] const unsigned long 
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;		None
  1640 ;; Return value:  Size  Location     Type
  1641 ;;                  1    wreg      void 
  1642 ;; Registers used:
  1643 ;;		wreg, status,2, status,0, cstack
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1649 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1651 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1652 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1653 ;;Total ram usage:        8 bytes
  1654 ;; Hardware stack levels used:    1
  1655 ;; Hardware stack levels required when called:    1
  1656 ;; This function calls:
  1657 ;;		___lldiv
  1658 ;; This function is called by:
  1659 ;;		_initialize
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           	psect	text11
  1664  001620                     __ptext11:
  1665                           	opt stack 0
  1666  001620                     _I2C_Master_Init:
  1667                           	opt stack 28
  1668                           
  1669                           ;I2C.c: 23: SSPSTAT = 0b00000000;
  1670                           
  1671                           ;incstack = 0
  1672  001620  0E00               	movlw	0
  1673  001622  6EC7               	movwf	4039,c	;volatile
  1674                           
  1675                           ;I2C.c: 24: SSPCON1 = 0b00101000;
  1676  001624  0E28               	movlw	40
  1677  001626  6EC6               	movwf	4038,c	;volatile
  1678                           
  1679                           ;I2C.c: 25: SSPCON2 = 0b00000000;
  1680  001628  0E00               	movlw	0
  1681  00162A  6EC5               	movwf	4037,c	;volatile
  1682                           
  1683                           ;I2C.c: 26: SSPADD = (32000000/(4*c))-1;
  1684  00162C  0E00               	movlw	0
  1685  00162E  6E01               	movwf	___lldiv@dividend,c
  1686  001630  0E48               	movlw	72
  1687  001632  6E02               	movwf	___lldiv@dividend+1,c
  1688  001634  0EE8               	movlw	232
  1689  001636  6E03               	movwf	___lldiv@dividend+2,c
  1690  001638  0E01               	movlw	1
  1691  00163A  6E04               	movwf	___lldiv@dividend+3,c
  1692  00163C  C00E  F012         	movff	I2C_Master_Init@c,??_I2C_Master_Init
  1693  001640  C00F  F013         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
  1694  001644  C010  F014         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
  1695  001648  C011  F015         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
  1696  00164C  0E02               	movlw	2
  1697  00164E                     u565:
  1698  00164E  90D8               	bcf	status,0,c
  1699  001650  3612               	rlcf	??_I2C_Master_Init,f,c
  1700  001652  3613               	rlcf	??_I2C_Master_Init+1,f,c
  1701  001654  3614               	rlcf	??_I2C_Master_Init+2,f,c
  1702  001656  3615               	rlcf	??_I2C_Master_Init+3,f,c
  1703  001658  2EE8               	decfsz	wreg,f,c
  1704  00165A  D7F9               	goto	u565
  1705  00165C  C012  F005         	movff	??_I2C_Master_Init,___lldiv@divisor
  1706  001660  C013  F006         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  1707  001664  C014  F007         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  1708  001668  C015  F008         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  1709  00166C  EC30  F00A         	call	___lldiv	;wreg free
  1710  001670  0401               	decf	?___lldiv,w,c
  1711  001672  6EC8               	movwf	4040,c	;volatile
  1712                           
  1713                           ;I2C.c: 27: TRISC3 = 1;
  1714  001674  8694               	bsf	3988,3,c	;volatile
  1715                           
  1716                           ;I2C.c: 28: TRISC4 = 1;
  1717  001676  8894               	bsf	3988,4,c	;volatile
  1718  001678  0012               	return		;funcret
  1719  00167A                     __end_of_I2C_Master_Init:
  1720                           	opt stack 0
  1721                           tblptru	equ	0xFF8
  1722                           prodh	equ	0xFF4
  1723                           prodl	equ	0xFF3
  1724                           intcon2	equ	0xFF1
  1725                           postinc0	equ	0xFEE
  1726                           wreg	equ	0xFE8
  1727                           indf2	equ	0xFDF
  1728                           fsr2h	equ	0xFDA
  1729                           fsr2l	equ	0xFD9
  1730                           status	equ	0xFD8
  1731                           
  1732 ;; *************** function ___lldiv *****************
  1733 ;; Defined at:
  1734 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;  dividend        4    0[COMRAM] unsigned long 
  1737 ;;  divisor         4    4[COMRAM] unsigned long 
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;  quotient        4    8[COMRAM] unsigned long 
  1740 ;;  counter         1   12[COMRAM] unsigned char 
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  4    0[COMRAM] unsigned long 
  1743 ;; Registers used:
  1744 ;;		wreg, status,2, status,0
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1750 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1751 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1753 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1754 ;;Total ram usage:       13 bytes
  1755 ;; Hardware stack levels used:    1
  1756 ;; This function calls:
  1757 ;;		Nothing
  1758 ;; This function is called by:
  1759 ;;		_I2C_Master_Init
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763                           	psect	text12
  1764  001460                     __ptext12:
  1765                           	opt stack 0
  1766  001460                     ___lldiv:
  1767                           	opt stack 28
  1768                           
  1769                           ;incstack = 0
  1770  001460  0E00               	movlw	0
  1771  001462  6E09               	movwf	___lldiv@quotient,c
  1772  001464  0E00               	movlw	0
  1773  001466  6E0A               	movwf	___lldiv@quotient+1,c
  1774  001468  0E00               	movlw	0
  1775  00146A  6E0B               	movwf	___lldiv@quotient+2,c
  1776  00146C  0E00               	movlw	0
  1777  00146E  6E0C               	movwf	___lldiv@quotient+3,c
  1778  001470  5005               	movf	___lldiv@divisor,w,c
  1779  001472  1006               	iorwf	___lldiv@divisor+1,w,c
  1780  001474  1007               	iorwf	___lldiv@divisor+2,w,c
  1781  001476  1008               	iorwf	___lldiv@divisor+3,w,c
  1782  001478  B4D8               	btfsc	status,2,c
  1783  00147A  D02A               	goto	l683
  1784  00147C  0E01               	movlw	1
  1785  00147E  6E0D               	movwf	___lldiv@counter,c
  1786  001480  D006               	goto	l1437
  1787  001482                     l1435:
  1788  001482  90D8               	bcf	status,0,c
  1789  001484  3605               	rlcf	___lldiv@divisor,f,c
  1790  001486  3606               	rlcf	___lldiv@divisor+1,f,c
  1791  001488  3607               	rlcf	___lldiv@divisor+2,f,c
  1792  00148A  3608               	rlcf	___lldiv@divisor+3,f,c
  1793  00148C  2A0D               	incf	___lldiv@counter,f,c
  1794  00148E                     l1437:
  1795  00148E  AE08               	btfss	___lldiv@divisor+3,7,c
  1796  001490  D7F8               	goto	l1435
  1797  001492                     l1439:
  1798  001492  90D8               	bcf	status,0,c
  1799  001494  3609               	rlcf	___lldiv@quotient,f,c
  1800  001496  360A               	rlcf	___lldiv@quotient+1,f,c
  1801  001498  360B               	rlcf	___lldiv@quotient+2,f,c
  1802  00149A  360C               	rlcf	___lldiv@quotient+3,f,c
  1803  00149C  5005               	movf	___lldiv@divisor,w,c
  1804  00149E  5C01               	subwf	___lldiv@dividend,w,c
  1805  0014A0  5006               	movf	___lldiv@divisor+1,w,c
  1806  0014A2  5802               	subwfb	___lldiv@dividend+1,w,c
  1807  0014A4  5007               	movf	___lldiv@divisor+2,w,c
  1808  0014A6  5803               	subwfb	___lldiv@dividend+2,w,c
  1809  0014A8  5008               	movf	___lldiv@divisor+3,w,c
  1810  0014AA  5804               	subwfb	___lldiv@dividend+3,w,c
  1811  0014AC  A0D8               	btfss	status,0,c
  1812  0014AE  D009               	goto	l1447
  1813  0014B0  5005               	movf	___lldiv@divisor,w,c
  1814  0014B2  5E01               	subwf	___lldiv@dividend,f,c
  1815  0014B4  5006               	movf	___lldiv@divisor+1,w,c
  1816  0014B6  5A02               	subwfb	___lldiv@dividend+1,f,c
  1817  0014B8  5007               	movf	___lldiv@divisor+2,w,c
  1818  0014BA  5A03               	subwfb	___lldiv@dividend+2,f,c
  1819  0014BC  5008               	movf	___lldiv@divisor+3,w,c
  1820  0014BE  5A04               	subwfb	___lldiv@dividend+3,f,c
  1821  0014C0  8009               	bsf	___lldiv@quotient,0,c
  1822  0014C2                     l1447:
  1823  0014C2  90D8               	bcf	status,0,c
  1824  0014C4  3208               	rrcf	___lldiv@divisor+3,f,c
  1825  0014C6  3207               	rrcf	___lldiv@divisor+2,f,c
  1826  0014C8  3206               	rrcf	___lldiv@divisor+1,f,c
  1827  0014CA  3205               	rrcf	___lldiv@divisor,f,c
  1828  0014CC  2E0D               	decfsz	___lldiv@counter,f,c
  1829  0014CE  D7E1               	goto	l1439
  1830  0014D0                     l683:
  1831  0014D0  C009  F001         	movff	___lldiv@quotient,?___lldiv
  1832  0014D4  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  1833  0014D8  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  1834  0014DC  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  1835  0014E0  0012               	return		;funcret
  1836  0014E2                     __end_of___lldiv:
  1837                           	opt stack 0
  1838                           tblptru	equ	0xFF8
  1839                           prodh	equ	0xFF4
  1840                           prodl	equ	0xFF3
  1841                           intcon2	equ	0xFF1
  1842                           postinc0	equ	0xFEE
  1843                           wreg	equ	0xFE8
  1844                           indf2	equ	0xFDF
  1845                           fsr2h	equ	0xFDA
  1846                           fsr2l	equ	0xFD9
  1847                           status	equ	0xFD8
  1848                           
  1849 ;; *************** function _homescreen *****************
  1850 ;; Defined at:
  1851 ;;		line 3 in file "interface.c"
  1852 ;; Parameters:    Size  Location     Type
  1853 ;;		None
  1854 ;; Auto vars:     Size  Location     Type
  1855 ;;		None
  1856 ;; Return value:  Size  Location     Type
  1857 ;;                  1    wreg      void 
  1858 ;; Registers used:
  1859 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1860 ;; Tracked objects:
  1861 ;;		On entry : 0/0
  1862 ;;		On exit  : 0/0
  1863 ;;		Unchanged: 0/0
  1864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1869 ;;Total ram usage:        0 bytes
  1870 ;; Hardware stack levels used:    1
  1871 ;; Hardware stack levels required when called:    3
  1872 ;; This function calls:
  1873 ;;		_lcdInst
  1874 ;;		_printf
  1875 ;; This function is called by:
  1876 ;;		_main
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880                           	psect	text13
  1881  0015BE                     __ptext13:
  1882                           	opt stack 0
  1883  0015BE                     _homescreen:
  1884                           	opt stack 27
  1885                           
  1886                           ;interface.c: 4: lcdInst(0b10000000);;
  1887                           
  1888                           ;incstack = 0
  1889  0015BE  0E80               	movlw	128
  1890  0015C0  EC4D  F00C         	call	_lcdInst
  1891                           
  1892                           ;interface.c: 5: printf("%02x/%02x/%02x ", time[6],time[5],time[4]);
  1893  0015C4  0E32               	movlw	low STR_3
  1894  0015C6  6E08               	movwf	printf@f,c
  1895  0015C8  0E10               	movlw	high STR_3
  1896  0015CA  6E09               	movwf	printf@f+1,c
  1897  0015CC  C02F  F00A         	movff	_time+6,?_printf+2
  1898  0015D0  6A0B               	clrf	?_printf+3,c
  1899  0015D2  C02E  F00C         	movff	_time+5,?_printf+4
  1900  0015D6  6A0D               	clrf	?_printf+5,c
  1901  0015D8  C02D  F00E         	movff	_time+4,?_printf+6
  1902  0015DC  6A0F               	clrf	?_printf+7,c
  1903  0015DE  EC5F  F008         	call	_printf	;wreg free
  1904                           
  1905                           ;interface.c: 6: printf("3:Start");
  1906  0015E2  0EB5               	movlw	low STR_4
  1907  0015E4  6E08               	movwf	printf@f,c
  1908  0015E6  0E10               	movlw	high STR_4
  1909  0015E8  6E09               	movwf	printf@f+1,c
  1910  0015EA  EC5F  F008         	call	_printf	;wreg free
  1911                           
  1912                           ;interface.c: 7: lcdInst(0b11000000);;
  1913  0015EE  0EC0               	movlw	192
  1914  0015F0  EC4D  F00C         	call	_lcdInst
  1915                           
  1916                           ;interface.c: 8: printf("%02x:%02x:%02x", time[2],time[1],time[0]);
  1917  0015F4  0E90               	movlw	low STR_5
  1918  0015F6  6E08               	movwf	printf@f,c
  1919  0015F8  0E10               	movlw	high STR_5
  1920  0015FA  6E09               	movwf	printf@f+1,c
  1921  0015FC  C02B  F00A         	movff	_time+2,?_printf+2
  1922  001600  6A0B               	clrf	?_printf+3,c
  1923  001602  C02A  F00C         	movff	_time+1,?_printf+4
  1924  001606  6A0D               	clrf	?_printf+5,c
  1925  001608  C029  F00E         	movff	_time,?_printf+6
  1926  00160C  6A0F               	clrf	?_printf+7,c
  1927  00160E  EC5F  F008         	call	_printf	;wreg free
  1928                           
  1929                           ;interface.c: 9: printf(" 2:Logs");
  1930  001612  0EAD               	movlw	low STR_6
  1931  001614  6E08               	movwf	printf@f,c
  1932  001616  0E10               	movlw	high STR_6
  1933  001618  6E09               	movwf	printf@f+1,c
  1934  00161A  EC5F  F008         	call	_printf	;wreg free
  1935  00161E  0012               	return		;funcret
  1936  001620                     __end_of_homescreen:
  1937                           	opt stack 0
  1938                           tblptru	equ	0xFF8
  1939                           prodh	equ	0xFF4
  1940                           prodl	equ	0xFF3
  1941                           intcon2	equ	0xFF1
  1942                           postinc0	equ	0xFEE
  1943                           wreg	equ	0xFE8
  1944                           indf2	equ	0xFDF
  1945                           fsr2h	equ	0xFDA
  1946                           fsr2l	equ	0xFD9
  1947                           status	equ	0xFD8
  1948                           
  1949 ;; *************** function _displayLogs *****************
  1950 ;; Defined at:
  1951 ;;		line 12 in file "interface.c"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;		None
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;		None
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  1    wreg      void 
  1958 ;; Registers used:
  1959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1967 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1968 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1969 ;;Total ram usage:        1 bytes
  1970 ;; Hardware stack levels used:    1
  1971 ;; Hardware stack levels required when called:    3
  1972 ;; This function calls:
  1973 ;;		_keycheck
  1974 ;;		_lcdInst
  1975 ;;		_printf
  1976 ;; This function is called by:
  1977 ;;		_main
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981                           	psect	text14
  1982  0013B6                     __ptext14:
  1983                           	opt stack 0
  1984  0013B6                     _displayLogs:
  1985                           	opt stack 27
  1986                           
  1987                           ;interface.c: 13: lcdInst(0b00000001); _delay((unsigned long)((10)*(32000000/4000.0)));;
  1988                           
  1989                           ;incstack = 0
  1990  0013B6  0E01               	movlw	1
  1991  0013B8  EC4D  F00C         	call	_lcdInst
  1992  0013BC  0E68               	movlw	104
  1993  0013BE  6E1E               	movwf	??_displayLogs& (0+255),c
  1994  0013C0  0EE4               	movlw	228
  1995  0013C2                     u867:
  1996  0013C2  2EE8               	decfsz	wreg,f,c
  1997  0013C4  D7FE               	bra	u867
  1998  0013C6  2E1E               	decfsz	??_displayLogs& (0+255),f,c
  1999  0013C8  D7FC               	bra	u867
  2000  0013CA  D000               	nop2	
  2001                           
  2002                           ;interface.c: 14: printf("Run#1    A:Next");
  2003  0013CC  0E42               	movlw	low STR_7
  2004  0013CE  6E08               	movwf	printf@f,c
  2005  0013D0  0E10               	movlw	high STR_7
  2006  0013D2  6E09               	movwf	printf@f+1,c
  2007  0013D4  EC5F  F008         	call	_printf	;wreg free
  2008                           
  2009                           ;interface.c: 15: lcdInst(0b11000000);;
  2010  0013D8  0EC0               	movlw	192
  2011  0013DA  EC4D  F00C         	call	_lcdInst
  2012                           
  2013                           ;interface.c: 16: printf("# of cans: 10");
  2014  0013DE  0E9F               	movlw	low STR_8
  2015  0013E0  6E08               	movwf	printf@f,c
  2016  0013E2  0E10               	movlw	high STR_8
  2017  0013E4  6E09               	movwf	printf@f+1,c
  2018  0013E6  EC5F  F008         	call	_printf	;wreg free
  2019                           
  2020                           ;interface.c: 17: keycheck();
  2021  0013EA  EC34  F00C         	call	_keycheck	;wreg free
  2022                           
  2023                           ;interface.c: 18: lcdInst(0b00000001); _delay((unsigned long)((10)*(32000000/4000.0)));;
  2024  0013EE  0E01               	movlw	1
  2025  0013F0  EC4D  F00C         	call	_lcdInst
  2026  0013F4  0E68               	movlw	104
  2027  0013F6  6E1E               	movwf	??_displayLogs& (0+255),c
  2028  0013F8  0EE4               	movlw	228
  2029  0013FA                     u877:
  2030  0013FA  2EE8               	decfsz	wreg,f,c
  2031  0013FC  D7FE               	bra	u877
  2032  0013FE  2E1E               	decfsz	??_displayLogs& (0+255),f,c
  2033  001400  D7FC               	bra	u877
  2034  001402  D000               	nop2	
  2035                           
  2036                           ;interface.c: 19: printf("Run#1    A:Next");
  2037  001404  0E42               	movlw	low STR_7
  2038  001406  6E08               	movwf	printf@f,c
  2039  001408  0E10               	movlw	high STR_7
  2040  00140A  6E09               	movwf	printf@f+1,c
  2041  00140C  EC5F  F008         	call	_printf	;wreg free
  2042                           
  2043                           ;interface.c: 20: lcdInst(0b11000000);;
  2044  001410  0EC0               	movlw	192
  2045  001412  EC4D  F00C         	call	_lcdInst
  2046                           
  2047                           ;interface.c: 21: printf("# soda cans: 6");
  2048  001416  0E81               	movlw	low STR_10
  2049  001418  6E08               	movwf	printf@f,c
  2050  00141A  0E10               	movlw	high STR_10
  2051  00141C  6E09               	movwf	printf@f+1,c
  2052  00141E  EC5F  F008         	call	_printf	;wreg free
  2053                           
  2054                           ;interface.c: 22: keycheck();
  2055  001422  EC34  F00C         	call	_keycheck	;wreg free
  2056                           
  2057                           ;interface.c: 23: lcdInst(0b00000001); _delay((unsigned long)((10)*(32000000/4000.0)));;
  2058  001426  0E01               	movlw	1
  2059  001428  EC4D  F00C         	call	_lcdInst
  2060  00142C  0E68               	movlw	104
  2061  00142E  6E1E               	movwf	??_displayLogs& (0+255),c
  2062  001430  0EE4               	movlw	228
  2063  001432                     u887:
  2064  001432  2EE8               	decfsz	wreg,f,c
  2065  001434  D7FE               	bra	u887
  2066  001436  2E1E               	decfsz	??_displayLogs& (0+255),f,c
  2067  001438  D7FC               	bra	u887
  2068  00143A  D000               	nop2	
  2069                           
  2070                           ;interface.c: 24: printf("Run#1    A:Next");
  2071  00143C  0E42               	movlw	low STR_7
  2072  00143E  6E08               	movwf	printf@f,c
  2073  001440  0E10               	movlw	high STR_7
  2074  001442  6E09               	movwf	printf@f+1,c
  2075  001444  EC5F  F008         	call	_printf	;wreg free
  2076                           
  2077                           ;interface.c: 25: lcdInst(0b11000000);;
  2078  001448  0EC0               	movlw	192
  2079  00144A  EC4D  F00C         	call	_lcdInst
  2080                           
  2081                           ;interface.c: 26: printf("# soup cans: 4");
  2082  00144E  0E72               	movlw	low STR_12
  2083  001450  6E08               	movwf	printf@f,c
  2084  001452  0E10               	movlw	high STR_12
  2085  001454  6E09               	movwf	printf@f+1,c
  2086  001456  EC5F  F008         	call	_printf	;wreg free
  2087                           
  2088                           ;interface.c: 27: keycheck();
  2089  00145A  EC34  F00C         	call	_keycheck	;wreg free
  2090  00145E  0012               	return		;funcret
  2091  001460                     __end_of_displayLogs:
  2092                           	opt stack 0
  2093                           tblptru	equ	0xFF8
  2094                           prodh	equ	0xFF4
  2095                           prodl	equ	0xFF3
  2096                           intcon2	equ	0xFF1
  2097                           postinc0	equ	0xFEE
  2098                           wreg	equ	0xFE8
  2099                           indf2	equ	0xFDF
  2100                           fsr2h	equ	0xFDA
  2101                           fsr2l	equ	0xFD9
  2102                           status	equ	0xFD8
  2103                           
  2104 ;; *************** function _printf *****************
  2105 ;; Defined at:
  2106 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;  f               2    7[COMRAM] PTR const unsigned char 
  2109 ;;		 -> STR_12(15), STR_11(16), STR_10(15), STR_9(16), 
  2110 ;;		 -> STR_8(14), STR_7(16), STR_6(8), STR_5(15), 
  2111 ;;		 -> STR_4(8), STR_3(16), STR_2(16), STR_1(16), 
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;  idx             1   21[COMRAM] unsigned char 
  2114 ;;  tmpval          4    0        struct .
  2115 ;;  cp              3    0        PTR const unsigned char 
  2116 ;;  width           2   26[COMRAM] int 
  2117 ;;  val             2   23[COMRAM] unsigned int 
  2118 ;;  ap              2   19[COMRAM] PTR void [1]
  2119 ;;		 -> ?_printf(2), 
  2120 ;;  len             2    0        unsigned int 
  2121 ;;  c               1   28[COMRAM] char 
  2122 ;;  prec            1   25[COMRAM] char 
  2123 ;;  flag            1   22[COMRAM] unsigned char 
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  2    7[COMRAM] int 
  2126 ;; Registers used:
  2127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2133 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2134 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2135 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2136 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2137 ;;Total ram usage:       22 bytes
  2138 ;; Hardware stack levels used:    1
  2139 ;; Hardware stack levels required when called:    2
  2140 ;; This function calls:
  2141 ;;		___lwdiv
  2142 ;;		___wmul
  2143 ;;		_isdigit
  2144 ;;		_putch
  2145 ;; This function is called by:
  2146 ;;		_main
  2147 ;;		_homescreen
  2148 ;;		_displayLogs
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           	psect	text15
  2153  0010BE                     __ptext15:
  2154                           	opt stack 0
  2155  0010BE                     _printf:
  2156                           	opt stack 28
  2157                           
  2158                           ;doprnt.c: 466: va_list ap;
  2159                           ;doprnt.c: 499: signed char c;
  2160                           ;doprnt.c: 501: int width;
  2161                           ;doprnt.c: 506: signed char prec;
  2162                           ;doprnt.c: 508: unsigned char flag;
  2163                           ;doprnt.c: 523: union {
  2164                           ;doprnt.c: 524: unsigned long vd;
  2165                           ;doprnt.c: 525: double integ;
  2166                           ;doprnt.c: 526: } tmpval;
  2167                           ;doprnt.c: 528: unsigned int val;
  2168                           ;doprnt.c: 529: unsigned len;
  2169                           ;doprnt.c: 530: const char * cp;
  2170                           ;doprnt.c: 533: *ap = __va_start();
  2171                           
  2172                           ;incstack = 0
  2173  0010BE  0E0A               	movlw	low (?_printf+2)
  2174  0010C0  6E14               	movwf	printf@ap,c
  2175  0010C2  0E00               	movlw	high (?_printf+2)
  2176  0010C4  6E15               	movwf	printf@ap+1,c
  2177                           
  2178                           ;doprnt.c: 536: while(c = *f++) {
  2179  0010C6  D0E8               	goto	l1555
  2180  0010C8                     l1483:
  2181                           
  2182                           ;doprnt.c: 538: if(c != '%')
  2183  0010C8  0E25               	movlw	37
  2184  0010CA  181D               	xorwf	printf@c,w,c
  2185  0010CC  B4D8               	btfsc	status,2,c
  2186  0010CE  D004               	goto	l1487
  2187                           
  2188                           ;doprnt.c: 540: {
  2189                           ;doprnt.c: 541: (putch(c) );
  2190  0010D0  501D               	movf	printf@c,w,c
  2191  0010D2  EC47  F00C         	call	_putch
  2192                           
  2193                           ;doprnt.c: 542: continue;
  2194  0010D6  D0E0               	goto	l1555
  2195  0010D8                     l1487:
  2196                           
  2197                           ;doprnt.c: 543: }
  2198                           ;doprnt.c: 546: width = 0;
  2199  0010D8  0E00               	movlw	0
  2200  0010DA  6E1C               	movwf	printf@width+1,c
  2201  0010DC  0E00               	movlw	0
  2202  0010DE  6E1B               	movwf	printf@width,c
  2203                           
  2204                           ;doprnt.c: 548: flag = 0;
  2205  0010E0  0E00               	movlw	0
  2206  0010E2  6E17               	movwf	printf@flag,c
  2207                           
  2208                           ;doprnt.c: 551: switch(*f) {
  2209                           
  2210                           ;doprnt.c: 550: for(;;) {
  2211  0010E4  D003               	goto	l1493
  2212  0010E6                     l1489:
  2213                           
  2214                           ;doprnt.c: 580: flag |= 0x04;
  2215  0010E6  8417               	bsf	printf@flag,2,c
  2216                           
  2217                           ;doprnt.c: 581: f++;
  2218  0010E8  4A08               	infsnz	printf@f,f,c
  2219  0010EA  2A09               	incf	printf@f+1,f,c
  2220  0010EC                     l1493:
  2221  0010EC  C008  FFF6         	movff	printf@f,tblptrl
  2222  0010F0  C009  FFF7         	movff	printf@f+1,tblptrh
  2223  0010F4                     	if	0	;tblptru may be non-zero
  2224  0010F4                     	endif
  2225  0010F4                     	if	0	;tblptru may be non-zero
  2226  0010F4                     	endif
  2227  0010F4  0008               	tblrd		*
  2228  0010F6  50F5               	movf	tablat,w,c
  2229                           
  2230                           ; Switch size 1, requested type "space"
  2231                           ; Number of cases is 1, Range of values is 48 to 48
  2232                           ; switch strategies available:
  2233                           ; Name         Instructions Cycles
  2234                           ; simple_byte            4     3 (average)
  2235                           ;	Chosen strategy is simple_byte
  2236  0010F8  0A30               	xorlw	48	; case 48
  2237  0010FA  B4D8               	btfsc	status,2,c
  2238  0010FC  D7F4               	goto	l1489
  2239                           
  2240                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  2241                           
  2242                           ;doprnt.c: 586: }
  2243                           
  2244                           ;doprnt.c: 585: break;
  2245  0010FE  C008  FFF6         	movff	printf@f,tblptrl
  2246  001102  C009  FFF7         	movff	printf@f+1,tblptrh
  2247  001106                     	if	0	;tblptru may be non-zero
  2248  001106                     	endif
  2249  001106                     	if	0	;tblptru may be non-zero
  2250  001106                     	endif
  2251  001106  0008               	tblrd		*
  2252  001108  50F5               	movf	tablat,w,c
  2253  00110A  EC10  F00C         	call	_isdigit
  2254  00110E  A0D8               	btfss	status,0,c
  2255  001110  D032               	goto	l1509
  2256                           
  2257                           ;doprnt.c: 598: width = 0;
  2258  001112  0E00               	movlw	0
  2259  001114  6E1C               	movwf	printf@width+1,c
  2260  001116  0E00               	movlw	0
  2261  001118  6E1B               	movwf	printf@width,c
  2262  00111A                     l1499:
  2263                           
  2264                           ;doprnt.c: 600: width *= 10;
  2265  00111A  C01B  F001         	movff	printf@width,___wmul@multiplier
  2266  00111E  C01C  F002         	movff	printf@width+1,___wmul@multiplier+1
  2267  001122  0E00               	movlw	0
  2268  001124  6E04               	movwf	___wmul@multiplicand+1,c
  2269  001126  0E0A               	movlw	10
  2270  001128  6E03               	movwf	___wmul@multiplicand,c
  2271  00112A  ECEC  F00B         	call	___wmul	;wreg free
  2272  00112E  C001  F01B         	movff	?___wmul,printf@width
  2273  001132  C002  F01C         	movff	?___wmul+1,printf@width+1
  2274                           
  2275                           ;doprnt.c: 601: width += *f++ - '0';
  2276  001136  0ED0               	movlw	208
  2277  001138  6E10               	movwf	??_printf& (0+255),c
  2278  00113A  0EFF               	movlw	255
  2279  00113C  6E11               	movwf	(??_printf+1)& (0+255),c
  2280  00113E  C008  FFF6         	movff	printf@f,tblptrl
  2281  001142  C009  FFF7         	movff	printf@f+1,tblptrh
  2282  001146                     	if	0	;tblptru may be non-zero
  2283  001146                     	endif
  2284  001146                     	if	0	;tblptru may be non-zero
  2285  001146                     	endif
  2286  001146  0008               	tblrd		*
  2287  001148  50F5               	movf	tablat,w,c
  2288  00114A  6E12               	movwf	(??_printf+2)& (0+255),c
  2289  00114C  6A13               	clrf	(??_printf+3)& (0+255),c
  2290  00114E  5010               	movf	??_printf,w,c
  2291  001150  2612               	addwf	??_printf+2,f,c
  2292  001152  5011               	movf	??_printf+1,w,c
  2293  001154  2213               	addwfc	??_printf+3,f,c
  2294  001156  5012               	movf	??_printf+2,w,c
  2295  001158  261B               	addwf	printf@width,f,c
  2296  00115A  5013               	movf	??_printf+3,w,c
  2297  00115C  221C               	addwfc	printf@width+1,f,c
  2298  00115E  4A08               	infsnz	printf@f,f,c
  2299  001160  2A09               	incf	printf@f+1,f,c
  2300                           
  2301                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  2302  001162  C008  FFF6         	movff	printf@f,tblptrl
  2303  001166  C009  FFF7         	movff	printf@f+1,tblptrh
  2304  00116A                     	if	0	;tblptru may be non-zero
  2305  00116A                     	endif
  2306  00116A                     	if	0	;tblptru may be non-zero
  2307  00116A                     	endif
  2308  00116A  0008               	tblrd		*
  2309  00116C  50F5               	movf	tablat,w,c
  2310  00116E  EC10  F00C         	call	_isdigit
  2311  001172  B0D8               	btfsc	status,0,c
  2312  001174  D7D2               	goto	l1499
  2313  001176                     l1509:
  2314  001176  C008  FFF6         	movff	printf@f,tblptrl
  2315  00117A  C009  FFF7         	movff	printf@f+1,tblptrh
  2316  00117E  4A08               	infsnz	printf@f,f,c
  2317  001180  2A09               	incf	printf@f+1,f,c
  2318  001182                     	if	0	;tblptru may be non-zero
  2319  001182                     	endif
  2320  001182                     	if	0	;tblptru may be non-zero
  2321  001182                     	endif
  2322  001182  0008               	tblrd		*
  2323  001184  CFF5 F01D          	movff	tablat,printf@c
  2324  001188  501D               	movf	printf@c,w,c
  2325                           
  2326                           ; Switch size 1, requested type "space"
  2327                           ; Number of cases is 2, Range of values is 0 to 120
  2328                           ; switch strategies available:
  2329                           ; Name         Instructions Cycles
  2330                           ; simple_byte            7     4 (average)
  2331                           ;	Chosen strategy is simple_byte
  2332  00118A  0A00               	xorlw	0	; case 0
  2333  00118C  B4D8               	btfsc	status,2,c
  2334  00118E  0012               	return	
  2335  001190  0A78               	xorlw	120	; case 120
  2336  001192  A4D8               	btfss	status,2,c
  2337  001194  D081               	goto	l1555
  2338                           
  2339                           ;doprnt.c: 1273: {
  2340                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2341  001196  C014  FFD9         	movff	printf@ap,fsr2l
  2342  00119A  C015  FFDA         	movff	printf@ap+1,fsr2h
  2343  00119E  CFDE F018          	movff	postinc2,printf@val
  2344  0011A2  CFDD F019          	movff	postdec2,printf@val+1
  2345  0011A6  0E02               	movlw	2
  2346  0011A8  2614               	addwf	printf@ap,f,c
  2347  0011AA  0E00               	movlw	0
  2348  0011AC  2215               	addwfc	printf@ap+1,f,c
  2349                           
  2350                           ;doprnt.c: 1287: }
  2351                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  2352  0011AE  0E01               	movlw	1
  2353  0011B0  6E1D               	movwf	printf@c,c
  2354  0011B2                     l1517:
  2355  0011B2  0E04               	movlw	4
  2356  0011B4  181D               	xorwf	printf@c,w,c
  2357  0011B6  B4D8               	btfsc	status,2,c
  2358  0011B8  D012               	goto	l1529
  2359                           
  2360                           ;doprnt.c: 1317: if(val < hexpowers[c])
  2361  0011BA  501D               	movf	printf@c,w,c
  2362  0011BC  0D02               	mullw	2
  2363  0011BE  0E12               	movlw	low _hexpowers
  2364  0011C0  24F3               	addwf	prodl,w,c
  2365  0011C2  6EF6               	movwf	tblptrl,c
  2366  0011C4  0E10               	movlw	high _hexpowers
  2367  0011C6  20F4               	addwfc	prodh,w,c
  2368  0011C8  6EF7               	movwf	tblptrh,c
  2369  0011CA                     	if	0	;There are less than 3 active tblptr bytes
  2370  0011CA                     	endif
  2371  0011CA  0009               	tblrd		*+
  2372  0011CC  50F5               	movf	tablat,w,c
  2373  0011CE  5C18               	subwf	printf@val,w,c
  2374  0011D0  0009               	tblrd		*+
  2375  0011D2  50F5               	movf	tablat,w,c
  2376  0011D4  5819               	subwfb	printf@val+1,w,c
  2377  0011D6  A0D8               	btfss	status,0,c
  2378  0011D8  D002               	goto	l1529
  2379                           
  2380                           ;doprnt.c: 1318: break;
  2381  0011DA  2A1D               	incf	printf@c,f,c
  2382  0011DC  D7EA               	goto	l1517
  2383  0011DE                     l1529:
  2384                           
  2385                           ;doprnt.c: 1381: if(width > c)
  2386  0011DE  0E80               	movlw	128
  2387  0011E0  BE1D               	btfsc	printf@c,7,c
  2388  0011E2  0E7F               	movlw	127
  2389  0011E4  6E10               	movwf	??_printf& (0+255),c
  2390  0011E6  501B               	movf	printf@width,w,c
  2391  0011E8  5C1D               	subwf	printf@c,w,c
  2392  0011EA  501C               	movf	printf@width+1,w,c
  2393  0011EC  0A80               	xorlw	128
  2394  0011EE  5810               	subwfb	??_printf& (0+255),w,c
  2395  0011F0  B0D8               	btfsc	status,0,c
  2396  0011F2  D007               	goto	l1533
  2397                           
  2398                           ;doprnt.c: 1382: width -= c;
  2399  0011F4  501D               	movf	printf@c,w,c
  2400  0011F6  5E1B               	subwf	printf@width,f,c
  2401  0011F8  0E00               	movlw	0
  2402  0011FA  BE1D               	btfsc	printf@c,7,c
  2403  0011FC  0EFF               	movlw	255
  2404  0011FE  5A1C               	subwfb	printf@width+1,f,c
  2405  001200  D004               	goto	l1535
  2406  001202                     l1533:
  2407                           
  2408                           ;doprnt.c: 1383: else
  2409                           ;doprnt.c: 1384: width = 0;
  2410  001202  0E00               	movlw	0
  2411  001204  6E1C               	movwf	printf@width+1,c
  2412  001206  0E00               	movlw	0
  2413  001208  6E1B               	movwf	printf@width,c
  2414  00120A                     l1535:
  2415                           
  2416                           ;doprnt.c: 1387: if(flag & 0x04) {
  2417  00120A  A417               	btfss	printf@flag,2,c
  2418  00120C  D00B               	goto	l1543
  2419  00120E                     
  2420                           ;doprnt.c: 1415: if(width)
  2421  00120E  501B               	movf	printf@width,w,c
  2422  001210  101C               	iorwf	printf@width+1,w,c
  2423  001212  B4D8               	btfsc	status,2,c
  2424  001214  D015               	goto	l320
  2425                           
  2426                           ;doprnt.c: 1417: (putch('0') );
  2427                           
  2428                           ;doprnt.c: 1416: do
  2429  001216  0E30               	movlw	48
  2430  001218  EC47  F00C         	call	_putch
  2431                           
  2432                           ;doprnt.c: 1418: while(--width);
  2433  00121C  061B               	decf	printf@width,f,c
  2434  00121E  A0D8               	btfss	status,0,c
  2435  001220  061C               	decf	printf@width+1,f,c
  2436  001222  D7F5               	goto	L1
  2437  001224                     l1543:
  2438                           
  2439                           ;doprnt.c: 1422: {
  2440                           ;doprnt.c: 1424: if(width
  2441                           ;doprnt.c: 1428: )
  2442  001224  501B               	movf	printf@width,w,c
  2443  001226  101C               	iorwf	printf@width+1,w,c
  2444  001228  B4D8               	btfsc	status,2,c
  2445  00122A  D00A               	goto	l320
  2446  00122C                     l1545:
  2447                           
  2448                           ;doprnt.c: 1430: (putch(' ') );
  2449  00122C  0E20               	movlw	32
  2450  00122E  EC47  F00C         	call	_putch
  2451                           
  2452                           ;doprnt.c: 1431: while(--width);
  2453  001232  061B               	decf	printf@width,f,c
  2454  001234  A0D8               	btfss	status,0,c
  2455  001236  061C               	decf	printf@width+1,f,c
  2456  001238  501B               	movf	printf@width,w,c
  2457  00123A  101C               	iorwf	printf@width+1,w,c
  2458  00123C  A4D8               	btfss	status,2,c
  2459  00123E  D7F6               	goto	l1545
  2460  001240                     l320:
  2461                           
  2462                           ;doprnt.c: 1469: }
  2463                           ;doprnt.c: 1472: prec = c;
  2464  001240  C01D  F01A         	movff	printf@c,printf@prec
  2465                           
  2466                           ;doprnt.c: 1474: while(prec--) {
  2467  001244  D025               	goto	l324
  2468  001246                     l1549:
  2469                           
  2470                           ;doprnt.c: 1478: {
  2471                           ;doprnt.c: 1499: {
  2472                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  2473  001246  C018  F001         	movff	printf@val,___lwdiv@dividend
  2474  00124A  C019  F002         	movff	printf@val+1,___lwdiv@dividend+1
  2475  00124E  501A               	movf	printf@prec,w,c
  2476  001250  0D02               	mullw	2
  2477  001252  0E12               	movlw	low _hexpowers
  2478  001254  24F3               	addwf	prodl,w,c
  2479  001256  6EF6               	movwf	tblptrl,c
  2480  001258  0E10               	movlw	high _hexpowers
  2481  00125A  20F4               	addwfc	prodh,w,c
  2482  00125C  6EF7               	movwf	tblptrh,c
  2483  00125E                     	if	0	;There are less than 3 active tblptr bytes
  2484  00125E                     	endif
  2485  00125E  0009               	tblrd		*+
  2486  001260  CFF5 F003          	movff	tablat,___lwdiv@divisor
  2487  001264  000A               	tblrd		*-
  2488  001266  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  2489  00126A  EC68  F00B         	call	___lwdiv	;wreg free
  2490  00126E  5001               	movf	?___lwdiv,w,c
  2491  001270  0B0F               	andlw	15
  2492  001272  6E16               	movwf	printf@idx,c
  2493                           
  2494                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  2495  001274  5016               	movf	printf@idx,w,c
  2496  001276  0D01               	mullw	1
  2497  001278  0E21               	movlw	low STR_13
  2498  00127A  24F3               	addwf	prodl,w,c
  2499  00127C  6EF6               	movwf	tblptrl,c
  2500  00127E  0E10               	movlw	high STR_13
  2501  001280  20F4               	addwfc	prodh,w,c
  2502  001282  6EF7               	movwf	tblptrh,c
  2503  001284                     	if	0	;There are less than 3 active tblptr bytes
  2504  001284                     	endif
  2505  001284  0008               	tblrd		*
  2506  001286  CFF5 F01D          	movff	tablat,printf@c
  2507                           
  2508                           ;doprnt.c: 1508: }
  2509                           ;doprnt.c: 1523: }
  2510                           ;doprnt.c: 1524: (putch(c) );
  2511  00128A  501D               	movf	printf@c,w,c
  2512  00128C  EC47  F00C         	call	_putch
  2513  001290                     l324:
  2514  001290  061A               	decf	printf@prec,f,c
  2515  001292  281A               	incf	printf@prec,w,c
  2516  001294  A4D8               	btfss	status,2,c
  2517  001296  D7D7               	goto	l1549
  2518  001298                     l1555:
  2519  001298  C008  FFF6         	movff	printf@f,tblptrl
  2520  00129C  C009  FFF7         	movff	printf@f+1,tblptrh
  2521  0012A0  4A08               	infsnz	printf@f,f,c
  2522  0012A2  2A09               	incf	printf@f+1,f,c
  2523  0012A4                     	if	0	;tblptru may be non-zero
  2524  0012A4                     	endif
  2525  0012A4                     	if	0	;tblptru may be non-zero
  2526  0012A4                     	endif
  2527  0012A4  0008               	tblrd		*
  2528  0012A6  CFF5 F01D          	movff	tablat,printf@c
  2529  0012AA  501D               	movf	printf@c,w,c
  2530  0012AC  B4D8               	btfsc	status,2,c
  2531  0012AE  0012               	return	
  2532  0012B0  D70B               	goto	l1483
  2533  0012B2                     __end_of_printf:
  2534                           	opt stack 0
  2535                           tblptru	equ	0xFF8
  2536                           tblptrh	equ	0xFF7
  2537                           tblptrl	equ	0xFF6
  2538                           tablat	equ	0xFF5
  2539                           prodh	equ	0xFF4
  2540                           prodl	equ	0xFF3
  2541                           intcon2	equ	0xFF1
  2542                           postinc0	equ	0xFEE
  2543                           wreg	equ	0xFE8
  2544                           indf2	equ	0xFDF
  2545                           postinc2	equ	0xFDE
  2546                           postdec2	equ	0xFDD
  2547                           fsr2h	equ	0xFDA
  2548                           fsr2l	equ	0xFD9
  2549                           status	equ	0xFD8
  2550                           
  2551 ;; *************** function _putch *****************
  2552 ;; Defined at:
  2553 ;;		line 27 in file "lcd.c"
  2554 ;; Parameters:    Size  Location     Type
  2555 ;;  data            1    wreg     unsigned char 
  2556 ;; Auto vars:     Size  Location     Type
  2557 ;;  data            1    2[COMRAM] unsigned char 
  2558 ;; Return value:  Size  Location     Type
  2559 ;;                  1    wreg      void 
  2560 ;; Registers used:
  2561 ;;		wreg, status,2, status,0, cstack
  2562 ;; Tracked objects:
  2563 ;;		On entry : 0/0
  2564 ;;		On exit  : 0/0
  2565 ;;		Unchanged: 0/0
  2566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2568 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2570 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2571 ;;Total ram usage:        1 bytes
  2572 ;; Hardware stack levels used:    1
  2573 ;; Hardware stack levels required when called:    1
  2574 ;; This function calls:
  2575 ;;		_lcdNibble
  2576 ;; This function is called by:
  2577 ;;		_printf
  2578 ;; This function uses a non-reentrant model
  2579 ;;
  2580                           
  2581                           	psect	text16
  2582  00188E                     __ptext16:
  2583                           	opt stack 0
  2584  00188E                     _putch:
  2585                           	opt stack 28
  2586                           
  2587                           ;incstack = 0
  2588                           ;putch@data stored from wreg
  2589  00188E  6E03               	movwf	putch@data,c
  2590                           
  2591                           ;lcd.c: 28: LATDbits.LATD2 = 1;
  2592  001890  848C               	bsf	3980,2,c	;volatile
  2593                           
  2594                           ;lcd.c: 29: lcdNibble(data);
  2595  001892  5003               	movf	putch@data,w,c
  2596  001894  EC3D  F00B         	call	_lcdNibble
  2597  001898  0012               	return		;funcret
  2598  00189A                     __end_of_putch:
  2599                           	opt stack 0
  2600                           tblptru	equ	0xFF8
  2601                           tblptrh	equ	0xFF7
  2602                           tblptrl	equ	0xFF6
  2603                           tablat	equ	0xFF5
  2604                           prodh	equ	0xFF4
  2605                           prodl	equ	0xFF3
  2606                           intcon2	equ	0xFF1
  2607                           postinc0	equ	0xFEE
  2608                           wreg	equ	0xFE8
  2609                           indf2	equ	0xFDF
  2610                           postinc2	equ	0xFDE
  2611                           postdec2	equ	0xFDD
  2612                           fsr2h	equ	0xFDA
  2613                           fsr2l	equ	0xFD9
  2614                           status	equ	0xFD8
  2615                           
  2616 ;; *************** function _isdigit *****************
  2617 ;; Defined at:
  2618 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\isdigit.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;  c               1    wreg     unsigned char 
  2621 ;; Auto vars:     Size  Location     Type
  2622 ;;  c               1    2[COMRAM] unsigned char 
  2623 ;; Return value:  Size  Location     Type
  2624 ;;		None               void
  2625 ;; Registers used:
  2626 ;;		wreg, status,2, status,0
  2627 ;; Tracked objects:
  2628 ;;		On entry : 0/0
  2629 ;;		On exit  : 0/0
  2630 ;;		Unchanged: 0/0
  2631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2633 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2634 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2635 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2636 ;;Total ram usage:        3 bytes
  2637 ;; Hardware stack levels used:    1
  2638 ;; This function calls:
  2639 ;;		Nothing
  2640 ;; This function is called by:
  2641 ;;		_printf
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           	psect	text17
  2646  001820                     __ptext17:
  2647                           	opt stack 0
  2648  001820                     _isdigit:
  2649                           	opt stack 29
  2650                           
  2651                           ;incstack = 0
  2652                           ;isdigit@c stored from wreg
  2653  001820  6E03               	movwf	isdigit@c,c
  2654  001822  0E00               	movlw	0
  2655  001824  6E02               	movwf	_isdigit$882,c
  2656  001826  0E3A               	movlw	58
  2657  001828  6003               	cpfslt	isdigit@c,c
  2658  00182A  D005               	goto	l1419
  2659  00182C  0E2F               	movlw	47
  2660  00182E  6403               	cpfsgt	isdigit@c,c
  2661  001830  D002               	goto	l1419
  2662  001832  0E01               	movlw	1
  2663  001834  6E02               	movwf	_isdigit$882,c
  2664  001836                     l1419:
  2665  001836  C002  F001         	movff	_isdigit$882,??_isdigit
  2666  00183A  3001               	rrcf	??_isdigit,w,c
  2667  00183C  0012               	return	
  2668  00183E                     __end_of_isdigit:
  2669                           	opt stack 0
  2670                           tblptru	equ	0xFF8
  2671                           tblptrh	equ	0xFF7
  2672                           tblptrl	equ	0xFF6
  2673                           tablat	equ	0xFF5
  2674                           prodh	equ	0xFF4
  2675                           prodl	equ	0xFF3
  2676                           intcon2	equ	0xFF1
  2677                           postinc0	equ	0xFEE
  2678                           wreg	equ	0xFE8
  2679                           indf2	equ	0xFDF
  2680                           postinc2	equ	0xFDE
  2681                           postdec2	equ	0xFDD
  2682                           fsr2h	equ	0xFDA
  2683                           fsr2l	equ	0xFD9
  2684                           status	equ	0xFD8
  2685                           
  2686 ;; *************** function ___wmul *****************
  2687 ;; Defined at:
  2688 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;  multiplier      2    0[COMRAM] unsigned int 
  2691 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2692 ;; Auto vars:     Size  Location     Type
  2693 ;;  product         2    4[COMRAM] unsigned int 
  2694 ;; Return value:  Size  Location     Type
  2695 ;;                  2    0[COMRAM] unsigned int 
  2696 ;; Registers used:
  2697 ;;		wreg, status,2, status,0, prodl, prodh
  2698 ;; Tracked objects:
  2699 ;;		On entry : 0/0
  2700 ;;		On exit  : 0/0
  2701 ;;		Unchanged: 0/0
  2702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2703 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2704 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2706 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2707 ;;Total ram usage:        6 bytes
  2708 ;; Hardware stack levels used:    1
  2709 ;; This function calls:
  2710 ;;		Nothing
  2711 ;; This function is called by:
  2712 ;;		_main
  2713 ;;		_printf
  2714 ;;		_backlogTest
  2715 ;;		_timePassed
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           	psect	text18
  2720  0017D8                     __ptext18:
  2721                           	opt stack 0
  2722  0017D8                     ___wmul:
  2723                           	opt stack 29
  2724                           
  2725                           ;incstack = 0
  2726  0017D8  5001               	movf	___wmul@multiplier,w,c
  2727  0017DA  0203               	mulwf	___wmul@multiplicand,c
  2728  0017DC  CFF3 F005          	movff	prodl,___wmul@product
  2729  0017E0  CFF4 F006          	movff	prodh,___wmul@product+1
  2730  0017E4  5001               	movf	___wmul@multiplier,w,c
  2731  0017E6  0204               	mulwf	___wmul@multiplicand+1,c
  2732  0017E8  50F3               	movf	prodl,w,c
  2733  0017EA  2606               	addwf	___wmul@product+1,f,c
  2734  0017EC  5002               	movf	___wmul@multiplier+1,w,c
  2735  0017EE  0203               	mulwf	___wmul@multiplicand,c
  2736  0017F0  50F3               	movf	prodl,w,c
  2737  0017F2  2606               	addwf	___wmul@product+1,f,c
  2738  0017F4  C005  F001         	movff	___wmul@product,?___wmul
  2739  0017F8  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2740  0017FC  0012               	return	
  2741  0017FE                     __end_of___wmul:
  2742                           	opt stack 0
  2743                           tblptru	equ	0xFF8
  2744                           tblptrh	equ	0xFF7
  2745                           tblptrl	equ	0xFF6
  2746                           tablat	equ	0xFF5
  2747                           prodh	equ	0xFF4
  2748                           prodl	equ	0xFF3
  2749                           intcon2	equ	0xFF1
  2750                           postinc0	equ	0xFEE
  2751                           wreg	equ	0xFE8
  2752                           indf2	equ	0xFDF
  2753                           postinc2	equ	0xFDE
  2754                           postdec2	equ	0xFDD
  2755                           fsr2h	equ	0xFDA
  2756                           fsr2l	equ	0xFD9
  2757                           status	equ	0xFD8
  2758                           
  2759 ;; *************** function ___lwdiv *****************
  2760 ;; Defined at:
  2761 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;  dividend        2    0[COMRAM] unsigned int 
  2764 ;;  divisor         2    2[COMRAM] unsigned int 
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;  quotient        2    4[COMRAM] unsigned int 
  2767 ;;  counter         1    6[COMRAM] unsigned char 
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  2    0[COMRAM] unsigned int 
  2770 ;; Registers used:
  2771 ;;		wreg, status,2, status,0
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2777 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2778 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2780 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2781 ;;Total ram usage:        7 bytes
  2782 ;; Hardware stack levels used:    1
  2783 ;; This function calls:
  2784 ;;		Nothing
  2785 ;; This function is called by:
  2786 ;;		_printf
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790                           	psect	text19
  2791  0016D0                     __ptext19:
  2792                           	opt stack 0
  2793  0016D0                     ___lwdiv:
  2794                           	opt stack 29
  2795                           
  2796                           ;incstack = 0
  2797  0016D0  0E00               	movlw	0
  2798  0016D2  6E06               	movwf	___lwdiv@quotient+1,c
  2799  0016D4  0E00               	movlw	0
  2800  0016D6  6E05               	movwf	___lwdiv@quotient,c
  2801  0016D8  5003               	movf	___lwdiv@divisor,w,c
  2802  0016DA  1004               	iorwf	___lwdiv@divisor+1,w,c
  2803  0016DC  B4D8               	btfsc	status,2,c
  2804  0016DE  D01C               	goto	l736
  2805  0016E0  0E01               	movlw	1
  2806  0016E2  6E07               	movwf	___lwdiv@counter,c
  2807  0016E4  D004               	goto	l1459
  2808  0016E6                     l1457:
  2809  0016E6  90D8               	bcf	status,0,c
  2810  0016E8  3603               	rlcf	___lwdiv@divisor,f,c
  2811  0016EA  3604               	rlcf	___lwdiv@divisor+1,f,c
  2812  0016EC  2A07               	incf	___lwdiv@counter,f,c
  2813  0016EE                     l1459:
  2814  0016EE  AE04               	btfss	___lwdiv@divisor+1,7,c
  2815  0016F0  D7FA               	goto	l1457
  2816  0016F2                     l1461:
  2817  0016F2  90D8               	bcf	status,0,c
  2818  0016F4  3605               	rlcf	___lwdiv@quotient,f,c
  2819  0016F6  3606               	rlcf	___lwdiv@quotient+1,f,c
  2820  0016F8  5003               	movf	___lwdiv@divisor,w,c
  2821  0016FA  5C01               	subwf	___lwdiv@dividend,w,c
  2822  0016FC  5004               	movf	___lwdiv@divisor+1,w,c
  2823  0016FE  5802               	subwfb	___lwdiv@dividend+1,w,c
  2824  001700  A0D8               	btfss	status,0,c
  2825  001702  D005               	goto	l1469
  2826  001704  5003               	movf	___lwdiv@divisor,w,c
  2827  001706  5E01               	subwf	___lwdiv@dividend,f,c
  2828  001708  5004               	movf	___lwdiv@divisor+1,w,c
  2829  00170A  5A02               	subwfb	___lwdiv@dividend+1,f,c
  2830  00170C  8005               	bsf	___lwdiv@quotient,0,c
  2831  00170E                     l1469:
  2832  00170E  90D8               	bcf	status,0,c
  2833  001710  3204               	rrcf	___lwdiv@divisor+1,f,c
  2834  001712  3203               	rrcf	___lwdiv@divisor,f,c
  2835  001714  2E07               	decfsz	___lwdiv@counter,f,c
  2836  001716  D7ED               	goto	l1461
  2837  001718                     l736:
  2838  001718  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2839  00171C  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2840  001720  0012               	return		;funcret
  2841  001722                     __end_of___lwdiv:
  2842                           	opt stack 0
  2843                           tblptru	equ	0xFF8
  2844                           tblptrh	equ	0xFF7
  2845                           tblptrl	equ	0xFF6
  2846                           tablat	equ	0xFF5
  2847                           prodh	equ	0xFF4
  2848                           prodl	equ	0xFF3
  2849                           intcon2	equ	0xFF1
  2850                           postinc0	equ	0xFEE
  2851                           wreg	equ	0xFE8
  2852                           indf2	equ	0xFDF
  2853                           postinc2	equ	0xFDE
  2854                           postdec2	equ	0xFDD
  2855                           fsr2h	equ	0xFDA
  2856                           fsr2l	equ	0xFD9
  2857                           status	equ	0xFD8
  2858                           
  2859 ;; *************** function _lcdInst *****************
  2860 ;; Defined at:
  2861 ;;		line 22 in file "lcd.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;  data            1    wreg     unsigned char 
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;  data            1    2[COMRAM] unsigned char 
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  1    wreg      void 
  2868 ;; Registers used:
  2869 ;;		wreg, status,2, status,0, cstack
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2876 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2878 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2879 ;;Total ram usage:        1 bytes
  2880 ;; Hardware stack levels used:    1
  2881 ;; Hardware stack levels required when called:    1
  2882 ;; This function calls:
  2883 ;;		_lcdNibble
  2884 ;; This function is called by:
  2885 ;;		_main
  2886 ;;		_initLCD
  2887 ;;		_homescreen
  2888 ;;		_displayLogs
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892                           	psect	text20
  2893  00189A                     __ptext20:
  2894                           	opt stack 0
  2895  00189A                     _lcdInst:
  2896                           	opt stack 29
  2897                           
  2898                           ;incstack = 0
  2899                           ;lcdInst@data stored from wreg
  2900  00189A  6E03               	movwf	lcdInst@data,c
  2901                           
  2902                           ;lcd.c: 23: LATDbits.LATD2 = 0;
  2903  00189C  948C               	bcf	3980,2,c	;volatile
  2904                           
  2905                           ;lcd.c: 24: lcdNibble(data);
  2906  00189E  5003               	movf	lcdInst@data,w,c
  2907  0018A0  EC3D  F00B         	call	_lcdNibble
  2908  0018A4  0012               	return		;funcret
  2909  0018A6                     __end_of_lcdInst:
  2910                           	opt stack 0
  2911                           tblptru	equ	0xFF8
  2912                           tblptrh	equ	0xFF7
  2913                           tblptrl	equ	0xFF6
  2914                           tablat	equ	0xFF5
  2915                           prodh	equ	0xFF4
  2916                           prodl	equ	0xFF3
  2917                           intcon2	equ	0xFF1
  2918                           postinc0	equ	0xFEE
  2919                           wreg	equ	0xFE8
  2920                           indf2	equ	0xFDF
  2921                           postinc2	equ	0xFDE
  2922                           postdec2	equ	0xFDD
  2923                           fsr2h	equ	0xFDA
  2924                           fsr2l	equ	0xFD9
  2925                           status	equ	0xFD8
  2926                           
  2927 ;; *************** function _lcdNibble *****************
  2928 ;; Defined at:
  2929 ;;		line 32 in file "lcd.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;  data            1    wreg     unsigned char 
  2932 ;; Auto vars:     Size  Location     Type
  2933 ;;  data            1    1[COMRAM] unsigned char 
  2934 ;;  temp            1    0[COMRAM] unsigned char 
  2935 ;; Return value:  Size  Location     Type
  2936 ;;                  1    wreg      void 
  2937 ;; Registers used:
  2938 ;;		wreg, status,2, status,0
  2939 ;; Tracked objects:
  2940 ;;		On entry : 0/0
  2941 ;;		On exit  : 0/0
  2942 ;;		Unchanged: 0/0
  2943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2945 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2947 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2948 ;;Total ram usage:        2 bytes
  2949 ;; Hardware stack levels used:    1
  2950 ;; This function calls:
  2951 ;;		Nothing
  2952 ;; This function is called by:
  2953 ;;		_lcdInst
  2954 ;;		_putch
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           
  2958                           	psect	text21
  2959  00167A                     __ptext21:
  2960                           	opt stack 0
  2961  00167A                     _lcdNibble:
  2962                           	opt stack 28
  2963                           
  2964                           ;incstack = 0
  2965                           ;lcdNibble@data stored from wreg
  2966  00167A  6E02               	movwf	lcdNibble@data,c
  2967                           
  2968                           ;lcd.c: 34: char temp = data & 0xF0;
  2969  00167C  5002               	movf	lcdNibble@data,w,c
  2970  00167E  0BF0               	andlw	240
  2971  001680  6E01               	movwf	lcdNibble@temp,c
  2972                           
  2973                           ;lcd.c: 35: LATD = LATD & 0x0F;
  2974  001682  508C               	movf	3980,w,c	;volatile
  2975  001684  0B0F               	andlw	15
  2976  001686  6E8C               	movwf	3980,c	;volatile
  2977                           
  2978                           ;lcd.c: 36: LATD = temp | LATD;
  2979  001688  5001               	movf	lcdNibble@temp,w,c
  2980  00168A  108C               	iorwf	3980,w,c	;volatile
  2981  00168C  6E8C               	movwf	3980,c	;volatile
  2982                           
  2983                           ;lcd.c: 38: LATDbits.LATD3 = 0;
  2984  00168E  968C               	bcf	3980,3,c	;volatile
  2985                           
  2986                           ;lcd.c: 39: _delay((unsigned long)((25)*(32000000/4000000.0)));
  2987  001690  0E42               	movlw	66
  2988  001692                     u897:
  2989  001692  2EE8               	decfsz	wreg,f,c
  2990  001694  D7FE               	bra	u897
  2991  001696  D000               	nop2	
  2992                           
  2993                           ;lcd.c: 40: LATDbits.LATD3 = 1;
  2994  001698  868C               	bsf	3980,3,c	;volatile
  2995                           
  2996                           ;lcd.c: 41: _delay((unsigned long)((25)*(32000000/4000000.0)));
  2997  00169A  0E42               	movlw	66
  2998  00169C                     u907:
  2999  00169C  2EE8               	decfsz	wreg,f,c
  3000  00169E  D7FE               	bra	u907
  3001  0016A0  D000               	nop2	
  3002                           
  3003                           ;lcd.c: 43: data = data << 4;
  3004  0016A2  3802               	swapf	lcdNibble@data,w,c
  3005  0016A4  0BF0               	andlw	240
  3006  0016A6  6E02               	movwf	lcdNibble@data,c
  3007                           
  3008                           ;lcd.c: 45: temp = data & 0xF0;
  3009  0016A8  5002               	movf	lcdNibble@data,w,c
  3010  0016AA  0BF0               	andlw	240
  3011  0016AC  6E01               	movwf	lcdNibble@temp,c
  3012                           
  3013                           ;lcd.c: 46: LATD = LATD & 0x0F;
  3014  0016AE  508C               	movf	3980,w,c	;volatile
  3015  0016B0  0B0F               	andlw	15
  3016  0016B2  6E8C               	movwf	3980,c	;volatile
  3017                           
  3018                           ;lcd.c: 47: LATD = temp | LATD;
  3019  0016B4  5001               	movf	lcdNibble@temp,w,c
  3020  0016B6  108C               	iorwf	3980,w,c	;volatile
  3021  0016B8  6E8C               	movwf	3980,c	;volatile
  3022                           
  3023                           ;lcd.c: 49: LATDbits.LATD3 = 0;
  3024  0016BA  968C               	bcf	3980,3,c	;volatile
  3025                           
  3026                           ;lcd.c: 50: _delay((unsigned long)((25)*(32000000/4000000.0)));
  3027  0016BC  0E42               	movlw	66
  3028  0016BE                     u917:
  3029  0016BE  2EE8               	decfsz	wreg,f,c
  3030  0016C0  D7FE               	bra	u917
  3031  0016C2  D000               	nop2	
  3032                           
  3033                           ;lcd.c: 51: LATDbits.LATD3 = 1;
  3034  0016C4  868C               	bsf	3980,3,c	;volatile
  3035                           
  3036                           ;lcd.c: 52: _delay((unsigned long)((25)*(32000000/4000000.0)));
  3037  0016C6  0E42               	movlw	66
  3038  0016C8                     u927:
  3039  0016C8  2EE8               	decfsz	wreg,f,c
  3040  0016CA  D7FE               	bra	u927
  3041  0016CC  D000               	nop2	
  3042  0016CE  0012               	return		;funcret
  3043  0016D0                     __end_of_lcdNibble:
  3044                           	opt stack 0
  3045                           tblptru	equ	0xFF8
  3046                           tblptrh	equ	0xFF7
  3047                           tblptrl	equ	0xFF6
  3048                           tablat	equ	0xFF5
  3049                           prodh	equ	0xFF4
  3050                           prodl	equ	0xFF3
  3051                           intcon2	equ	0xFF1
  3052                           postinc0	equ	0xFEE
  3053                           wreg	equ	0xFE8
  3054                           indf2	equ	0xFDF
  3055                           postinc2	equ	0xFDE
  3056                           postdec2	equ	0xFDD
  3057                           fsr2h	equ	0xFDA
  3058                           fsr2l	equ	0xFD9
  3059                           status	equ	0xFD8
  3060                           
  3061 ;; *************** function _keycheck *****************
  3062 ;; Defined at:
  3063 ;;		line 26 in file "main.c"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;		None
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;		None
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  1    wreg      void 
  3070 ;; Registers used:
  3071 ;;		wreg, status,2, status,0
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3081 ;;Total ram usage:        0 bytes
  3082 ;; Hardware stack levels used:    1
  3083 ;; This function calls:
  3084 ;;		Nothing
  3085 ;; This function is called by:
  3086 ;;		_displayLogs
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089                           
  3090                           	psect	text22
  3091  001868                     __ptext22:
  3092                           	opt stack 0
  3093  001868                     _keycheck:
  3094                           	opt stack 29
  3095  001868                     l91:
  3096  001868  A281               	btfss	3969,1,c	;volatile
  3097  00186A  D7FE               	goto	l91
  3098                           
  3099                           ;main.c: 30: }
  3100                           ;main.c: 31: keypress = (PORTB & 0xF0)>>4;
  3101  00186C  3881               	swapf	3969,w,c	;volatile
  3102  00186E  0B0F               	andlw	15
  3103  001870  0B0F               	andlw	15
  3104  001872  6E30               	movwf	_keypress,c	;volatile
  3105  001874                     l94:
  3106  001874  B281               	btfsc	3969,1,c	;volatile
  3107  001876  D7FE               	goto	l94
  3108                           
  3109                           ;main.c: 34: }
  3110                           ;main.c: 35: __nop();
  3111  001878  F000               	nop	
  3112                           
  3113                           ;main.c: 36: return;
  3114  00187A  0012               	return		;funcret
  3115  00187C                     __end_of_keycheck:
  3116                           	opt stack 0
  3117                           tblptru	equ	0xFF8
  3118                           tblptrh	equ	0xFF7
  3119                           tblptrl	equ	0xFF6
  3120                           tablat	equ	0xFF5
  3121                           prodh	equ	0xFF4
  3122                           prodl	equ	0xFF3
  3123                           intcon2	equ	0xFF1
  3124                           postinc0	equ	0xFEE
  3125                           wreg	equ	0xFE8
  3126                           indf2	equ	0xFDF
  3127                           postinc2	equ	0xFDE
  3128                           postdec2	equ	0xFDD
  3129                           fsr2h	equ	0xFDA
  3130                           fsr2l	equ	0xFD9
  3131                           status	equ	0xFD8
  3132                           
  3133 ;; *************** function _PWM1off *****************
  3134 ;; Defined at:
  3135 ;;		line 19 in file "motors.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;		None
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;		None
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  1    wreg      void 
  3142 ;; Registers used:
  3143 ;;		wreg, status,2
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3153 ;;Total ram usage:        0 bytes
  3154 ;; Hardware stack levels used:    1
  3155 ;; This function calls:
  3156 ;;		Nothing
  3157 ;; This function is called by:
  3158 ;;		_main
  3159 ;; This function uses a non-reentrant model
  3160 ;;
  3161                           
  3162                           	psect	text23
  3163  0018B0                     __ptext23:
  3164                           	opt stack 0
  3165  0018B0                     _PWM1off:
  3166                           	opt stack 30
  3167                           
  3168                           ;motors.c: 20: CCP1CONbits.DC1B0 = 0;
  3169                           
  3170                           ;incstack = 0
  3171  0018B0  98BD               	bcf	4029,4,c	;volatile
  3172                           
  3173                           ;motors.c: 21: CCP1CONbits.DC1B1 = 0;
  3174  0018B2  9ABD               	bcf	4029,5,c	;volatile
  3175                           
  3176                           ;motors.c: 22: CCPR1L = 0;
  3177  0018B4  0E00               	movlw	0
  3178  0018B6  6EBE               	movwf	4030,c	;volatile
  3179  0018B8  0012               	return		;funcret
  3180  0018BA                     __end_of_PWM1off:
  3181                           	opt stack 0
  3182                           tblptru	equ	0xFF8
  3183                           tblptrh	equ	0xFF7
  3184                           tblptrl	equ	0xFF6
  3185                           tablat	equ	0xFF5
  3186                           prodh	equ	0xFF4
  3187                           prodl	equ	0xFF3
  3188                           intcon2	equ	0xFF1
  3189                           postinc0	equ	0xFEE
  3190                           wreg	equ	0xFE8
  3191                           indf2	equ	0xFDF
  3192                           postinc2	equ	0xFDE
  3193                           postdec2	equ	0xFDD
  3194                           fsr2h	equ	0xFDA
  3195                           fsr2l	equ	0xFD9
  3196                           status	equ	0xFD8
  3197                           
  3198 ;; *************** function _PWM1 *****************
  3199 ;; Defined at:
  3200 ;;		line 5 in file "motors.c"
  3201 ;; Parameters:    Size  Location     Type
  3202 ;;  duty            2    0[COMRAM] int 
  3203 ;; Auto vars:     Size  Location     Type
  3204 ;;		None
  3205 ;; Return value:  Size  Location     Type
  3206 ;;                  1    wreg      void 
  3207 ;; Registers used:
  3208 ;;		wreg, status,2, status,0
  3209 ;; Tracked objects:
  3210 ;;		On entry : 0/0
  3211 ;;		On exit  : 0/0
  3212 ;;		Unchanged: 0/0
  3213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3214 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3216 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3217 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3218 ;;Total ram usage:        4 bytes
  3219 ;; Hardware stack levels used:    1
  3220 ;; This function calls:
  3221 ;;		Nothing
  3222 ;; This function is called by:
  3223 ;;		_main
  3224 ;;		_backlogTest
  3225 ;; This function uses a non-reentrant model
  3226 ;;
  3227                           
  3228                           	psect	text24
  3229  001722                     __ptext24:
  3230                           	opt stack 0
  3231  001722                     _PWM1:
  3232                           	opt stack 30
  3233                           
  3234                           ;motors.c: 13: CCP1CONbits.DC1B0 = duty & 1;
  3235                           
  3236                           ;incstack = 0
  3237  001722  C001  F003         	movff	PWM1@duty,??_PWM1
  3238  001726  0E01               	movlw	1
  3239  001728  1603               	andwf	??_PWM1,f,c
  3240  00172A  3A03               	swapf	??_PWM1,f,c
  3241  00172C  50BD               	movf	4029,w,c	;volatile
  3242  00172E  1803               	xorwf	??_PWM1,w,c
  3243  001730  0BEF               	andlw	-17
  3244  001732  1803               	xorwf	??_PWM1,w,c
  3245  001734  6EBD               	movwf	4029,c	;volatile
  3246                           
  3247                           ;motors.c: 14: CCP1CONbits.DC1B1 = (duty >> 1) & 1;
  3248  001736  3402               	rlcf	PWM1@duty+1,w,c
  3249  001738  3002               	rrcf	PWM1@duty+1,w,c
  3250  00173A  6E04               	movwf	(??_PWM1+1)& (0+255),c
  3251  00173C  3001               	rrcf	PWM1@duty,w,c
  3252  00173E  6E03               	movwf	??_PWM1& (0+255),c
  3253  001740  0E01               	movlw	1
  3254  001742  1603               	andwf	??_PWM1,f,c
  3255  001744  3A03               	swapf	??_PWM1,f,c
  3256  001746  4603               	rlncf	??_PWM1,f,c
  3257  001748  50BD               	movf	4029,w,c	;volatile
  3258  00174A  1803               	xorwf	??_PWM1,w,c
  3259  00174C  0BDF               	andlw	-33
  3260  00174E  1803               	xorwf	??_PWM1,w,c
  3261  001750  6EBD               	movwf	4029,c	;volatile
  3262                           
  3263                           ;motors.c: 15: CCPR1L = (duty >> 2);
  3264  001752  C001  F003         	movff	PWM1@duty,??_PWM1
  3265  001756  C002  F004         	movff	PWM1@duty+1,??_PWM1+1
  3266  00175A  3404               	rlcf	??_PWM1+1,w,c
  3267  00175C  3204               	rrcf	??_PWM1+1,f,c
  3268  00175E  3203               	rrcf	??_PWM1,f,c
  3269  001760  3404               	rlcf	??_PWM1+1,w,c
  3270  001762  3204               	rrcf	??_PWM1+1,f,c
  3271  001764  3203               	rrcf	??_PWM1,f,c
  3272  001766  5003               	movf	??_PWM1,w,c
  3273  001768  6EBE               	movwf	4030,c	;volatile
  3274  00176A  0012               	return		;funcret
  3275  00176C                     __end_of_PWM1:
  3276                           	opt stack 0
  3277                           tblptru	equ	0xFF8
  3278                           tblptrh	equ	0xFF7
  3279                           tblptrl	equ	0xFF6
  3280                           tablat	equ	0xFF5
  3281                           prodh	equ	0xFF4
  3282                           prodl	equ	0xFF3
  3283                           intcon2	equ	0xFF1
  3284                           postinc0	equ	0xFEE
  3285                           wreg	equ	0xFE8
  3286                           indf2	equ	0xFDF
  3287                           postinc2	equ	0xFDE
  3288                           postdec2	equ	0xFDD
  3289                           fsr2h	equ	0xFDA
  3290                           fsr2l	equ	0xFD9
  3291                           status	equ	0xFD8
  3292                           tblptru	equ	0xFF8
  3293                           tblptrh	equ	0xFF7
  3294                           tblptrl	equ	0xFF6
  3295                           tablat	equ	0xFF5
  3296                           prodh	equ	0xFF4
  3297                           prodl	equ	0xFF3
  3298                           intcon2	equ	0xFF1
  3299                           postinc0	equ	0xFEE
  3300                           wreg	equ	0xFE8
  3301                           indf2	equ	0xFDF
  3302                           postinc2	equ	0xFDE
  3303                           postdec2	equ	0xFDD
  3304                           fsr2h	equ	0xFDA
  3305                           fsr2l	equ	0xFD9
  3306                           status	equ	0xFD8
  3307                           
  3308                           	psect	rparam
  3309  0000                     tblptru	equ	0xFF8
  3310                           tblptrh	equ	0xFF7
  3311                           tblptrl	equ	0xFF6
  3312                           tablat	equ	0xFF5
  3313                           prodh	equ	0xFF4
  3314                           prodl	equ	0xFF3
  3315                           intcon2	equ	0xFF1
  3316                           postinc0	equ	0xFEE
  3317                           wreg	equ	0xFE8
  3318                           indf2	equ	0xFDF
  3319                           postinc2	equ	0xFDE
  3320                           postdec2	equ	0xFDD
  3321                           fsr2h	equ	0xFDA
  3322                           fsr2l	equ	0xFD9
  3323                           status	equ	0xFD8


Data Sizes:
    Strings     156
    Constant    32
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     40      48
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_12(CODE[15]), STR_11(CODE[16]), STR_10(CODE[15]), STR_9(CODE[16]), 
		 -> STR_8(CODE[14]), STR_7(CODE[16]), STR_6(CODE[8]), STR_5(CODE[15]), 
		 -> STR_4(CODE[8]), STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_displayLogs
    _updateTime->_I2C_Master_Read
    _updateTime->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _initialize->_I2C_Master_Init
    _initLCD->_lcdInst
    _I2C_Master_Init->___lldiv
    _homescreen->_printf
    _displayLogs->_printf
    _printf->___lwdiv
    _putch->_lcdNibble
    _lcdInst->_lcdNibble

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   10295
                                             30 COMRAM    10    10      0
                               _PWM1
                            _PWM1off
                             ___wmul
                        _displayLogs
                         _homescreen
                         _initialize
                       _keyinterrupt
                            _lcdInst
                             _printf
                            _readADC
                         _updateTime
 ---------------------------------------------------------------------------------
 (1) _updateTime                                           1     1      0     504
                                              3 COMRAM     1     1      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     406
                                              1 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      2     2      0      30
                                              1 COMRAM     2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readADC                                              2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _keyinterrupt                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0     466
                    _I2C_Master_Init
                            _initLCD
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              1     1      0      90
                                              3 COMRAM     1     1      0
                            _lcdInst
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     376
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     290
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _homescreen                                           0     0      0    2741
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _displayLogs                                          1     1      0    2741
                                             29 COMRAM     1     1      0
                           _keycheck
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              31    23      8    2651
                                              7 COMRAM    22    14      8
                            ___lwdiv
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      90
                                              2 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     799
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _lcdInst                                              1     1      0      90
                                              2 COMRAM     1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) _lcdNibble                                            2     2      0      75
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _keycheck                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1off                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1                                                 4     2      2     258
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM1
   _PWM1off
   ___wmul
   _displayLogs
     _keycheck
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___wmul
       _isdigit
       _putch
         _lcdNibble
   _homescreen
     _lcdInst
       _lcdNibble
     _printf
       ___lwdiv
       ___wmul
       _isdigit
       _putch
         _lcdNibble
   _initialize
     _I2C_Master_Init
       ___lldiv
     _initLCD
       _lcdInst
         _lcdNibble
   _keyinterrupt
   _lcdInst
     _lcdNibble
   _printf
     ___lwdiv
     ___wmul
     _isdigit
     _putch
       _lcdNibble
   _readADC
   _updateTime
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     28      30       1       37.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      30      34        0.0%
DATA                 0      0      30       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Mar 01 02:30:33 2017

             ?_displayLogs 0001                         l91 1868                         l94 1874  
      ___wmul@multiplicand 0003                __CFG_BORV$3 000000               __CFG_CP0$OFF 000000  
             __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000  
              __CFG_OSC$HS 000000                        l100 1864                        l101 1860  
                      l320 1240                        l324 1290                        l179 187C  
                      l736 1718                        l683 14D0               __CFG_CPB$OFF 000000  
                      _PR2 000FCB                        u280 17D0                        _PEN 007E2A  
             __CFG_CPD$OFF 000000                        _SEN 007E28                        u565 164E  
                      u817 12D4                        u907 169C                        u827 1312  
                      u917 16BE                        u837 1812                        u927 16C8  
                      u847 1772                        u857 17A6                        u867 13C2  
                      u877 13FA                        u887 1432                        u897 1692  
                      prod 000FF3                        wreg 000FE8               __CFG_LVP$OFF 000000  
             __CFG_WDT$OFF 000000                       l1161 17D2                       l1171 180C  
                     l1173 181A                       l1601 15B0                       l1419 1836  
                     l1435 1482                       l1461 16F2                       l1533 1202  
                     l1517 11B2                       l1509 1176                       l1437 148E  
                     l1543 1224                       l1535 120A                       l1447 14C2  
                     l1439 1492                       l1703 13AE                       l1457 16E6  
                     l1545 122C                       l1529 11DE                       l1459 16EE  
                     l1483 10C8                       l1555 1298                       l1469 170E  
                     l1549 1246                       l1493 10EC                       l1487 10D8  
                     l1591 158C                       l1489 10E6                       l1657 12DE  
                     l1499 111A                       l1595 1594                       l1691 138C  
                     l1687 1380                       _ADFM 007E07                       STR_1 1052  
                     STR_2 1062                       STR_3 1032                       STR_4 10B5  
                     STR_5 1090                       STR_6 10AD                       STR_7 1042  
                     STR_8 109F                       STR_9 1042                       _LATA 000F89  
                     _LATB 000F8A                       _LATC 000F8B                       _LATD 000F8C  
                     _LATE 000F8D                       _RCEN 007E2B                       _PWM1 1722  
                     _RSEN 007E29            __end_of_PWM1off 18BA                       _main 12B2  
                     _keys 1001                       _time 0029                       fsr2h 000FDA  
                     indf2 000FDF                       fsr2l 000FD9                main@standby 0027  
                     prodh 000FF4                       prodl 000FF3                       start 0000  
            __CFG_IESO$OFF 000000              __CFG_MCLRE$ON 000000               ___param_bank 000000  
                    ?_PWM1 0001           ?_I2C_Master_Init 000E           ?_I2C_Master_Read 0001  
         ?_I2C_Master_Wait 0001           ?_I2C_Master_Stop 0001                      ?_main 0001  
                    _ACKEN 007E2C                      _ACKDT 007E2D                      _EEADR 000FA9  
                    STR_10 1081                      STR_11 1042                      STR_12 1072  
                    STR_13 1021            __end_of___lldiv 14E2                      _T2CON 000FCA  
          __end_of___lwdiv 1722                      _PORTB 000F81                      _TRISA 000F92  
                    _TRISB 000F93                      _TRISC 000F94                      _TRISD 000F95  
                    _TRISE 000F96              __CFG_PWRT$OFF 000000              __CFG_WRT0$OFF 000000  
            __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000              __CFG_WRT3$OFF 000000  
          __end_of_lcdInst 18A6             __CFG_EBTR0$OFF 000000             __CFG_FCMEN$OFF 000000  
           __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000             __CFG_EBTR3$OFF 000000  
                    _nRBPU 007F8F              __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000  
            __CFG_WRTD$OFF 000000            __end_of_readADC 1820            __end_of_initLCD 17B2  
           __CFG_EBTRB$OFF 000000            __end_of_isdigit 183E                      _putch 188E  
                    main@s 0021                      tablat 000FF5                      status 000FD8  
           __CFG_PBADEN$ON 000000               __end_of_PWM1 176C            __initialization 183E  
             __end_of_main 13B6               __end_of_keys 1012                     ??_PWM1 0003  
                   ??_main 001F              __activetblptr 000002          ?_I2C_Master_Start 0001  
        ?_I2C_Master_Write 0002         ??_I2C_Master_Start 0002                     _ADCON0 000FC2  
                   _ADCON1 000FC1         ??_I2C_Master_Write 0004                  ??_PWM1off 0001  
                   _ADRESH 000FC4                     _EEADRH 000FAA                     _EEDATA 000FA8  
                   _CCPR1L 000FBE                     _EECON2 000FA7                     ?_putch 0001  
                   _CVRCON 000FB5                     _OSCCON 000FD3                     _SSPADD 000FC8  
                   _TRISC3 007CA3                     _TRISC4 007CA4                     _SSPBUF 000FC9  
           __CFG_XINST$OFF 000000                     ___wmul 17D8             __CFG_STVREN$ON 000000  
                ??___lldiv 0009                  ??___lwdiv 0005           __end_of_keycheck 187C  
                   clear_0 1844           __end_of_currtime 1021                  ??_lcdInst 0003  
                   _printf 10BE       __size_of_displayLogs 00AA                     main@dc 0025  
                ??_readADC 0001                  ??_initLCD 0004                  ??_isdigit 0001  
             __mediumconst 0000                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8              ?_keyinterrupt 0001              main@startTime 0023  
               __accesstop 0080    __end_of__initialization 184A              ___rparam_used 000001  
           __pcstackCOMRAM 0001              __end_of_putch 189A         __size_of_lcdNibble 0056  
           ??_keyinterrupt 0001                    ??_putch 0003                    ?___wmul 0001  
                  _CCP1CON 000FBD                    ?_printf 0008                    _PWM1off 18B0  
                  _SSPCON1 000FC6                    _SSPCON2 000FC5                    _SSPSTAT 000FC7  
                ?_keycheck 0001          __end_of_lcdNibble 16D0                    __Hparam 0000  
                  __Lparam 0000                    ___lldiv 1460            __size_of___wmul 0026  
                  ___lwdiv 16D0                  _CMCONbits 000FB4                 _homescreen 15BE  
             __psmallconst 1000                    __pcinit 183E                    __ramtop 1000  
               _initialize 14E2                    _lcdInst 189A                    __ptext0 12B2  
                  __ptext1 1558                    __ptext2 18A6                    __ptext3 18BA  
                  __ptext4 18C2                    __ptext5 17B2                    __ptext6 187C  
                  __ptext7 17FE                    __ptext8 1854                    __ptext9 14E2  
          __size_of_printf 01F4                    _readADC 17FE                    _initLCD 176C  
        __end_of_hexpowers 101A                    _isdigit 1820   __size_of_I2C_Master_Init 005A  
 __size_of_I2C_Master_Read 0026   __size_of_I2C_Master_Wait 0012   __size_of_I2C_Master_Stop 0008  
     end_of_initialization 184A                 ??_keycheck 0001              __Lmediumconst 0000  
__size_of_I2C_Master_Start 0008  __size_of_I2C_Master_Write 000A            ___lldiv@divisor 0005  
          ___lldiv@counter 000D       __end_of_keyinterrupt 1868                    printf@c 001D  
                  printf@f 0008           I2C_Master_Init@c 000E           I2C_Master_Read@a 0002  
                  postdec2 000FDD                    postinc0 000FEE                    postinc2 000FDE  
                _PORTBbits 000F81                 _updateTime 1558                _CCP1CONbits 000FBD  
              printf@width 001B              ??_displayLogs 001E                ?_homescreen 0001  
           __end_of___wmul 17FE                ?_initialize 0001             __end_of_printf 12B2  
      start_initialization 183E                updateTime@j 0004          ??_I2C_Master_Init 0012  
        ??_I2C_Master_Read 0002          ??_I2C_Master_Wait 0001          ??_I2C_Master_Stop 0002  
                 ??___wmul 0005           __CFG_LPT1OSC$OFF 000000                   ??_printf 0010  
      __end_of_displayLogs 1460                __pbssCOMRAM 0029                ?_updateTime 0001  
                 ?_PWM1off 0001        __size_of_homescreen 0062      __size_of_keyinterrupt 0014  
      __size_of_initialize 0076           _I2C_Master_Start 18C2           _I2C_Master_Write 18A6  
        __size_of_keycheck 0014           ___lwdiv@dividend 0001          __CFG_CCP2MX$PORTC 000000  
                _lcdNibble 167A                   ?___lldiv 0001                   PWM1@duty 0001  
                 ?___lwdiv 0001                   ?_lcdInst 0001                   ?_readADC 0001  
                 ?_initLCD 0001                __smallconst 1000                   ?_isdigit 0001  
             _keyinterrupt 1854                  _hexpowers 1012           ___lwdiv@quotient 0005  
           __size_of_putch 000C             ___wmul@product 0005                   _LATDbits 000F8C  
                 _LATEbits 000F8D                   _PIR2bits 000FA1           __CFG_WDTPS$32768 000000  
      __size_of_updateTime 0066                 ?_lcdNibble 0001                _displayLogs 13B6  
               _ADCON0bits 000FC2          ___wmul@multiplier 0001              lcdNibble@data 0002  
               printf@flag 0017              lcdNibble@temp 0001                 printf@prec 001A  
      I2C_Master_Read@temp 0003           __size_of_PWM1off 000A                 _EECON1bits 000FA6  
                 __Hrparam 0000                   __Lrparam 0000         __CFG_BOREN$SBORDIS 000000  
             ??_homescreen 001E           __size_of___lldiv 0082           __size_of___lwdiv 0052  
           readADC@channel 0002               ??_initialize 0016                _isdigit$882 0002  
         __size_of_lcdInst 000C            _I2C_Master_Init 1620           __size_of_readADC 0022  
          _I2C_Master_Read 17B2           __size_of_initLCD 0046            _I2C_Master_Wait 187C  
          _I2C_Master_Stop 18BA           __size_of_isdigit 001E            ___lwdiv@divisor 0003  
          ___lwdiv@counter 0007                   __ptext10 176C                   __ptext11 1620  
                 __ptext20 189A                   __ptext12 1460                   __ptext21 167A  
                 __ptext13 15BE                   __ptext22 1868                   __ptext14 13B6  
                 __ptext23 18B0                   __ptext15 10BE                   __ptext24 1722  
                 __ptext16 188E                   __ptext17 1820                   __ptext18 17D8  
                 __ptext19 16D0              __size_of_PWM1 004A         __end_of_homescreen 1620  
                 _keycheck 1868              __size_of_main 0104                   _currtime 101A  
                 _keypress 0030         __end_of_initialize 1558                ??_lcdNibble 0001  
                printf@idx 0016                  printf@val 0018                  putch@data 0003  
 __end_of_I2C_Master_Start 18CA                _OSCTUNEbits 000F9B   __end_of_I2C_Master_Write 18B0  
             ??_updateTime 0004                   isdigit@c 0003           ___lldiv@dividend 0001  
                 printf@ap 0014         __end_of_updateTime 15BE    __end_of_I2C_Master_Init 167A  
  __end_of_I2C_Master_Read 17D8    __end_of_I2C_Master_Wait 188E    __end_of_I2C_Master_Stop 18C2  
              lcdInst@data 0003           ___lldiv@quotient 0009          I2C_Master_Write@d 0002  
